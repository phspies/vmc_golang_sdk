openapi: 3.0.1
info:
  title: VMware Cloud APIs
  description: |
    * All VMware Cloud APIs require a valid authentication token; which can be obtained by issuing a `POST`:
      ```
      curl -s -X POST \
          -H "Content-Type: application/json" \
          https://console.cloud.vmware.com/csp/gateway/am/api/auth/api-tokens/authorize?refresh_token={refresh-token}
      ```
    * This CSP API is defined at: https://console.cloud.vmware.com/csp/gateway/am/api/swagger-ui.html#/Authentication/getAccessTokenByApiRefreshTokenUsingPOST

    * The `refresh_token` used to get a valid authentication token can be obtained after successful login to
      following URL via a web browser: https://console.cloud.vmware.com/csp/gateway/portal/#/user/tokens.
    * Most VMware Cloud APIs require an org identifier.
      This can be obtained by issuing a `GET` on `/vmc/api/orgs` and extracting the `id` field
  termsOfService: https://vmc.vmware.com/terms-and-conditions
  contact:
    name: VMware
  license:
    name: Copyright (c) 2016-2018 VMware, Inc. All rights reserved.
  version: "1.0"
  x-vmw-vapi-codegenconfig:
    package-name: com.vmware.vmc
    tag-resources-by-url-path: true
servers:
- url: https://vmc.vmware.com/vmc/api
security:
- api_key: []
tags:
- name: orgs
  description: Organizations
- name: subscription
  description: Subscriptions
- name: task
  description: Tasks
- name: sddc
  description: SDDCs
- name: publicip
  description: SDDC Public IPs
- name: esx
  description: ESX Hosts
- name: network
  description: SDDC Networks
- name: dns
  description: DNS
- name: reservations
  description: Reservations and Maintenance Windows
- name: account-linking
  description: AWS Account Connection Operations
- name: sddc-template
  description: SDDC Configuration Template
- name: troubleshooting
  description: Network Troubleshooting
- name: tbrs
  description: Ticket Based Reservation Service
- name: storage
  description: General storage APIs
- name: config-storage
  description: Storage configuration APIs
- name: edges
  description: Operations on management and compute gateway (NSX Edges).
- name: sddc-networks
  description: Operations on SDDC Networks.
paths:
  /orgs/{org}/tbrs/support-window/{id}:
    put:
      tags:
      - tbrs
      description: Move Sddc to new support window
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: Target Support Window ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: SDDC to move
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SddcId'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportWindowId'
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Feature does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: tbrs
      x-vmw-vapi-methodname: put
      x-codegen-request-body-name: sddcId
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/statistics/dashboard/firewall:
    get:
      tags:
      - edges
      description: Retrieve firewall dashboard statistics for a management or compute
        gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: interval
        in: query
        description: 60 min by default, can be given as 1 - 60 min, oneDay, oneWeek,
          oneMonth, oneYear.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dashboardStatistics'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.statistics.dashboard.firewall
  /orgs/{org}/sddcs/{sddc}/publicips/{id}:
    get:
      tags:
      - sddc
      - publicip
      summary: Get one public IP for a SDDC
      description: Get one public IP for a SDDC
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: ip allocation id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SddcPublicIp'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Cannot find the public IP with given IP address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: publicips
      x-vmw-vapi-methodname: get
    delete:
      tags:
      - sddc
      - publicip
      summary: Free one public IP for a SDDC
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: ip allocation id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: The sddc is not in a state that's valid for updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Access not allowed to the operation for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Cannot find the public IP with given IP address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: publicips
      x-vmw-vapi-methodname: delete
    patch:
      tags:
      - sddc
      - publicip
      summary: Attach or detach a public IP to workload VM for a SDDC
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: ip allocation id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: action
        in: query
        description: |
          Type of action as 'attach', 'detach', 'reattach', or 'rename'.
          For 'attch', the public IP must not be attached and 'associated_private_ip'
          in the payload needs to be set with a workload VM private IP.
          For 'detach', the public IP must be attached and 'associated_private_ip'
          in the payload should not be set with any value.
          For 'reattach', the public IP must be attached and 'associated_private_ip'
          in the payload needs to be set with a new workload VM private IP.
          For 'rename', the 'name' in the payload needs to have a new name string.
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: SddcPublicIp object to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SddcPublicIp'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: The sddc is not in a state that's valid for updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Access not allowed to the operation for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Cannot find the public IP with given IP address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: publicips
      x-vmw-vapi-methodname: update
      x-codegen-request-body-name: SddcPublicIp object
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/nat/config:
    get:
      tags:
      - edges
      description: Retrieve NAT configuration for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nat'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.nat.config
    put:
      tags:
      - edges
      description: Modify NAT configuration for a management or compute gateway (NSX
        Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nat'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: update
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.nat.config
      x-codegen-request-body-name: nat
    delete:
      tags:
      - edges
      description: Delete all NAT configuration for the specified management or compute
        gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: delete
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.nat.config
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/dns/statistics:
    get:
      tags:
      - edges
      description: Retrieve DNS server statistics for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dnsStatusAndStats'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.dns.statistics
  /orgs/{org}/reservations:
    get:
      tags:
      - reservations
      summary: Get all reservations for this org
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaintenanceWindowEntry'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Access not allowed to the operation for the current user
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
      deprecated: true
      x-vmc-ui-servicename: reservations
      x-vmw-vapi-methodname: list
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/ipsec/config:
    get:
      tags:
      - edges
      description: Retrieve IPsec VPN configuration for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: showSensitiveData
        in: query
        description: Set to true to show sensitive data. Default value is false.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ipsec'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.ipsec.config
    put:
      tags:
      - edges
      description: Modify IPsec VPN configuration for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: IPsec Configuration dto object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ipsec'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: update
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.ipsec.config
      x-codegen-request-body-name: ipsec
    delete:
      tags:
      - edges
      description: Delete IPsec VPN configuration for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: delete
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.ipsec.config
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/firewall/config/rules/{ruleId}:
    get:
      tags:
      - edges
      description: Retrieve a specific firewall rule for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        description: Rule Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nsxfirewallrule'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.firewall.config.rules
    put:
      tags:
      - edges
      description: Modify the specified firewall rule for a management or compute
        gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        description: Rule Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nsxfirewallrule'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: update
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.firewall.config.rules
      x-codegen-request-body-name: nsxfirewallrule
    delete:
      tags:
      - edges
      description: Delete a specific firewall rule for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        description: Rule Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: delete
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.firewall.config.rules
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges:
    get:
      tags:
      - edges
      description: Retrieve information about all management and compute gateways
        and other routers (NSX Edges).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeType
        in: query
        description: Retrieve records matching NSX Edge type ('gatewayServices' or
          'distributedRouter'). Specify gatewayServices to find management and compute
          gateways in your SDDC.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: prevEdgeId
        in: query
        description: Provide Edge ID as prevEdgeId to serve as reference for startIndex.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startIndex
        in: query
        description: Start index for the current page. Default is 0.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Number of records per page. Default is 256.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sortOrderAscending
        in: query
        description: Set to true to fetch records in ascending sorted order.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sortBy
        in: query
        description: Sort records using one of the column names (id, name, description,
          tenantId, size, enableFips).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Filter records matching the NSX Edge ID, name or description.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: LDRname
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pagedEdgeList'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges
  /orgs/{org}/sddcs/{sddcId}/addons/{addonType}/credentials:
    get:
      tags:
      - credentials
      - sddc
      - addons
      - hcx
      summary: List all the credentials assoicated with an addon type with in a SDDC
      description: List all the credentials assoicated with an addon type with in
        a SDDC
      parameters:
      - name: org
        in: path
        description: Org id of the associated SDDC
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: sddcId
        in: path
        description: Id of the SDDC
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: addonType
        in: path
        description: Add on type
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - HCX
      responses:
        "200":
          description: Successfully listed all credentials
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewCredentials'
                x-content-type: application/json
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: credentials
      x-vmw-vapi-methodname: list
    post:
      tags:
      - credentials
      - sddc
      - addons
      - hcx
      summary: Associate a new add on credentials with the SDDC such as HCX
      description: Associated a new add on credentials with the SDDC such as HCX
      parameters:
      - name: org
        in: path
        description: Org id of the associated SDDC
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: sddcId
        in: path
        description: Id of the SDDC
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: addonType
        in: path
        description: Add on type
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - HCX
      requestBody:
        description: Credentials creation payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCredentials'
        required: true
      responses:
        "201":
          description: Credentials created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCredentials'
        "400":
          description: Invalid input
          content: {}
        "403":
          description: Forbidden
          content: {}
        "409":
          description: Credentials with same name exists with in the scope of addOnType
          content: {}
      x-vmc-ui-servicename: credentials
      x-vmw-vapi-methodname: create
      x-codegen-request-body-name: credentials
  /orgs/{org}/account-link/connected-accounts/{linkedAccountPathId}:
    delete:
      tags:
      - account-linking
      summary: Delete a particular connected (linked) account.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: linkedAccountPathId
        in: path
        description: The linked connected account identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: forceEvenWhenSddcPresent
        in: query
        description: When true, forcibly removes a connected account even when SDDC's
          are still linked to it.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsCustomerConnectedAccount'
        "400":
          description: An invalid connected account ID was specified, or the connection
            still has SDDCs active on it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: connected-accounts
      x-vmw-vapi-methodname: delete
  /orgs/{org}/sddcs/{sddc}/networks/4.0/sddc/networks/{networkId}:
    get:
      tags:
      - sddc-networks
      description: Retrieve information about a network in an SDDC.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: networkId
        in: path
        description: Logical Network Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sddcNetwork'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.logical
    put:
      tags:
      - sddc-networks
      description: Modify a network in an SDDC.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: networkId
        in: path
        description: Logical Network Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sddcNetwork'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: update
      x-vmw-vapi-servicename: orgs.sddcs.networks.logical
      x-codegen-request-body-name: sddcNetwork
    delete:
      tags:
      - sddc-networks
      description: Delete a network in an SDDC.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: networkId
        in: path
        description: Logical Network Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: delete
      x-vmw-vapi-servicename: orgs.sddcs.networks.logical
  /orgs/{org}/sddcs/{sddc}/esxs:
    post:
      tags:
      - sddc
      - esx
      summary: Add/Remove one or more ESX hosts in the target cloud
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: action
        in: query
        description: |
          If = 'add', will add the esx.
          If = 'remove', will delete the esx/esxs bound to a single cluster (Cluster Id is mandatory for non cluster 1 esx remove).
          If = 'force-remove', will delete the esx even if it can lead to data loss (This is an privileged operation).
          If = 'addToAll', will add esxs to all clusters in the SDDC (This is an privileged operation).
          If = 'removeFromAll', will delete the esxs from all clusters in the SDDC (This is an privileged operation).
          If = 'attach-diskgroup', will attach the provided diskgroups to a given host (privileged).
          If = 'detach-diskgroup', will detach the diskgroups of a given host (privileged).
          Default behaviour is 'add'
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: esxConfig
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EsxConfig'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: The sddc is not in a state that's valid for updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Access not allowed to the operation for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Cannot find the SDDC with the given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: esxs
      x-vmw-vapi-methodname: create
      x-codegen-request-body-name: esxConfig
  /orgs/{org}/reservations/{reservation}/mw:
    get:
      tags:
      - reservations
      summary: get the maintenance window for this SDDC
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reservation
        in: path
        description: Reservation Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceWindowGet'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Access not allowed to the operation for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
      x-vmc-ui-servicename: reservations
      x-vmw-vapi-methodname: get
    put:
      tags:
      - reservations
      summary: update the maintenance window for this SDDC
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reservation
        in: path
        description: Reservation Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Maintenance Window
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceWindow'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceWindow'
        "400":
          description: The reservation is not in a state that's valid for updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Access not allowed to the operation for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Conflict with exiting reservation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
      x-vmc-ui-servicename: reservations
      x-vmw-vapi-methodname: put
      x-codegen-request-body-name: window
  /orgs/{org}/subscriptions/offer-instances:
    get:
      tags:
      - subscription
      summary: List all offers available for the specific product type in the specific
        region
      description: |
        List all offers available for the specific product type in the specific region
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: region
        in: query
        description: Region for the offer
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: product_type
        in: query
        description: Type of the product in offers. *This has been deprecated*. Please
          use product & type parameters
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: product
        in: query
        description: The product that you are trying to purchase, eg. host. This needs
          to be accompanied by the type parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: |
          The type/flavor of the product you are trying it purchase,eg. an `r5.metal` host.
          This needs to be accompanied by the product parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferInstancesHolder'
        "400":
          description: Bad Request. Type of the product not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: offer-instances
      x-vmw-vapi-methodname: list
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/dns/config:
    get:
      tags:
      - edges
      description: Retrieve DNS server configuration for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dnsConfig'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.dns.config
    put:
      tags:
      - edges
      description: Configure DNS server configuration for a management or compute
        gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dnsConfig'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: update
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.dns.config
      x-codegen-request-body-name: dnsConfig
    post:
      tags:
      - edges
      description: Enable or disable DNS configuration for a management or compute
        gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: enable
        in: query
        description: Set to true to enable, set to false to disable.
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: create
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.dns.config
    delete:
      tags:
      - edges
      description: Delete DNS server configuration for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: delete
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.dns.config
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/firewall/config:
    get:
      tags:
      - edges
      description: Retrieve the firewall configuration for a management or compute
        gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewallConfig'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.firewall.config
    put:
      tags:
      - edges
      description: Configure firewall for a management or compute gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewallConfig'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: update
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.firewall.config
      x-codegen-request-body-name: firewallConfig
    delete:
      tags:
      - edges
      description: Delete firewall configuration for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: delete
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.firewall.config
  /orgs/{org}/providers:
    get:
      tags:
      - orgs
      summary: Get enabled cloud providers for an organization
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AwsCloudProvider'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Organization doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: providers
      x-vmw-vapi-methodname: list
  /orgs/{org}/account-link/sddc-connections:
    get:
      tags:
      - account-linking
      summary: Get a list of SDDC connections currently setup for the customer's organization.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: query
        description: sddc
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AwsSddcConnection'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: sddc-connection
      x-vmw-vapi-methodname: get
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/statistics/interfaces/internal:
    get:
      tags:
      - edges
      description: Retrieve internal interface statistics for a management or compute
        gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startTime
        in: query
        description: Show statistics from this start time (in milliseconds since epoch).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: endTime
        in: query
        description: Show statistics until this end time (in milliseconds since epoch).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cbmStatistics'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.statistics.interfaces.internal
  /orgs/{org}/subscriptions/{subscription}:
    get:
      tags:
      - subscription
      summary: Get a subscription
      description: Get subscription details for a given subscription id
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscription
        in: path
        description: SubscriptionId for an sddc.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetails'
        "404":
          description: Not Found
          content: {}
        "500":
          description: |
            Server error.
            Check retryable flag to see if request should be retried.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: subscription
      x-vmw-vapi-methodname: get
  /orgs/{org}/sddcs/{sddc}/clusters/{cluster}/config/constraints:
    get:
      tags:
      - config-storage
      summary: Get storage size constraints on existing cluster.
      description: |
        This API provides the storage choices available when reconfiguring storage in a cluster. The constraints returned will give vSAN reconfiguration biases and available vSAN capacities per reconfiguration bias. The constraints also indicate the default vSAN capacity per reconfiguration biases as well as the default reconfiguration bias.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cluster
        in: path
        description: cluster identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expected_num_hosts
        in: query
        description: |
          The expected number of hosts in the cluster. If not specified, returned is based on current number of hosts in the cluster.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VsanClusterReconfigConstraints'
        "400":
          description: Invalid or missing parameters
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: clusterConfigure
      x-vmw-vapi-methodname: get
  /orgs/{org}/sddcs:
    get:
      tags:
      - sddc
      summary: List all the SDDCs of an organization
      description: List all the SDDCs of an organization
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: includeDeleted
        in: query
        description: When true, forces the result to also include deleted SDDCs.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sddc'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-methodname: list
    post:
      tags:
      - sddc
      summary: Provision SDDC
      description: Provision an SDDC in target cloud
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: validateOnly
        in: query
        description: When true, only validates the given sddc configuration without
          provisioning.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: sddcConfig
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsSddcConfig'
        required: true
      responses:
        "200":
          description: OK, only if 'validateOnly' param is set to true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "202":
          description: Accepted, only if 'validateOnly' param is is set to false
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-methodname: create
      x-codegen-request-body-name: sddcConfig
  /orgs/{org}/tbrs/reservation:
    post:
      tags:
      - tbrs
      description: Retreive all reservations for all SDDCs in this org
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: SDDCs and/or states to query
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SddcStateRequest'
        required: false
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/ReservationWindow'
                x-content-type: application/json
        "400":
          description: Bad Call
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: tbrs
      x-vmw-vapi-methodname: post
      x-codegen-request-body-name: sddcState
  /orgs/{org}/sddcs/provision-spec:
    get:
      tags:
      - sddc
      summary: Get sddc provision spec for an org
      description: Get sddc provision spec for an org
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionSpec'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: |
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: provisionSpec
      x-vmw-vapi-methodname: get
  /orgs/{org}:
    get:
      tags:
      - orgs
      summary: Get details of organization
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Organization doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: orgs
      x-vmw-vapi-methodname: get
  /orgs/{org}/sddcs/{sddcId}/addons/{addonType}/credentials/{name}:
    get:
      tags:
      - credentials
      - sddc
      - addons
      - hcx
      summary: Get credential details by name
      description: Get credential details by name
      parameters:
      - name: org
        in: path
        description: Org id of the associated SDDC
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: sddcId
        in: path
        description: Id of the SDDC
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: addonType
        in: path
        description: Add on type
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - HCX
      - name: name
        in: path
        description: name of the credentials
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Get credential details by name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCredentials'
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: credentials
      x-vmw-vapi-methodname: get
    put:
      tags:
      - credentials
      - sddc
      - addons
      - hcx
      summary: Update credential details
      description: Update credential details
      parameters:
      - name: org
        in: path
        description: Org id of the associated SDDC
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: sddcId
        in: path
        description: Id of the SDDC
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: addonType
        in: path
        description: Add on type
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - HCX
      - name: name
        in: path
        description: name of the credentials
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Credentials update payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCredentials'
        required: true
      responses:
        "200":
          description: Updated credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCredentials'
        "400":
          description: Bad request
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: credentials
      x-vmw-vapi-methodname: update
      x-codegen-request-body-name: credentials
  /orgs:
    get:
      tags:
      - orgs
      summary: Get organizations associated with calling user.
      description: |
        Return a list of all organizations the calling user (based on credential) is authorized on.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: orgs
      x-vmw-vapi-methodname: list
  /orgs/{org}/tbrs/support-window:
    get:
      tags:
      - tbrs
      description: Get all available support windows
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: minimumSeatsAvailable
        in: query
        description: minimum seats available (used as a filter)
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: createdBy
        in: query
        description: user name which was used to create the support window (used as
          a filter)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success, return list of available Support Windows
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupportWindow'
                x-content-type: application/json
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: No support windows are available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: tbrs
      x-vmw-vapi-methodname: get
  /orgs/{org}/sddcs/{sddc}/clusters:
    post:
      tags:
      - sddc
      summary: Add a cluster in the target sddc.
      description: Creates a new cluster in customers sddcs with passed clusterConfig.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: clusterConfig
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterConfig'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: The sddc is not in a state that's valid for updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Access not allowed to the operation for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Cannot find the cluster with the given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: clusters
      x-vmw-vapi-methodname: create
      x-codegen-request-body-name: clusterConfig
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/dhcp/leaseInfo:
    get:
      tags:
      - edges
      description: Retrieve DHCP leaseinfo of a management or compute gateway (NSX
        Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dhcpLeases'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.dhcp.leaseinfo
  /orgs/{org}/sddcs/{sddc}/convert:
    post:
      tags:
      - sddc
      summary: Converts a one host SDDC to a four node DEFAULT SDDC.
      description: This API converts a one host SDDC to a four node DEFAULT SDDC.
        It takes care of configuring and upgrading the vCenter configurations on the
        SDDC for high availability and data redundancy.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: The sddc is not in a state that's valid for updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Access not allowed to the operation for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Cannot find the SDDC with given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-methodname: create
  /orgs/{org}/sddcs/{sddc}/publicips:
    get:
      tags:
      - sddc
      - publicip
      summary: List all public IPs for a SDDC
      description: list all public IPs for a SDDC
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SddcPublicIp'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Cannot find the SDDC with given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: publicips
      x-vmw-vapi-methodname: list
    post:
      tags:
      - sddc
      - publicip
      summary: Allocate public IPs for a SDDC
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: allocation spec
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SddcAllocatePublicIpSpec'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: The sddc is not in a state that's valid for updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Access not allowed to the operation for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Cannot find the SDDC with given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: publicips
      x-vmw-vapi-methodname: create
      x-codegen-request-body-name: spec
  /orgs/{org}/sddcs/{sddc}/dns/private:
    put:
      tags:
      - sddc
      - dns
      summary: Update the DNS records of management VMs to use private IP addresses
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: The sddc is not in a state that's valid for updates or invalid
            body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: dns-private
      x-vmw-vapi-methodname: update
  /orgs/{org}/sddcs/{sddc}/sddc-template:
    get:
      tags:
      - sddc-template
      summary: Get configuration template for an SDDC
      description: Get configuration template for  an SDDC
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SddcTemplate'
        "400":
          description: SDDC is in a state that cannot be use for generating configuration
            template
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Cannot find the SDDC with given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: sddc-template
      x-vmw-vapi-methodname: get
  /orgs/{org}/sddcs/{sddc}:
    get:
      tags:
      - sddc
      summary: Get SDDC
      description: Get SDDC
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sddc'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Cannot find the SDDC with given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-methodname: get
    delete:
      tags:
      - sddc
      summary: Delete SDDC
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: retain_configuration
        in: query
        description: |
          If = 'true', the SDDC's configuration is retained as a template for later use. This flag is applicable only to SDDCs in ACTIVE state.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: template_name
        in: query
        description: |
          Only applicable when retainConfiguration is also set to 'true'. When set, this value will be used as the name of the SDDC configuration template generated.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: force
        in: query
        description: |
          If = true, will delete forcefully. Beware: do not use the force flag if there is a chance an active provisioning or deleting task is running against this SDDC. This option is restricted.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: The sddc is not in a state that's valid for deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Access not allowed to the operation for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Cannot find the SDDC with given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-methodname: delete
    patch:
      tags:
      - sddc
      summary: Patch SDDC
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Patch request for the SDDC
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SddcPatchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sddc'
        "400":
          description: SDDC cannot be patched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Cannot find the SDDC with given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: sddcs
      x-vmw-vapi-methodname: patch
      x-codegen-request-body-name: SddcPatchRequest
  /orgs/{org}/account-link/compatible-subnets-async:
    get:
      tags:
      - account-linking
      summary: Gets a customer's compatible subnets for account linking via a task.
        The information is returned as a member of the task (found in task.params['subnet_list_result']
        when you are notified it is complete), and it's documented under ref /definitions/AwsCompatibleSubnets
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: linkedAccountId
        in: query
        description: The linked connected account identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: region
        in: query
        description: The region of the cloud resources to work in
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sddc
        in: query
        description: sddc
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: instanceType
        in: query
        description: The server instance type to be used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sddcType
        in: query
        description: The sddc type to be used. (1NODE, SingleAZ, MultiAZ)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: numOfHosts
        in: query
        description: The number of hosts
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: compatible-subnets-async
      x-vmw-vapi-methodname: get
    post:
      tags:
      - account-linking
      summary: Sets which subnet to use to link accounts and finishes the linking
        process via a task
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The subnet chosen by the customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsSubnet'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: compatible-subnets-async
      x-vmw-vapi-methodname: post
      x-codegen-request-body-name: aws_subnet
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/l2vpn/config/statistics:
    get:
      tags:
      - edges
      description: Retrieve L2 VPN statistics for a compute gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/l2vpnStatusAndStats'
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.l2vpn.config.statistics
  /orgs/{org}/account-link:
    get:
      tags:
      - account-linking
      summary: Gets a link that can be used on a customer's account to start the linking
        process.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content: {}
      x-vmc-ui-servicename: accounts
      x-vmw-vapi-methodname: get
  /orgs/{org}/payment-methods:
    get:
      tags:
      - orgs
      summary: Get payment methods of organization
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: defaultFlag
        in: query
        description: When true, will only return default payment methods.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethodInfo'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Organization doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: orgs
      x-vmw-vapi-methodname: getOrgPaymentMethods
  /orgs/{org}/subscriptions/products:
    get:
      tags:
      - subscription
      summary: List of all the products that are available for purchase.
      description: |
        List of all the products that are available for purchase.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionProducts'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "500":
          description: Internal server error
          content: {}
      x-vmc-ui-servicename: products
      x-vmw-vapi-methodname: list
  /orgs/{org}/sddcs/{sddc}/clusters/{cluster}:
    delete:
      tags:
      - sddc
      summary: Delete a cluster.
      description: This is a force operation which will delete the cluster even if
        there can be a data loss. Before calling this operation, all the VMs should
        be powered off.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cluster
        in: path
        description: cluster identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: The sddc is not in a state that's valid for updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Access not allowed to the operation for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Cannot find the cluster with the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: clusters
      x-vmw-vapi-methodname: delete
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/statistics/interfaces:
    get:
      tags:
      - edges
      description: Retrieve interface statistics for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startTime
        in: query
        description: Show statistics from this start time (in milliseconds since epoch).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: endTime
        in: query
        description: Show statistics until this end time (in milliseconds since epoch).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cbmStatistics'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.statistics.interfaces
  /orgs/{org}/sddcs/{sddc}/networks/4.0/sddc/networks:
    get:
      tags:
      - sddc-networks
      description: Retrieve all networks in an SDDC.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageSize
        in: query
        description: Page size for pagination.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startIndex
        in: query
        description: Start index of page.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: prevSddcNetworkId
        in: query
        description: Previous logical network id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sortOrderAscending
        in: query
        description: Sort order ascending.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPageSddcNetwork'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.logical
    post:
      tags:
      - sddc-networks
      description: Create a network in an SDDC.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sddcNetwork'
        required: true
      responses:
        "201":
          description: Created
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: create
      x-vmw-vapi-servicename: orgs.sddcs.networks.logical
      x-codegen-request-body-name: sddcNetwork
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/nat/config/rules/{ruleId}:
    put:
      tags:
      - edges
      description: Update the specific NAT rule for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        description: Rule Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nsxnatrule'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: update
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.nat.config.rules
      x-codegen-request-body-name: nsxnatrule
    delete:
      tags:
      - edges
      description: Delete the specific NAT rule for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        description: Rule Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: delete
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.nat.config.rules
  /locale:
    post:
      tags:
      - locale
      summary: Set locale for the session
      description: Sets the locale for the session which is used for translating responses.
      requestBody:
        description: The locale to be set.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmcLocale'
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmcLocale'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: locale
      x-vmw-vapi-methodname: set
      x-codegen-request-body-name: vmcLocale
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/firewall/config/rules:
    post:
      tags:
      - edges
      description: Append firewall rules for a management or compute gateway (NSX
        Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewallRules'
        required: true
      responses:
        "201":
          description: Created
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: add
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.firewall.config.rules
      x-codegen-request-body-name: firewallRules
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/statistics/dashboard/interface:
    get:
      tags:
      - edges
      description: Retrieve interface dashboard statistics for a management or compute
        gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: interval
        in: query
        description: 60 min by default, can be given as 1 - 60 min, oneDay, oneWeek,
          oneMonth, oneYear.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dashboardStatistics'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.statistics.dashboard.interface
  /orgs/{org}/storage/cluster-constraints:
    get:
      tags:
      - storage
      summary: Get constraints on cluster storage size for EBS-backed clusters.
      description: Get constraints on cluster storage size for EBS-backed clusters.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: provider
        in: query
        description: Cloud storage provider ID (example AWS)
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: num_hosts
        in: query
        description: Number of hosts in cluster
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: one_node_reduced_capacity
        in: query
        description: Whether this sddc is reduced capacity 1NODE.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VsanConfigConstraints'
        "400":
          description: Invalid or missing parameters
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: storage
      x-vmw-vapi-methodname: get
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/statistics/dashboard/ipsec:
    get:
      tags:
      - edges
      description: Retrieve ipsec dashboard statistics for a management or compute
        gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: interval
        in: query
        description: 60 min by default, can be given as 1 - 60 min, oneDay, oneWeek,
          oneMonth, oneYear.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dashboardStatistics'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.statistics.dashboard.ipsec
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/firewall/statistics/{ruleId}:
    get:
      tags:
      - edges
      description: Retrieve statistics for a specific firewall rule for a management
        or compute gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        description: Rule Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewallRuleStats'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.firewall.statistics
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/status:
    get:
      tags:
      - edges
      description: Retrieve the status of the specified management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: getlatest
        in: query
        description: If true, retrieve the status live from the gateway (NSX Edge).
          If false, retrieve the latest available status from database.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: detailed
        in: query
        description: If true, retrieve detailed status per feature. If false, retrieve
          aggregated summary of status per feature.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edgeStatus'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.status
  /orgs/{org}/tasks:
    get:
      tags:
      - task
      summary: List all tasks for organization
      description: |
        List all tasks with optional filtering.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: $filter
        in: query
        description: |
          Filter expression

          Binary Operators: 'eq', 'ne', 'lt', 'gt', 'le', 'ge', 'mul', 'div', 'mod', 'sub', 'add'
          Unary Operators: 'not', '-' (minus)
          String Operators: 'startswith', 'endswith', 'length', 'contains', 'tolower', 'toupper',

          Nested attributes are composed using '.'

          Dates must be formatted as yyyy-MM-dd or yyyy-MM-ddTHH:mm:ss[.SSS]Z

          Strings should enclosed in single quotes, escape single quote with two single quotes

          The special literal 'created' will be mapped to the time the resource was first created.

          Examples:

            - $filter=(updated gt 2016-08-09T13:00:00Z) and (org_id eq 278710ff4e-6b6d-4d4e-aefb-ca637f38609e)
            - $filter=(created eq 2016-08-09)
            - $filter=(created gt 2016-08-09) and (sddc.status eq 'READY')
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: tasks
      x-vmw-vapi-methodname: list
  /orgs/{org}/sddcs/{sddc}/networks/4.0/sddc/cgws/{edgeId}/l2vpn/config:
    get:
      tags:
      - edges
      description: Retrieve SDDC L2 VPN configuration.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Compute Gateway Edge Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: showSensitiveData
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nsxl2vpn'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.cgws.l2vpn.config
    put:
      tags:
      - edges
      description: Modify SDDC L2 VPN configuration
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Compute Gateway Edge Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nsxl2vpn'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: update
      x-vmw-vapi-servicename: orgs.sddcs.networks.cgws.l2vpn.config
      x-codegen-request-body-name: nsxl2vpn
    delete:
      tags:
      - edges
      description: Delete SDDC L2 VPN configuration.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Compute Gateway Edge Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: delete
      x-vmw-vapi-servicename: orgs.sddcs.networks.cgws.l2vpn.config
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/nat/config/rules:
    post:
      tags:
      - edges
      description: Append a NAT rule for a management or compute gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/natRules'
        required: true
      responses:
        "201":
          description: Created
          content: {}
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: add
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.nat.config.rules
      x-codegen-request-body-name: natRules
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/statistics/interfaces/uplink:
    get:
      tags:
      - edges
      description: Retrieve uplink interface statistics for a management or compute
        gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startTime
        in: query
        description: Show statistics from this start time (in milliseconds since epoch).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: endTime
        in: query
        description: Show statistics until this end time (in milliseconds since epoch).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cbmStatistics'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided.
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.statistics.interfaces.uplink
  /orgs/{org}/subscriptions:
    get:
      tags:
      - subscription
      summary: Get all subscriptions
      description: Returns all subscriptions for a given org id
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offer_type
        in: query
        description: |
          Offer Type
           * `ON_DEMAND` - on-demand subscription
           * `TERM` - term subscription
           * All subscriptions if not specified
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - TERM
          - ON_DEMAND
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionDetails'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: |
            Server error.
            Check retryable flag to see if request should be retried.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: subscriptions
      x-vmw-vapi-methodname: get
    post:
      tags:
      - subscription
      summary: Create a subscription
      description: Initiates the creation of a subscription
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: subscriptionRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "500":
          description: |
            Server error.
            Check retryable flag to see if request should be retried.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: subscriptions
      x-vmw-vapi-methodname: create
      x-codegen-request-body-name: subscriptionRequest
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/vnics:
    get:
      tags:
      - edges
      description: Retrieve all interfaces for the specified management or compute
        gateway (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vnics'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.vnics
  /orgs/{org}/sddcs/{sddc}/clusters/{cluster}/reconfigure:
    post:
      tags:
      - sddc
      - clusters
      summary: Initiate a reconfiguration for the cluster.
      description: This reconfiguration will handle changing both the number of hosts
        and the cluster storage capacity.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cluster
        in: path
        description: cluster identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: clusterReconfigureParams
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterReconfigureParams'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: |
            Bad Request. The SDDC is not in a valid state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Access not allowed to the operation for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Cannot find the cluster with the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: clusters
      x-vmw-vapi-methodname: clusterReconfig
      x-codegen-request-body-name: clusterReconfigureParams
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/ipsec/statistics:
    get:
      tags:
      - edges
      description: Retrieve IPsec VPN statistics for a management or compute gateway
        (NSX Edge).
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpsecStatusAndStats'
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.ipsec.statistics
  /orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/peerconfig:
    get:
      tags:
      - edges
      description: Retrieve IPsec VPN peer configuration for a management or compute
        gateway (NSX Edge). The response output is free form text generated as per
        the template specified as request parameter input.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: edgeId
        in: path
        description: Edge Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: objecttype
        in: query
        description: Specify object type identifier. Valid value is 'ipsecSiteConfig'.
          Required.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: objectid
        in: query
        description: Specify object identifier, for example 'ipsecsite-1' for IPsec
          Site configuration. Required.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: templateid
        in: query
        description: Specify template identifier and response format. Valid values
          are 'text', 'json' and 'xml'. Default is 'text'. Optional.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "400":
          description: Bad request. Request object passed is invalid.
          content: {}
        "403":
          description: Forbidden. Authorization header not provided
          content: {}
        "404":
          description: Not found. Requested object not found.
          content: {}
      x-vmw-vapi-methodname: get
      x-vmw-vapi-servicename: orgs.sddcs.networks.edges.peerconfig
  /orgs/{org}/sddc-templates/{templateId}:
    get:
      tags:
      - sddc-template
      summary: Get configuration template by given template id.
      description: Get configuration template by given template id.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateId
        in: path
        description: SDDC Template identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SddcTemplate'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Cannot find the SDDC Template with given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: sddc-template
      x-vmw-vapi-methodname: get
    delete:
      tags:
      - sddc-template
      summary: Delete SDDC template identified by given id.
      description: Delete SDDC template identified by given id.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateId
        in: path
        description: SDDC Template identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: sddc-template
      x-vmw-vapi-methodname: delete
  /orgs/{org}/sddcs/{sddc}/management-vms/{managementVmId}/dns/{ipType}:
    put:
      tags:
      - sddc
      - dns
      summary: Update the DNS records of management VMs to use public or private IP
        addresses
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: managementVmId
        in: path
        description: the management VM ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ipType
        in: path
        description: the ip type to associate with FQDN in DNS
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - public
          - private
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: The sddc is not in a state that's valid for updates or invalid
            body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: management-vms
      x-vmw-vapi-methodname: update
  /orgs/{org}/account-link/map-customer-zones:
    post:
      tags:
      - account-linking
      summary: Creates a task to re-map customer's datacenters across zones.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The zones request information about who to map and what to map.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapZonesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: customer-zone-mapping
      x-vmw-vapi-methodname: post
      x-codegen-request-body-name: mapZonesRequest
  /orgs/{org}/account-link/compatible-subnets:
    get:
      tags:
      - account-linking
      summary: Gets a customer's compatible subnets for account linking
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: linkedAccountId
        in: query
        description: The linked connected account identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: region
        in: query
        description: The region of the cloud resources to work in
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sddc
        in: query
        description: sddc
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: forceRefresh
        in: query
        description: When true, forces the mappings for datacenters to be refreshed
          for the connected account.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: instanceType
        in: query
        description: The server instance type to be used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sddcType
        in: query
        description: The sddc type to be used. (1NODE, SingleAZ, MultiAZ)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: numOfHosts
        in: query
        description: The number of hosts
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsCompatibleSubnets'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: compatible-subnets
      x-vmw-vapi-methodname: get
    post:
      tags:
      - account-linking
      summary: Sets which subnet to use to link accounts and finishes the linking
        process
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsSubnet'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: compatible-subnets
      x-vmw-vapi-methodname: post
  /orgs/{org}/account-link/connected-accounts:
    get:
      tags:
      - account-linking
      summary: Get a list of connected accounts
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: provider
        in: query
        description: The cloud provider of the SDDC (AWS or ZeroCloud). Default value
          is AWS.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AwsCustomerConnectedAccount'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: connected-accounts
      x-vmw-vapi-methodname: get
  /orgs/{org}/tasks/{task}:
    get:
      tags:
      - task
      summary: Get task details
      description: |
        Retrieve details of a task.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: task
        in: path
        description: Task identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Cannot find the task with given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: tasks
      x-vmw-vapi-methodname: get
    post:
      tags:
      - task
      summary: Modify an existing task
      description: |
        Request that a running task be canceled.
        This is advisory only, some tasks may not be cancelable, and some tasks might take
        an arbitrary amount of time to respond to a cancelation request. The task must be monitored
        to determine subsequent status.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: task
        in: path
        description: Task identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: action
        in: query
        description: If = 'cancel', task will be canceled
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: Invalid action or bad argument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Cannot find the task with given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-vmc-ui-servicename: tasks
      x-vmw-vapi-methodname: update
  /orgs/{org}/sddcs/{sddc}/dns/public:
    put:
      tags:
      - sddc
      - dns
      summary: Update the DNS records of management VMs to use public IP addresses
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: The sddc is not in a state that's valid for updates or invalid
            body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: dns-public
      x-vmw-vapi-methodname: update
  /orgs/{org}/sddcs/{sddc}/networking/connectivity-tests:
    get:
      tags:
      - network
      - troubleshooting
      summary: Retrieve metadata for connectivity tests.
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityValidationGroups'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: network-connectivity-checker
      x-vmw-vapi-methodname: get
    post:
      tags:
      - network
      - troubleshooting
      summary: ConnectivityValidationGroupResultWrapper will be  available at task.params['test_result'].
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sddc
        in: path
        description: Sddc Identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: action
        in: query
        description: |
          If = 'start', start connectivity tests.
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: request information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectivityValidationGroup'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: network-connectivity-checker
      x-vmw-vapi-methodname: post
      x-codegen-request-body-name: request_info
  /orgs/{org}/sddc-templates:
    get:
      tags:
      - sddc-template
      summary: List all available SDDC configuration templates in an organization
      description: List all available SDDC configuration templates in an organization
      parameters:
      - name: org
        in: path
        description: Organization identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SddcTemplate'
                x-content-type: application/json
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      x-vmc-ui-servicename: sddc-templates
      x-vmw-vapi-methodname: list
components:
  schemas:
    EsxHostInfo:
      type: object
      properties:
        instance_type:
          type: string
          description: Backing cloud provider instance type for cluster.
    MaintenanceWindowEntry:
      type: object
      properties:
        in_maintenance_window:
          type: boolean
          description: true if the SDDC is in the defined Mainentance Window
        reservation_schedule:
          $ref: '#/components/schemas/ReservationSchedule'
        reservation_id:
          type: string
          description: ID for reservation
          format: uuid
        in_maintenance_mode:
          type: boolean
          description: true if the SDDC is currently undergoing maintenance
        sddc_id:
          type: string
          description: SDDC ID for this reservation
          format: uuid
      example:
        reservation_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        reservation_schedule: ""
        in_maintenance_window: true
        sddc_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        in_maintenance_mode: true
    sites:
      type: object
      properties:
        sites:
          type: array
          items:
            $ref: '#/components/schemas/nsxsite'
      description: L2 VPN sites.
      example:
        sites:
        - password: password
          secureTraffic: true
          name: name
          siteId: siteId
          description: description
          userId: userId
        - password: password
          secureTraffic: true
          name: name
          siteId: siteId
          description: description
          userId: userId
    FirewallService:
      type: object
      properties:
        protocol:
          type: string
          description: protocol name, such as 'tcp', 'udp' etc.
        ports:
          type: array
          description: a list of port numbers and port ranges, such as {80, 91-95,
            99}. If not specified, defaults to 'any'.
          items:
            type: string
    Metadata:
      type: object
      properties:
        timestamp:
          type: string
          description: the timestamp for the bundle
        cycle_id:
          type: string
          description: the cycle id
      description: metadata of the sddc manifest
    dnsListeners:
      allOf:
      - $ref: '#/components/schemas/ipAddresses'
      - type: object
        properties:
          vnic:
            type: array
            description: Vnic for DNS listener.
            items:
              type: string
          type:
            type: string
        description: Dns Listeners
    dhcpLeases:
      type: object
      properties:
        timeStamp:
          type: integer
          description: The timestamp of the DHCP lease.
          format: int64
        hostLeaseInfosDto:
          $ref: '#/components/schemas/dhcpLeaseInfo'
      description: DHCP leases information
      example:
        timeStamp: 0
        hostLeaseInfosDto:
          hostLeaseInfoDtos:
          - bindingState: bindingState
            cltt: cltt
            hardwareType: hardwareType
            ipAddress: ipAddress
            tstp: tstp
            clientHostname: clientHostname
            uid: uid
            macAddress: macAddress
            nextBindingState: nextBindingState
            ends: ends
            abandoned: abandoned
            starts: starts
            tsfp: tsfp
          - bindingState: bindingState
            cltt: cltt
            hardwareType: hardwareType
            ipAddress: ipAddress
            tstp: tstp
            clientHostname: clientHostname
            uid: uid
            macAddress: macAddress
            nextBindingState: nextBindingState
            ends: ends
            abandoned: abandoned
            starts: starts
            tsfp: tsfp
    dnsViews:
      type: object
      properties:
        dnsView:
          type: array
          description: List of DNS views.
          items:
            $ref: '#/components/schemas/dnsView'
      description: DNS views.
      example:
        dnsView:
        - viewId: viewId
          viewMatch:
            ipSet:
            - ipSet
            - ipSet
            vnic:
            - vnic
            - vnic
            ipAddress:
            - ipAddress
            - ipAddress
          forwarders:
            ipAddress:
            - ipAddress
            - ipAddress
          name: name
          recursion: true
          enabled: true
        - viewId: viewId
          viewMatch:
            ipSet:
            - ipSet
            - ipSet
            vnic:
            - vnic
            - vnic
            ipAddress:
            - ipAddress
            - ipAddress
          forwarders:
            ipAddress:
            - ipAddress
            - ipAddress
          name: name
          recursion: true
          enabled: true
    SubnetInfo:
      allOf:
      - type: object
        properties:
          compatible:
            type: boolean
            description: Is this customer subnet compatible with the SDDC?
          connected_account_id:
            type: string
            description: The ID of the connected account this subnet is from.
          region_name:
            type: string
            description: The region this subnet is from.
          availability_zone:
            type: string
            description: The availability zone (customer-centric) this subnet is in.
          subnet_id:
            type: string
            description: The ID of the subnet.
          availability_zone_id:
            type: string
            description: The availability zone id (customer-centric) this subnet is
              in.
          subnet_cidr_block:
            type: string
            description: The CIDR block of the subnet.
          note:
            type: string
            description: Why a subnet is marked as not compatible. May be blank if
              compatible.
          vpc_id:
            type: string
            description: The ID of the VPC this subnet resides in.
          vpc_cidr_block:
            type: string
            description: The CIDR block of the VPC containing this subnet.
          name:
            type: string
            description: The name of the subnet. This is either the tagged name or
              the default AWS id it was given.
    ObjectType:
      type: object
      properties:
        name:
          type: string
      example:
        name: name
    edgeJob:
      type: object
      properties:
        status:
          type: string
          description: Job status.
        edgeId:
          type: string
          description: NSX Edge ID.
        module:
          type: string
          description: Module information.
        jobId:
          type: string
          description: Job ID.
        errorCode:
          type: string
          description: Error code identifying the failure of the configuration change.
        result:
          type: array
          description: Job result information.
          items:
            $ref: '#/components/schemas/result'
        startTime:
          type: string
          description: Job start time.
          format: date-time
        message:
          type: string
          description: Job message.
        endTime:
          type: string
          description: Job end time.
          format: date-time
      description: Job status information for the configuration change carried out
        on NSX Edge.
      example:
        result:
        - value: value
          key: key
        - value: value
          key: key
        jobId: jobId
        edgeId: edgeId
        module: module
        errorCode: errorCode
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        message: message
        status: status
    SupportWindowId:
      type: object
      properties:
        window_id:
          type: string
          description: Support Window ID
      example:
        window_id: window_id
    Organization:
      allOf:
      - $ref: '#/components/schemas/AbstractEntity'
      - type: object
        properties:
          org_type:
            type: string
            description: ORG_TYPE to be associated with the org
            example: CUSTOMER
          display_name:
            type: string
            example: My VMC Org
          name:
            type: string
          project_state:
            type: string
            enum:
            - CREATED
            - DELETED
          properties:
            $ref: '#/components/schemas/OrgProperties'
    OfferType:
      type: string
      enum:
      - TERM
      - ON_DEMAND
    RouteTableInfo:
      type: object
      properties:
        name:
          type: string
          description: route table name
        id:
          type: string
          description: route table id
    SubscriptionRequest:
      required:
      - commitment_term
      - offer_name
      - offer_version
      - product_type
      - quantity
      - region
      type: object
      properties:
        product:
          type: string
          description: The product for which subscription needs to be created. Refer
            /vmc/api/orgs/{orgId}/products.
        product_type:
          type: string
          description: Old identifier for product. *Deprecarted*. See product and
            type
        product_id:
          type: string
        billing_frequency:
          type: string
          description: Frequency of the billing.
        region:
          type: string
        commitment_term:
          type: string
        offer_context_id:
          type: string
        offer_version:
          type: string
        offer_name:
          type: string
        quantity:
          type: integer
        type:
          type: string
          description: The type of the product for which the subscription needs to
            be created.
        price:
          type: integer
        product_charge_id:
          type: string
      example:
        product: host
        product_type: host - deprecated
        billing_frequency: MONTHLY
        region: US_WEST_2
        commitment_term: "12"
        offer_name: VMware Cloud on AWS
        type: i3.metal
        offer_version: "1.0"
        quantity: 1
    edgeVnicAddressGroups:
      type: object
      properties:
        addressGroups:
          type: array
          description: Address group configuration of the NSX Edge vnic. Vnic can
            be configured to have more than one address group/subnets.
          items:
            $ref: '#/components/schemas/edgeVnicAddressGroup'
      description: NSX Edge vnic address group configuration details.
      example:
        addressGroups:
        - subnetPrefixLength: subnetPrefixLength
          secondaryAddresses:
            ipAddress:
            - ipAddress
            - ipAddress
            type: type
          primaryAddress: primaryAddress
          subnetMask: subnetMask
        - subnetPrefixLength: subnetPrefixLength
          secondaryAddresses:
            ipAddress:
            - ipAddress
            - ipAddress
            type: type
          primaryAddress: primaryAddress
          subnetMask: subnetMask
    dnsResponseStats:
      type: object
      properties:
        total:
          type: integer
          format: int64
        formErr:
          type: integer
          format: int64
        nxDomain:
          type: integer
          format: int64
        success:
          type: integer
          format: int64
        serverFail:
          type: integer
          format: int64
        nxrrset:
          type: integer
          format: int64
        others:
          type: integer
          format: int64
      description: DNS response statistics.
      example:
        total: 5
        serverFail: 9
        success: 7
        nxrrset: 3
        nxDomain: 2
        others: 2
        formErr: 5
    Agent:
      required:
      - provider
      type: object
      properties:
        internal_ip:
          type: string
          description: The internal IP address of the agent which is provided by the
            underlying cloud provider
        agent_url:
          type: string
          description: The accessible URL of the agent service, it is resolved to
            public IP address from the Internet and private IP address within SDDC
        management_ip:
          type: string
          description: The internal management IP address of the agent exposed to
            the SDDC, which might be different from the internal IP
        hostname_verifier_enabled:
          type: boolean
          description: Boolean flag to indicate if the agent is using FQDN in the
            certificate
        master:
          type: boolean
          description: Boolean flag to indicate if the agent is the master, only the
            master Agent is accessible
        network_netmask:
          type: string
          description: Network netmask of the agent
        network_gateway:
          type: string
          description: Network gateway of the agent
        provider:
          type: string
          description: The cloud provider
        cert_enabled:
          type: boolean
          description: Boolean flag to indicate if the agent is using CA signed certificate
        agent_state:
          type: string
          description: Agent state
          enum:
          - NOT_READY
          - DEPLOYING
          - CUSTOMIZING
          - READY
          - DELETING
          - DELETED
          - FAILED
      discriminator:
        propertyName: provider
    AwsCompatibleSubnets:
      type: object
      properties:
        customer_available_zones:
          type: array
          items:
            type: string
        vpc_map:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VpcInfoSubnets'
      example:
        customer_available_zones:
        - customer_available_zones
        - customer_available_zones
        vpc_map:
          key: ""
    interfacesDashboardStats:
      type: object
      properties:
        vnic_7_in_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_0_in_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_8_out_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_5_in_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_2_in_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_3_in_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_6_out_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_3_in_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_8_in_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_1_in_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_1_out_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_5_out_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_0_out_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_0_out_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_6_out_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_3_out_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_7_in_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_1_out_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_9_out_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_9_in_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_4_in_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_5_out_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_2_out_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_2_in_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_5_in_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_7_out_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_3_out_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_4_out_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_4_out_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_1_in_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_2_out_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_6_in_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_0_in_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_9_in_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_7_out_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_4_in_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_9_out_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_8_out_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_8_in_byte:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
        vnic_6_in_pkt:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStat'
      description: Dashboard Statistics data for Interfaces.
      example:
        vnic_9_in_byte:
        - null
        - null
        vnic_8_in_byte:
        - null
        - null
        vnic_0_out_byte:
        - null
        - null
        vnic_7_in_byte:
        - null
        - null
        vnic_3_out_byte:
        - null
        - null
        vnic_6_in_byte:
        - null
        - null
        vnic_7_out_byte:
        - null
        - null
        vnic_4_out_byte:
        - null
        - null
        vnic_6_out_byte:
        - null
        - null
        vnic_7_out_pkt:
        - null
        - null
        vnic_9_out_pkt:
        - null
        - null
        vnic_0_in_pkt:
        - null
        - null
        vnic_9_out_byte:
        - null
        - null
        vnic_8_out_pkt:
        - null
        - null
        vnic_2_in_pkt:
        - null
        - null
        vnic_9_in_pkt:
        - null
        - null
        vnic_1_out_byte:
        - null
        - null
        vnic_1_in_pkt:
        - null
        - null
        vnic_7_in_pkt:
        - null
        - null
        vnic_3_in_pkt:
        - null
        - null
        vnic_8_in_pkt:
        - null
        - null
        vnic_5_in_pkt:
        - null
        - null
        vnic_4_in_pkt:
        - null
        - null
        vnic_6_in_pkt:
        - null
        - null
        vnic_2_out_pkt:
        - null
        - null
        vnic_0_in_byte:
        - null
        - null
        vnic_2_out_byte:
        - null
        - null
        vnic_1_out_pkt:
        - null
        - null
        vnic_8_out_byte:
        - null
        - null
        vnic_4_out_pkt:
        - null
        - null
        vnic_0_out_pkt:
        - null
        - null
        vnic_5_out_pkt:
        - null
        - null
        vnic_1_in_byte:
        - null
        - null
        vnic_6_out_pkt:
        - null
        - null
        vnic_4_in_byte:
        - null
        - null
        vnic_5_in_byte:
        - null
        - null
        vnic_2_in_byte:
        - null
        - null
        vnic_3_in_byte:
        - null
        - null
        vnic_3_out_pkt:
        - null
        - null
        vnic_5_out_byte:
        - null
        - null
    HostInstanceTypes:
      type: string
      enum:
      - i3.metal
      - r5.metal
      - i3en.metal
    AwsCustomerConnectedAccount:
      allOf:
      - $ref: '#/components/schemas/AbstractEntity'
      - type: object
        properties:
          policy_payer_arn:
            type: string
          region_to_az_to_shadow_mapping:
            type: object
            additionalProperties:
              type: object
              additionalProperties:
                type: string
              description: A map of internal zones to customer zones.
            description: Provides a map of regions to availability zones from the
              shadow account's perspective
          org_id:
            type: string
          cf_stack_name:
            type: string
          state:
            type: string
            enum:
            - ACTIVE
            - BROKEN
            - DELETED
          account_number:
            type: string
          policy_service_arn:
            type: string
          policy_external_id:
            type: string
          policy_payer_linked_arn:
            type: string
    sddcNetwork:
      required:
      - cgwId
      - name
      type: object
      properties:
        subnets:
          $ref: '#/components/schemas/sddcNetworkAddressGroups'
        cgwName:
          type: string
          description: Name of the compute gateway to which the logical network is
            attached.
        name:
          maxLength: 35
          minLength: 1
          type: string
          description: Name of logical network. Length needs to be between 1-35 characters.
        l2Extension:
          $ref: '#/components/schemas/l2Extension'
        cgwId:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: ID of the compute gateway edge to which the logical network
            is attached.
        dhcpConfigs:
          $ref: '#/components/schemas/sddcNetworkDhcpConfig'
        id:
          type: string
          description: ID of logical network.
      description: Logical network.
      example:
        cgwName: cgwName
        name: name
        subnets:
          addressGroups:
          - prefixLength: prefixLength
            primaryAddress: primaryAddress
          - prefixLength: prefixLength
            primaryAddress: primaryAddress
        l2Extension:
          tunnelId: 328
        id: id
        cgwId: cgwId
        dhcpConfigs:
          ipPools:
          - domainName: domainName
            ipRange: ipRange
          - domainName: domainName
            ipRange: ipRange
    result:
      type: object
      properties:
        value:
          type: string
          description: Job Result value associated with key ID.
        key:
          type: string
          description: Job Result key ID.
      description: Job result information for the configuration change carried out
        on NSX Edge.
      example:
        value: value
        key: key
    VsanClusterReconfigBias:
      required:
      - full_description
      - id
      - short_description
      type: object
      properties:
        short_description:
          type: string
        full_description:
          type: string
        id:
          type: string
      description: Bias for reconfiguring vSAN in a cluster.
      example:
        short_description: short_description
        full_description: full_description
        id: id
    Subnets:
      type: object
      properties:
        subnets:
          uniqueItems: true
          type: array
          description: List of subnets for which IPsec VPN is configured. Subnets
            should be network address specified in CIDR format and can accept '0.0.0.0/0'
            (any)
          items:
            type: string
      example:
        subnets:
        - subnets
        - subnets
    NewCredentials:
      required:
      - name
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: Username of the credentials
        password:
          type: string
          description: Password associated with the credentials
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: Name of the credentials
      example:
        password: password
        name: name
        username: username
    AwsKeyPair:
      type: object
      properties:
        key_name:
          type: string
        key_fingerprint:
          type: string
        key_material:
          type: string
    AwsSddcConnection:
      allOf:
      - $ref: '#/components/schemas/AbstractEntity'
      - type: object
        properties:
          cidr_block_subnet:
            type: string
            description: The CIDR block of the customer's subnet this link is in.
          connected_account_id:
            type: string
            description: The corresponding connected (customer) account UUID this
              connection is attached to.
          eni_group:
            type: string
            description: Which group the ENIs belongs to. (deprecated)
          subnet_id:
            type: string
            description: The ID of the subnet this link is to.
          cgw_present:
            type: boolean
            description: Determines whether the CGW is present in this connection
              set or not. Used for multi-az deployments.
          org_id:
            type: string
            description: The org this link belongs to.
          sddc_id:
            type: string
            description: The SDDC this link is used for.
          cidr_block_vpc:
            type: string
            description: The CIDR block of the customer's VPC.
          connection_order:
            type: integer
            description: The order of the connection
          state:
            type: string
            description: The state of the connection.
            enum:
            - ACTIVE
            - BROKEN
            - DELETED
          subnet_availability_zone:
            type: string
            description: Which availability zone is this connection in?
          vpc_id:
            type: string
            description: The VPC ID of the subnet this link is to.
          customer_eni_infos:
            type: array
            description: A list of all ENIs used for this connection.
            items:
              $ref: '#/components/schemas/CustomerEniInfo'
          default_route_table:
            type: string
            description: The default routing table in the customer's VPC.
    vnic:
      required:
      - index
      type: object
      properties:
        subInterfaces:
          $ref: '#/components/schemas/SubInterfaces'
        addressGroups:
          $ref: '#/components/schemas/edgeVnicAddressGroups'
        isConnected:
          type: boolean
          description: Value is true if the vnic is connected to a logical switch,
            standard portgroup or distributed portgroup.
        enableSendRedirects:
          type: boolean
          description: Value is true if send redirects is enabled. Enable ICMP redirect
            to convey routing information to hosts.
        inShapingPolicy:
          $ref: '#/components/schemas/TrafficShapingPolicy'
        label:
          maxLength: 255
          minLength: 0
          type: string
          description: Interface label of format vNic_{vnicIndex} provided by NSX
            Manager. Read only.
        enableProxyArp:
          type: boolean
          description: Value is true if proxy arp is enabled. Enable proxy ARP if
            you want to allow the NSX Edge of type 'gatewayServices' to answer ARP
            requests intended for other machines.
        index:
          maximum: 9
          minimum: 0
          type: integer
          description: Index of the vnic. Min value is 0 and max value is 9.
          format: int32
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: Name of the interface. Optional.
        mtu:
          maximum: 9000.0
          minimum: 68
          type: integer
          description: MTU of the interface, with default as 1500. Min is 68, Max
            is 9000. Optional.
          format: int32
        fenceParameters:
          type: array
          items:
            $ref: '#/components/schemas/keyValueAttributes'
        macAddresses:
          uniqueItems: true
          type: array
          description: Distinct MAC addresses configured for the vnic. Optional.
          items:
            $ref: '#/components/schemas/MacAddress'
        outShapingPolicy:
          $ref: '#/components/schemas/TrafficShapingPolicy'
        portgroupName:
          type: string
          description: Name of the port group or logical switch.
        enableBridgeMode:
          type: boolean
          description: Value is true if bridge mode is enabled.
        type:
          type: string
          description: Type of the vnic. Values are uplink, internal, trunk. At least
            one internal interface must be configured for NSX Edge HA to work.
        portgroupId:
          maxLength: 255
          minLength: 0
          type: string
          description: Value are port group ID (standard portgroup or distributed
            portgroup) or virtual wire ID (logical switch). Logical switch cannot
            be used for a TRUNK vnic. Portgroup cannot be shared among vnics/LIFs.
            Required when isConnected is specified as true. Example 'network-17' (standard
            portgroup), 'dvportgroup-34' (distributed portgroup) or 'virtualwire-2'
            (logical switch).
      description: NSX Edge vnic configuration details.
      example:
        isConnected: true
        index: 1
        inShapingPolicy:
          averageBandwidth: 9
          inherited: true
          burstSize: 7
          peakBandwidth: 3
          enabled: true
        enableSendRedirects: true
        label: label
        fenceParameters:
        - value: value
          key: key
        - value: value
          key: key
        type: type
        mtu: 3770
        enableProxyArp: true
        enableBridgeMode: true
        macAddresses:
        - edgeVmHaIndex: 0
          value: value
        - edgeVmHaIndex: 0
          value: value
        name: name
        subInterfaces:
          subInterfaces:
          - logicalSwitchId: logicalSwitchId
            addressGroups:
              addressGroups:
              - subnetPrefixLength: subnetPrefixLength
                secondaryAddresses:
                  ipAddress:
                  - ipAddress
                  - ipAddress
                  type: type
                primaryAddress: primaryAddress
                subnetMask: subnetMask
              - subnetPrefixLength: subnetPrefixLength
                secondaryAddresses:
                  ipAddress:
                  - ipAddress
                  - ipAddress
                  type: type
                primaryAddress: primaryAddress
                subnetMask: subnetMask
            logicalSwitchName: logicalSwitchName
            vlanId: 5
            tunnelId: 2441
            name: name
            isConnected: true
            index: 601
            label: label
            enableSendRedirects: true
            mtu: 2
          - logicalSwitchId: logicalSwitchId
            addressGroups:
              addressGroups:
              - subnetPrefixLength: subnetPrefixLength
                secondaryAddresses:
                  ipAddress:
                  - ipAddress
                  - ipAddress
                  type: type
                primaryAddress: primaryAddress
                subnetMask: subnetMask
              - subnetPrefixLength: subnetPrefixLength
                secondaryAddresses:
                  ipAddress:
                  - ipAddress
                  - ipAddress
                  type: type
                primaryAddress: primaryAddress
                subnetMask: subnetMask
            logicalSwitchName: logicalSwitchName
            vlanId: 5
            tunnelId: 2441
            name: name
            isConnected: true
            index: 601
            label: label
            enableSendRedirects: true
            mtu: 2
        portgroupName: portgroupName
        portgroupId: portgroupId
    CloudProvider:
      required:
      - provider
      type: object
      properties:
        provider:
          type: string
          description: Name of the Cloud Provider
      discriminator:
        propertyName: provider
    UpdateCredentials:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: Username of the credentials
        password:
          type: string
          description: Password associated with the credentials
    dhcpLeaseInfo:
      type: object
      properties:
        hostLeaseInfoDtos:
          type: array
          description: List of DHCP leases.
          items:
            $ref: '#/components/schemas/hostLeaseInfo'
      description: DHCP lease information.
      example:
        hostLeaseInfoDtos:
        - bindingState: bindingState
          cltt: cltt
          hardwareType: hardwareType
          ipAddress: ipAddress
          tstp: tstp
          clientHostname: clientHostname
          uid: uid
          macAddress: macAddress
          nextBindingState: nextBindingState
          ends: ends
          abandoned: abandoned
          starts: starts
          tsfp: tsfp
        - bindingState: bindingState
          cltt: cltt
          hardwareType: hardwareType
          ipAddress: ipAddress
          tstp: tstp
          clientHostname: clientHostname
          uid: uid
          macAddress: macAddress
          nextBindingState: nextBindingState
          ends: ends
          abandoned: abandoned
          starts: starts
          tsfp: tsfp
    IpsecStatusAndStats:
      type: object
      properties:
        timeStamp:
          type: integer
          format: int64
        serverStatus:
          type: string
        siteStatistics:
          type: array
          items:
            $ref: '#/components/schemas/IpsecSiteStats'
      example:
        timeStamp: 0
        serverStatus: serverStatus
        siteStatistics:
        - ikeStatus:
            peerId: peerId
            lastInformationalMessage: lastInformationalMessage
            peerIpAddress: peerIpAddress
            peerSubnets:
            - peerSubnets
            - peerSubnets
            localSubnets:
            - localSubnets
            - localSubnets
            channelStatus: channelStatus
            localIpAddress: localIpAddress
            channelState: channelState
          tunnelStats:
          - peerSubnet: peerSubnet
            authenticationAlgorithm: authenticationAlgorithm
            lastInformationalMessage: lastInformationalMessage
            establishedDate: establishedDate
            txBytesFromLocalSubnet: 5
            localSubnet: localSubnet
            rxBytesOnLocalSubnet: 1
            tunnelState: tunnelState
            localSPI: localSPI
            peerSPI: peerSPI
            encryptionAlgorithm: encryptionAlgorithm
            tunnelStatus: tunnelStatus
          - peerSubnet: peerSubnet
            authenticationAlgorithm: authenticationAlgorithm
            lastInformationalMessage: lastInformationalMessage
            establishedDate: establishedDate
            txBytesFromLocalSubnet: 5
            localSubnet: localSubnet
            rxBytesOnLocalSubnet: 1
            tunnelState: tunnelState
            localSPI: localSPI
            peerSPI: peerSPI
            encryptionAlgorithm: encryptionAlgorithm
            tunnelStatus: tunnelStatus
          siteStatus: siteStatus
          txBytesFromSite: 5
          rxBytesOnSite: 6
        - ikeStatus:
            peerId: peerId
            lastInformationalMessage: lastInformationalMessage
            peerIpAddress: peerIpAddress
            peerSubnets:
            - peerSubnets
            - peerSubnets
            localSubnets:
            - localSubnets
            - localSubnets
            channelStatus: channelStatus
            localIpAddress: localIpAddress
            channelState: channelState
          tunnelStats:
          - peerSubnet: peerSubnet
            authenticationAlgorithm: authenticationAlgorithm
            lastInformationalMessage: lastInformationalMessage
            establishedDate: establishedDate
            txBytesFromLocalSubnet: 5
            localSubnet: localSubnet
            rxBytesOnLocalSubnet: 1
            tunnelState: tunnelState
            localSPI: localSPI
            peerSPI: peerSPI
            encryptionAlgorithm: encryptionAlgorithm
            tunnelStatus: tunnelStatus
          - peerSubnet: peerSubnet
            authenticationAlgorithm: authenticationAlgorithm
            lastInformationalMessage: lastInformationalMessage
            establishedDate: establishedDate
            txBytesFromLocalSubnet: 5
            localSubnet: localSubnet
            rxBytesOnLocalSubnet: 1
            tunnelState: tunnelState
            localSPI: localSPI
            peerSPI: peerSPI
            encryptionAlgorithm: encryptionAlgorithm
            tunnelStatus: tunnelStatus
          siteStatus: siteStatus
          txBytesFromSite: 5
          rxBytesOnSite: 6
    PaymentMethodInfo:
      type: object
      properties:
        type:
          type: string
        default_flag:
          type: boolean
        payment_method_id:
          type: string
      example:
        payment_method_id: payment_method_id
        type: type
        default_flag: true
    SddcStateRequest:
      type: object
      properties:
        sddcs:
          type: array
          items:
            type: string
            format: uuid
        states:
          type: array
          items:
            type: string
            enum:
            - SCHEDULED
            - RUNNING
            - CANCELED
            - COMPLETED
    DataPageSddcNetwork:
      type: object
      properties:
        pagingInfo:
          $ref: '#/components/schemas/PagingInfo'
        data:
          type: array
          items:
            $ref: '#/components/schemas/sddcNetwork'
      example:
        pagingInfo:
          startIndex: 6
          pageSize: 1
          sortBy: sortBy
          totalCount: 0
          sortOrderAscending: true
        data:
        - cgwName: cgwName
          name: name
          subnets:
            addressGroups:
            - prefixLength: prefixLength
              primaryAddress: primaryAddress
            - prefixLength: prefixLength
              primaryAddress: primaryAddress
          l2Extension:
            tunnelId: 328
          id: id
          cgwId: cgwId
          dhcpConfigs:
            ipPools:
            - domainName: domainName
              ipRange: ipRange
            - domainName: domainName
              ipRange: ipRange
        - cgwName: cgwName
          name: name
          subnets:
            addressGroups:
            - prefixLength: prefixLength
              primaryAddress: primaryAddress
            - prefixLength: prefixLength
              primaryAddress: primaryAddress
          l2Extension:
            tunnelId: 328
          id: id
          cgwId: cgwId
          dhcpConfigs:
            ipPools:
            - domainName: domainName
              ipRange: ipRange
            - domainName: domainName
              ipRange: ipRange
    EsxHost:
      required:
      - provider
      type: object
      properties:
        name:
          type: string
        availability_zone:
          type: string
          description: Availability zone where the host is provisioned.
        esx_id:
          type: string
        hostname:
          type: string
        provider:
          type: string
        instance_type:
          type: string
          description: Backing cloud provider instance type for host.
        mac_address:
          type: string
        custom_properties:
          type: object
          additionalProperties:
            type: string
        esx_state:
          type: string
          enum:
          - DEPLOYING
          - INITIALIZING
          - PROVISIONED
          - READY
          - DELETING
          - DELETED
          - FAILED
          - ADDING_TO_VCENTER
          - DELETING_FROM_VCENTER
          - PENDING_CLOUD_DELETION
      discriminator:
        propertyName: provider
    SddcAllocatePublicIpSpec:
      required:
      - count
      type: object
      properties:
        count:
          type: integer
          format: int32
        private_ips:
          type: array
          description: List of workload VM private IPs to be assigned the public IP
            just allocated.
          items:
            type: string
        names:
          type: array
          description: List of names for the workload VM public IP assignment.
          items:
            type: string
    VsanAvailableCapacity:
      required:
      - cost
      - quality
      - size
      type: object
      properties:
        cost:
          type: string
        quality:
          type: string
        size:
          type: integer
          format: int64
      description: Infomation about an available vSAN capacity in a cluster.
      example:
        cost: cost
        size: 0
        quality: quality
    dnsStatusAndStats:
      type: object
      properties:
        timeStamp:
          type: integer
          format: int64
        requests:
          $ref: '#/components/schemas/requests'
        responses:
          $ref: '#/components/schemas/dnsResponseStats'
        cachedDBRRSet:
          type: integer
          format: int64
      description: DNS statistics.
      example:
        timeStamp: 0
        responses:
          total: 5
          serverFail: 9
          success: 7
          nxrrset: 3
          nxDomain: 2
          others: 2
          formErr: 5
        requests:
          total: 6
          queries: 1
        cachedDBRRSet: 4
    sslvpnDashboardStats:
      type: object
      properties:
        activeClients:
          type: array
          description: Number of active clients.
          items:
            $ref: '#/components/schemas/DashboardStat'
        sslvpnBytesIn:
          type: array
          description: Rx bytes received for SSL VPN.
          items:
            $ref: '#/components/schemas/DashboardStat'
        authFailures:
          type: array
          description: Number of authentication failures.
          items:
            $ref: '#/components/schemas/DashboardStat'
        sessionsCreated:
          type: array
          description: Number of SSL VPN sessions created.
          items:
            $ref: '#/components/schemas/DashboardStat'
        sslvpnBytesOut:
          type: array
          description: Tx bytes transmitted for SSL VPN.
          items:
            $ref: '#/components/schemas/DashboardStat'
      description: Dashboard Statistics data for SSL VPN.
      example:
        sslvpnBytesIn:
        - null
        - null
        sslvpnBytesOut:
        - null
        - null
        activeClients:
        - null
        - null
        sessionsCreated:
        - null
        - null
        authFailures:
        - null
        - null
    OnDemandOfferInstance:
      required:
      - currency
      - description
      - monthly_cost
      - name
      - product
      - region
      - type
      - unit_price
      - version
      type: object
      properties:
        product:
          type: string
        product_type:
          type: string
          description: Deprecated. Please use product and type fields instead.
        name:
          type: string
        currency:
          type: string
        region:
          type: string
        unit_price:
          type: string
        monthly_cost:
          type: string
        version:
          type: string
        type:
          type: string
        description:
          type: string
      description: Holder for the on-demand offer instance.
      example:
        product: HOST
        name: VMware Cloud on AWS
        currency: USD
        region: US_WEST_2
        unit_price: "8.3681"
        monthly_cost: "6108.7130"
        version: "1.0"
        type: i3.metal
        description: VMware Cloud on AWS On-Demand
    SubnetRouteTableInfo:
      type: object
      properties:
        subnet_id:
          type: string
          description: subnet id
        association_id:
          type: string
          description: subnet - route table association id
        routetable_id:
          type: string
          description: route table id
    DashboardStat:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
        value:
          type: number
          format: double
      example:
        value: 6.027456183070403
        timestamp: 0
    AwsSddcConfig:
      allOf:
      - $ref: '#/components/schemas/SddcConfig'
      - required:
        - region
        type: object
        properties:
          region:
            type: string
      x-vmw-vapi-discriminated-by: AWS
    ConnectivityValidationSubGroup:
      type: object
      properties:
        inputs:
          type: array
          description: List of user inputs for the sub group.
          items:
            $ref: '#/components/schemas/ConnectivityValidationInput'
        tests:
          type: array
          description: List of connectivity tests.
          items:
            $ref: '#/components/schemas/ConnectivityAgentValidation'
        label:
          type: string
          description: Name of the sub-group.
        help:
          type: string
          description: Help text.
        id:
          type: string
          description: subGroup id, i.e. PRIMARY_DNS, SECONDARY_DNS, ONPREM_VCENTER,
            ONPREM_PSC, ACTIVE_DIRECTORY, ONPREM_ESX, DRAAS_ONPREM_VCENTER, DRAAS_ONPREM_PSC,
            DRAAS_ONPREM_SRM and DRAAS_ONPREM_VR.
          enum:
          - PRIMARY_DNS
          - SECONDARY_DNS
          - ONPREM_VCENTER
          - ONPREM_PSC
          - ACTIVE_DIRECTORY
          - ONPREM_ESX
          - DRAAS_ONPREM_VCENTER
          - DRAAS_ONPREM_PSC
          - DRAAS_ONPREM_SRM
          - DRAAS_ONPREM_VR
      example:
        help: help
        tests:
        - path: path
          source: VCENTER
          type: PING
          ports:
          - ports
          - ports
        - path: path
          source: VCENTER
          type: PING
          ports:
          - ports
          - ports
        inputs:
        - id: HOSTNAME
          label: label
          value: value
        - id: HOSTNAME
          label: label
          value: value
        label: label
        id: PRIMARY_DNS
    SddcManifest:
      type: object
      properties:
        vmc_version:
          type: string
          description: the vmcVersion of the sddc for display
        glcm_bundle:
          $ref: '#/components/schemas/GlcmBundle'
        pop_info:
          $ref: '#/components/schemas/PopInfo'
        vmc_internal_version:
          type: string
          description: the vmcInternalVersion of the sddc for internal use
        ebs_backed_vsan_config:
          $ref: '#/components/schemas/EbsBackedVsanConfig'
        vsan_witness_ami:
          $ref: '#/components/schemas/AmiInfo'
        esx_ami:
          $ref: '#/components/schemas/AmiInfo'
        esx_nsxt_ami:
          $ref: '#/components/schemas/AmiInfo'
        metadata:
          $ref: '#/components/schemas/Metadata'
      description: Describes software components of the installed SDDC
    PopServiceInfo:
      type: object
      properties:
        cln:
          type: string
          description: The service change set number.
        version:
          type: string
          description: The service API version.
        build:
          type: string
          description: The service build number.
        service:
          type: string
          description: An enum of PoP related services (including os platform and
            JRE).
          enum:
          - OS
          - AGENT
          - GLCM
          - S3_ADAPTER
          - JRE
          - DOCKER
          - AIDE
          - RTS
          - FM_LOG_COLLECTOR
          - FM_METRICS_COLLECTOR
          - BRE
          - BRF
          - REVERSE_PROXY
          - FORWARD_PROXY
          - DNS
          - NTP
          - LOGZ_LOG_COLLECTOR
    ExtendedAttribute:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      example:
        name: name
        value: value
    edgeStatus:
      type: object
      properties:
        preRulesExists:
          type: boolean
          description: Value is true if pre rules publish is enabled.
        featureStatuses:
          type: array
          description: Individual feature status.
          items:
            $ref: '#/components/schemas/featureStatus'
        timestamp:
          type: integer
          description: Timestamp value at which the NSX Edge healthcheck was done.
          format: int64
        publishStatus:
          type: string
          description: Status of the latest configuration change for the NSX Edge.
            Values are APPLIED or PERSISTED (not published to NSX Edge Appliance yet).
        lastPublishedPreRulesGenerationNumber:
          type: integer
          description: Value of the last published pre rules generation number.
          format: int64
        version:
          type: integer
          description: Version number of the current configuration.
          format: int64
        edgeVmStatus:
          type: array
          description: Detailed status of each of the deployed NSX Edge appliances.
          items:
            $ref: '#/components/schemas/edgeVmStatus'
        activeVseHaIndex:
          type: integer
          description: Index of the active NSX Edge appliance. Values are 0 and 1.
          format: int32
        systemStatus:
          type: string
          description: System status of the active NSX Edge appliance.
        haVnicInUse:
          type: integer
          description: Index of the vnic consumed for NSX Edge HA.
          format: int32
        edgeStatus:
          type: string
          description: NSX Edge appliance health status identified by GREY (unknown
            status), GREEN (health checks are successful), YELLOW (intermittent health
            check failure), RED (none of the appliances are in serving state). If
            health check fails for 5 consecutive times for all appliance (2 for HA
            else 1) then status will turn from YELLOW to RED.
      description: NSX Edge Appliance status.
      example:
        edgeVmStatus:
        - edgeVMStatus: edgeVMStatus
          name: name
          index: 5
          id: id
          haState: haState
          preRulesGenerationNumber: 5
        - edgeVMStatus: edgeVMStatus
          name: name
          index: 5
          id: id
          haState: haState
          preRulesGenerationNumber: 5
        lastPublishedPreRulesGenerationNumber: 6
        preRulesExists: true
        haVnicInUse: 7
        systemStatus: systemStatus
        featureStatuses:
        - configured: true
          serverStatus: serverStatus
          service: service
          publishStatus: publishStatus
          status: status
        - configured: true
          serverStatus: serverStatus
          service: service
          publishStatus: publishStatus
          status: status
        edgeStatus: edgeStatus
        version: 1
        publishStatus: publishStatus
        timestamp: 0
        activeVseHaIndex: 2
    firewallGlobalConfig:
      type: object
      properties:
        tcpAllowOutOfWindowPackets:
          type: boolean
          description: Allow TCP out of window packets.
        udpTimeout:
          minimum: 1
          type: integer
          description: UDP timeout close.
          format: int32
        ipGenericTimeout:
          minimum: 1
          type: integer
          description: IP generic timeout.
          format: int32
        tcpPickOngoingConnections:
          type: boolean
          description: Pick TCP ongoing connections.
        tcpTimeoutOpen:
          minimum: 1
          type: integer
          description: TCP timeout open.
          format: int32
        tcpTimeoutClose:
          minimum: 1
          type: integer
          description: TCP timeout close.
          format: int32
        icmp6Timeout:
          minimum: 1
          type: integer
          description: ICMP6 timeout.
          format: int32
        dropIcmpReplays:
          type: boolean
          description: Drop icmp replays.
        logIcmpErrors:
          type: boolean
          description: Log icmp errors.
        tcpSendResetForClosedVsePorts:
          type: boolean
          description: Send TCP reset for closed NSX Edge ports.
        dropInvalidTraffic:
          type: boolean
          description: Drop invalid traffic.
        enableSynFloodProtection:
          type: boolean
          description: 'Protect against SYN flood attacks by detecting bogus TCP connections
            and terminating them without consuming firewall state tracking resources.
            Default : false'
        icmpTimeout:
          minimum: 1
          type: integer
          description: ICMP timeout.
          format: int32
        tcpTimeoutEstablished:
          minimum: 1
          type: integer
          description: TCP timeout established.
          format: int32
        logInvalidTraffic:
          type: boolean
          description: Log invalid traffic.
      description: Global configuration applicable to all rules.
      example:
        tcpTimeoutOpen: 1
        logIcmpErrors: true
        icmp6Timeout: 1
        tcpSendResetForClosedVsePorts: true
        dropInvalidTraffic: true
        icmpTimeout: 1
        ipGenericTimeout: 1
        tcpTimeoutClose: 1
        logInvalidTraffic: true
        tcpTimeoutEstablished: 1
        tcpPickOngoingConnections: true
        udpTimeout: 1
        enableSynFloodProtection: true
        dropIcmpReplays: true
        tcpAllowOutOfWindowPackets: true
    ClusterConfig:
      required:
      - num_hosts
      type: object
      properties:
        host_cpu_cores_count:
          type: integer
          description: Customize CPU cores on hosts in a cluster. Specify number of
            cores to be enabled on hosts in a cluster.
          format: int32
        host_instance_type:
          $ref: '#/components/schemas/HostInstanceTypes'
        storage_capacity:
          type: integer
          description: For EBS-backed instances only, the requested storage capacity
            in GiB.
          format: int64
        num_hosts:
          type: integer
          format: int32
    CustomerEniInfo:
      type: object
      properties:
        secondary_ip_addresses:
          type: array
          description: Indicates list of secondary IP created for this ENI.
          items:
            type: string
        eni_id:
          type: string
          description: Interface ID on customer account.
        primary_ip_address:
          type: string
          description: Indicates primary address of the ENI.
      description: Indicates a single cross-account ENI and its characteristics.
    NetworkTemplate:
      type: object
      properties:
        management_gateway_templates:
          type: array
          items:
            $ref: '#/components/schemas/ManagementGatewayTemplate'
        compute_gateway_templates:
          type: array
          items:
            $ref: '#/components/schemas/ComputeGatewayTemplate'
    LogicalNetwork:
      type: object
      properties:
        subnet_cidr:
          type: string
          description: the subnet cidr
        name:
          type: string
          description: name of the network
        gatewayIp:
          type: string
          description: gateway ip of the logical network
        dhcp_enabled:
          type: string
          description: if 'true' - enabled; if 'false' - disabled
        dhcp_ip_range:
          type: string
          description: ip range within the subnet mask, range delimiter is '-' (example
            10.118.10.130-10.118.10.140)
        tunnel_id:
          type: integer
          description: tunnel id of extended network
          format: int32
        id:
          type: string
          readOnly: true
        network_type:
          type: string
          readOnly: true
          enum:
          - HOSTED
          - ROUTED
          - EXTENDED
    MapZonesRequest:
      type: object
      properties:
        connected_account_id:
          type: string
          description: The connected account ID to remap. This is a standard UUID.
        org_id:
          type: string
          description: The org ID to remap in. This is a standard UUID.
        petronas_regions_to_map:
          type: array
          description: A list of Petronas regions to map.
          items:
            type: string
    OfferInstancesHolder:
      required:
      - offers
      - on_demand
      type: object
      properties:
        on_demand:
          $ref: '#/components/schemas/OnDemandOfferInstance'
        offers:
          type: array
          items:
            $ref: '#/components/schemas/TermOfferInstance'
      description: Holder for the offer instances.
      example:
        on_demand:
          product: HOST
          name: VMware Cloud on AWS
          currency: USD
          region: US_WEST_2
          unit_price: "8.3681"
          monthly_cost: "6108.7130"
          version: "1.0"
          type: i3.metal
          description: VMware Cloud on AWS On-Demand
        offers:
        - description: VMware Cloud on Amazon Web Services
          product: HOST
          name: VMware Cloud on AWS
          region: US_WEST_2
          commitment_term: 12
          unit_price: "51987.0"
          currency: USD
          version: "1.0"
          type: i3.metal
          product_id: VMC-AWS
        - description: VMware Cloud on Amazon Web Services
          product: HOST
          name: VMware Cloud on AWS
          region: US_WEST_2
          commitment_term: 36
          unit_price: "109366.0"
          currency: USD
          version: "1.0"
          type: i3.metal
          product_id: VMC-AWS
    VpnTunnelTrafficStats:
      type: object
      properties:
        packets_out:
          type: string
        packet_received_errors:
          type: string
        rx_bytes_on_local_subnet:
          type: string
        replay_errors:
          type: string
        sequence_number_over_flow_errors:
          type: string
        encryption_failures:
          type: string
        integrity_errors:
          type: string
        packet_sent_errors:
          type: string
        decryption_failures:
          type: string
        packets_in:
          type: string
        tx_bytes_from_local_subnet:
          type: string
    ReservationInMw:
      type: object
      properties:
        rid:
          type: string
          description: Reservation ID
          format: uuid
        week_of:
          type: string
          description: SUNDAY of the week that maintenance is scheduled, ISO format
            date
        create_time:
          type: string
          description: Optional
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Optional
    requests:
      type: object
      properties:
        total:
          type: integer
          format: int64
        queries:
          type: integer
          format: int64
      description: DNS request statistics.
      example:
        total: 6
        queries: 1
    firewallRuleStats:
      type: object
      properties:
        timestamp:
          type: integer
          description: Timestamp of statistics collection.
          format: int64
        connectionCount:
          type: integer
          description: Connection count.
          format: int64
        byteCount:
          type: integer
          description: Byte count.
          format: int64
        packetCount:
          type: integer
          description: Packet count.
          format: int64
      description: Statistics for firewall rule
      example:
        connectionCount: 1
        packetCount: 5
        byteCount: 5
        timestamp: 6
    ipsecSite:
      type: object
      properties:
        psk:
          maxLength: 128
          minLength: 0
          type: string
          description: Pre Shared Key for the IPsec Site. Required if Site peerIp
            is not 'any'. Global PSK is used when Authentication mode is PSK and Site
            peerIp is 'any'.
        localId:
          maxLength: 255
          minLength: 0
          type: string
          description: Local ID of the IPsec Site. Defaults to the local IP.
        enablePfs:
          type: boolean
          description: Enable/disable Perfect Forward Secrecy. Default is true.
        authenticationMode:
          type: string
          description: Authentication mode for the IPsec Site. Valid values are psk
            and x.509, with psk as default.
        peerSubnets:
          $ref: '#/components/schemas/Subnets'
        dhGroup:
          type: string
          description: Diffie-Hellman algorithm group. Defaults to DH14 for FIPS enabled
            NSX Edge. DH2 and DH5 are not supported when FIPS is enabled on NSX Edge.
            Valid values are DH2, DH5, DH14, DH15, DH16.
        siteId:
          type: string
          description: ID of the IPsec Site configuration provided by NSX Manager.
        description:
          maxLength: 8192
          minLength: 0
          type: string
          description: Description of the IPsec Site.
        peerIp:
          maxLength: 255
          minLength: 0
          type: string
          description: IP (IPv4) address or FQDN of the Peer. Can also be specified
            as 'any'. Required.
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: Name of the IPsec Site.
        certificate:
          maxLength: 255
          minLength: 0
          type: string
        localIp:
          maxLength: 255
          minLength: 0
          type: string
          description: Local IP of the IPsec Site. Should be one of the IP addresses
            configured on the uplink interfaces of the NSX Edge. Required.
        encryptionAlgorithm:
          type: string
          description: IPsec encryption algorithm with default as aes256. Valid values
            are 'aes', 'aes256', '3des', 'aes-gcm'.
        enabled:
          type: boolean
          description: Enable/disable IPsec Site.
        mtu:
          type: integer
          description: MTU for the IPsec site. Defaults to the mtu of the NSX Edge
            vnic specified by the localIp. Optional.
          format: int32
        extension:
          maxLength: 1024
          minLength: 0
          type: string
        peerId:
          maxLength: 255
          minLength: 0
          type: string
          description: Peer ID. Should be unique for all IPsec Site's configured for
            an NSX Edge.
        localSubnets:
          $ref: '#/components/schemas/Subnets'
      description: NSX Edge IPsec Site configuration details.
      example:
        peerId: peerId
        extension: extension
        enablePfs: true
        peerSubnets:
          subnets:
          - subnets
          - subnets
        certificate: certificate
        psk: psk
        description: description
        localId: localId
        encryptionAlgorithm: encryptionAlgorithm
        enabled: true
        mtu: 0
        peerIp: peerIp
        name: name
        siteId: siteId
        localIp: localIp
        authenticationMode: authenticationMode
        dhGroup: dhGroup
    ReservationWindow:
      type: object
      properties:
        reservation_state:
          type: string
          enum:
          - SCHEDULED
          - RUNNING
          - CANCELED
          - COMPLETED
        emergency:
          type: boolean
        maintenance_properties:
          $ref: '#/components/schemas/ReservationWindow_maintenance_properties'
        reserve_id:
          type: string
        start_hour:
          type: integer
          format: int32
        sddc_id:
          type: string
        manifest_id:
          type: string
        duration_hours:
          type: integer
          format: int64
        start_date:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Metadata for reservation window, in key-value form
      example:
        metadata:
          key: metadata
        start_hour: 0
        emergency: true
        maintenance_properties:
          status: status
        reserve_id: reserve_id
        sddc_id: sddc_id
        reservation_state: SCHEDULED
        manifest_id: manifest_id
        duration_hours: 6
        start_date: start_date
    FirewallRule:
      type: object
      properties:
        rule_type:
          type: string
          readOnly: true
          enum:
          - USER
          - DEFAULT
        application_ids:
          type: array
          items:
            type: string
            description: Id of Service available to the gateway.
        name:
          type: string
        rule_interface:
          type: string
          description: Deprecated, left for backwards compatibility. Remove once UI
            stops using it.
        destination:
          type: string
          description: Optional. Possible formats are IP, IP1-IPn, CIDR or comma separated
            list of those entries. If not specified, defaults to 'any'.
        id:
          type: string
          readOnly: true
        destination_scope:
          $ref: '#/components/schemas/FirewallRuleScope'
        source:
          type: string
          description: Optional. Possible formats are IP, IP1-IPn, CIDR or comma separated
            list of those entries. If not specified, defaults to 'any'.
        source_scope:
          $ref: '#/components/schemas/FirewallRuleScope'
        services:
          type: array
          description: list of protocols and ports for this firewall rule
          items:
            $ref: '#/components/schemas/FirewallService'
        action:
          type: string
          enum:
          - ALLOW
          - DENY
        revision:
          type: integer
          description: current revision of the list of firewall rules, used to protect
            against concurrent modification (first writer wins)
          format: int32
          readOnly: true
    SubscriptionDetails:
      type: object
      properties:
        status:
          type: string
          enum:
          - CREATED
          - ACTIVATED
          - FAILED
          - CANCELLED
          - EXPIRED
          - PENDING_PROVISIONING
          - ORDER_SUBMITTED
          - SUSPENDED
          - TERMINATED
          - UKNOWN
        anniversary_billing_date:
          type: string
        end_date:
          type: string
        billing_frequency:
          type: string
          description: The frequency at which the customer is billed. Currently supported
            values are "Upfront" and "Monthly"
        auto_renewed_allowed:
          type: string
        commitment_term:
          type: string
        csp_subscription_id:
          type: string
        billing_subscription_id:
          type: string
        offer_version:
          type: string
        offer_type:
          $ref: '#/components/schemas/OfferType'
        description:
          type: string
        product_id:
          type: string
        region:
          type: string
        product_name:
          type: string
        offer_name:
          type: string
        commitment_term_uom:
          type: string
          description: unit of measurment for commitment term
        start_date:
          type: string
        quantity:
          type: string
      description: details of a subscription
      example:
        end_date: end_date
        quantity: quantity
        billing_subscription_id: billing_subscription_id
        commitment_term: commitment_term
        description: description
        auto_renewed_allowed: auto_renewed_allowed
        product_name: product_name
        offer_name: offer_name
        billing_frequency: billing_frequency
        csp_subscription_id: csp_subscription_id
        product_id: product_id
        offer_version: offer_version
        anniversary_billing_date: anniversary_billing_date
        region: region
        commitment_term_uom: commitment_term_uom
        offer_type: TERM
        status: CREATED
        start_date: start_date
    appliancesSummary:
      type: object
      properties:
        dataStoreMoidOfActiveVse:
          type: string
          description: vCenter MOID of the active NSX Edge appliance's data store.
        enableFips:
          type: boolean
          description: Value is true if FIPS is enabled on NSX Edge appliance.
        hostNameOfActiveVse:
          type: string
          description: Host name of the active NSX Edge appliance.
        vmBuildInfo:
          type: string
          description: NSX Edge appliance build version.
        deployAppliances:
          type: boolean
          description: Value is true if NSX Edge appliances are to be deployed.
        communicationChannel:
          type: string
          description: Communication channel used to communicate with NSX Edge appliance.
        vmNameOfActiveVse:
          type: string
          description: Name of the active NSX Edge appliance.
        numberOfDeployedVms:
          type: integer
          description: Number of deployed appliances of the NSX Edge.
          format: int32
        resourcePoolMoidOfActiveVse:
          type: string
          description: vCenter MOID of the active NSX Edge appliance's resource pool/cluster.
            Can be resource pool ID, e.g. resgroup-15 or cluster ID, e.g. domain-c41.
        dataStoreNameOfActiveVse:
          type: string
          description: Datastore name of the active NSX Edge appliance.
        vmMoidOfActiveVse:
          type: string
          description: vCenter MOID of the active NSX Edge appliance.
        statusFromVseUpdatedOn:
          type: integer
          description: Time stamp value when healthcheck status was last updated for
            the NSX Edge appliance.
          format: int64
        fqdn:
          type: string
          description: FQDN of the NSX Edge.
        applianceSize:
          type: string
          description: NSX Edge appliance size.
        resourcePoolNameOfActiveVse:
          type: string
          description: Resource Pool/Cluster name of the active NSX Edge appliance.
        activeVseHaIndex:
          type: integer
          description: HA index of the active NSX Edge appliance.
          format: int32
        vmVersion:
          type: string
          description: NSX Edge appliance version.
        hostMoidOfActiveVse:
          type: string
          description: vCenter MOID of the active NSX Edge appliance's host.
      description: NSX Edge appliance summary.
      example:
        dataStoreMoidOfActiveVse: dataStoreMoidOfActiveVse
        resourcePoolMoidOfActiveVse: resourcePoolMoidOfActiveVse
        hostMoidOfActiveVse: hostMoidOfActiveVse
        hostNameOfActiveVse: hostNameOfActiveVse
        fqdn: fqdn
        deployAppliances: true
        resourcePoolNameOfActiveVse: resourcePoolNameOfActiveVse
        vmNameOfActiveVse: vmNameOfActiveVse
        activeVseHaIndex: 2
        communicationChannel: communicationChannel
        applianceSize: applianceSize
        dataStoreNameOfActiveVse: dataStoreNameOfActiveVse
        statusFromVseUpdatedOn: 3
        vmVersion: vmVersion
        enableFips: true
        numberOfDeployedVms: 9
        vmMoidOfActiveVse: vmMoidOfActiveVse
        vmBuildInfo: vmBuildInfo
    vnics:
      type: object
      properties:
        vnics:
          type: array
          description: Ordered list of NSX Edge vnics.
          items:
            $ref: '#/components/schemas/vnic'
      description: Ordered list of NSX Edge vnics. Until one connected vnic is configured,
        none of the configured features will serve the network.
      example:
        vnics:
        - isConnected: true
          index: 1
          inShapingPolicy:
            averageBandwidth: 9
            inherited: true
            burstSize: 7
            peakBandwidth: 3
            enabled: true
          enableSendRedirects: true
          label: label
          fenceParameters:
          - value: value
            key: key
          - value: value
            key: key
          type: type
          mtu: 3770
          enableProxyArp: true
          enableBridgeMode: true
          macAddresses:
          - edgeVmHaIndex: 0
            value: value
          - edgeVmHaIndex: 0
            value: value
          name: name
          subInterfaces:
            subInterfaces:
            - logicalSwitchId: logicalSwitchId
              addressGroups:
                addressGroups:
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
              logicalSwitchName: logicalSwitchName
              vlanId: 5
              tunnelId: 2441
              name: name
              isConnected: true
              index: 601
              label: label
              enableSendRedirects: true
              mtu: 2
            - logicalSwitchId: logicalSwitchId
              addressGroups:
                addressGroups:
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
              logicalSwitchName: logicalSwitchName
              vlanId: 5
              tunnelId: 2441
              name: name
              isConnected: true
              index: 601
              label: label
              enableSendRedirects: true
              mtu: 2
          portgroupName: portgroupName
          portgroupId: portgroupId
        - isConnected: true
          index: 1
          inShapingPolicy:
            averageBandwidth: 9
            inherited: true
            burstSize: 7
            peakBandwidth: 3
            enabled: true
          enableSendRedirects: true
          label: label
          fenceParameters:
          - value: value
            key: key
          - value: value
            key: key
          type: type
          mtu: 3770
          enableProxyArp: true
          enableBridgeMode: true
          macAddresses:
          - edgeVmHaIndex: 0
            value: value
          - edgeVmHaIndex: 0
            value: value
          name: name
          subInterfaces:
            subInterfaces:
            - logicalSwitchId: logicalSwitchId
              addressGroups:
                addressGroups:
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
              logicalSwitchName: logicalSwitchName
              vlanId: 5
              tunnelId: 2441
              name: name
              isConnected: true
              index: 601
              label: label
              enableSendRedirects: true
              mtu: 2
            - logicalSwitchId: logicalSwitchId
              addressGroups:
                addressGroups:
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
              logicalSwitchName: logicalSwitchName
              vlanId: 5
              tunnelId: 2441
              name: name
              isConnected: true
              index: 601
              label: label
              enableSendRedirects: true
              mtu: 2
          portgroupName: portgroupName
          portgroupId: portgroupId
    TermBillingOptions:
      type: object
      properties:
        unit_price:
          type: string
        billing_frequency:
          type: string
      description: Holder for term billing options.
      example:
        unit_price: "121518.0"
        billing_frequency: PREPAID
    ServiceError:
      type: object
      properties:
        default_message:
          type: string
          description: Error message in English.
        original_service:
          type: string
          description: The original service name of the error.
        localized_message:
          type: string
          description: The localized message.
        original_service_error_code:
          type: string
          description: The original error code of the service.
      description: Detailed service errors associated with a task.
    SddcTemplate:
      allOf:
      - $ref: '#/components/schemas/AbstractEntity'
      - type: object
        properties:
          account_link_sddc_configs:
            type: array
            description: A list of the SDDC linking configurations to use.
            items:
              $ref: '#/components/schemas/AccountLinkSddcConfig'
          state:
            type: string
            enum:
            - INITIALIZATION
            - AVAILABLE
            - INUSE
            - APPLIED
            - DELETING
            - DELETED
            - FAILED
          network_template:
            $ref: '#/components/schemas/NetworkTemplate'
          name:
            type: string
            description: name for SDDC configuration template
          source_sddc_id:
            type: string
          org_id:
            type: string
          sddc:
            $ref: '#/components/schemas/Sddc'
    LogicalRouterScopes:
      type: object
      properties:
        logicalRouterScope:
          type: array
          items:
            $ref: '#/components/schemas/LogicalRouterScope'
      example:
        logicalRouterScope:
        - id: id
          type: type
        - id: id
          type: type
    VsanEncryptionConfig:
      type: object
      properties:
        port:
          type: integer
          description: Port to connect to AWS Key Management Service
        certificate:
          type: string
          description: Public certificate used to connect to AWS Key Management Service
    ManagementGatewayTemplate:
      allOf:
      - $ref: '#/components/schemas/GatewayTemplate'
      - type: object
        properties:
          subnet_cidr:
            type: string
            description: mgw network subnet cidr
    EntityCapacity:
      type: object
      properties:
        storage_capacity_gib:
          type: integer
        memory_capacity_gib:
          type: integer
        total_number_of_cores:
          type: integer
        number_of_ssds:
          type: integer
        cpu_capacity_ghz:
          type: number
        number_of_sockets:
          type: integer
      description: Decribes the capacity of a given entity.
      example:
        storage_capacity_gib: 1
        number_of_sockets: 9
        total_number_of_cores: 5
        number_of_ssds: 2
        memory_capacity_gib: 5
        cpu_capacity_ghz: 7.061401241503109
    AwsSddcResourceConfig:
      allOf:
      - $ref: '#/components/schemas/SddcResourceConfig'
      - type: object
        properties:
          backup_restore_bucket:
            type: string
          public_ip_pool:
            type: array
            items:
              $ref: '#/components/schemas/SddcPublicIp'
          vpc_info:
            $ref: '#/components/schemas/VpcInfo'
          kms_vpc_endpoint:
            $ref: '#/components/schemas/KmsVpcEndpoint'
          max_num_public_ip:
            type: integer
            description: maximum number of public IP that user can allocate.
          account_link_sddc_config:
            type: array
            items:
              $ref: '#/components/schemas/SddcLinkConfig'
          vsan_encryption_config:
            $ref: '#/components/schemas/VsanEncryptionConfig'
          vpc_info_peered_agent:
            $ref: '#/components/schemas/VpcInfo'
      x-vmw-vapi-discriminated-by: AWS
    loadBalancerDashboardStats:
      type: object
      properties:
        lbBpsIn:
          type: array
          description: Number of bytes in.
          items:
            $ref: '#/components/schemas/DashboardStat'
        lbHttpReqs:
          type: array
          description: Number of HTTP requests received by Load Balancer.
          items:
            $ref: '#/components/schemas/DashboardStat'
        lbBpsOut:
          type: array
          description: Number of bytes out.
          items:
            $ref: '#/components/schemas/DashboardStat'
        lbSessions:
          type: array
          description: Number of Load Balancer sessions.
          items:
            $ref: '#/components/schemas/DashboardStat'
      description: Dashboard Statistics data for Load Balancer.
      example:
        lbBpsIn:
        - null
        - null
        lbHttpReqs:
        - null
        - null
        lbSessions:
        - null
        - null
        lbBpsOut:
        - null
        - null
    l2vpnStatusAndStats:
      type: object
      properties:
        timeStamp:
          type: integer
          description: Time stamp of statistics collection.
          format: int64
        serverStatus:
          type: string
        siteStats:
          type: array
          description: List of statistics for each Site.
          items:
            $ref: '#/components/schemas/l2vpnStats'
      description: L2 VPN status and statistics.
      example:
        timeStamp: 0
        serverStatus: serverStatus
        siteStats:
        - establishedDate: 6
          droppedRxPackets: 1
          txBytesFromLocalSubnet: 5
          name: name
          rxBytesOnLocalSubnet: 5
          droppedTxPackets: 2
          lastUpdatedTime: 7
          encryptionAlgorithm: encryptionAlgorithm
          failureMessage: failureMessage
          tunnelStatus: tunnelStatus
        - establishedDate: 6
          droppedRxPackets: 1
          txBytesFromLocalSubnet: 5
          name: name
          rxBytesOnLocalSubnet: 5
          droppedTxPackets: 2
          lastUpdatedTime: 7
          encryptionAlgorithm: encryptionAlgorithm
          failureMessage: failureMessage
          tunnelStatus: tunnelStatus
    l2Extension:
      required:
      - tunnelId
      type: object
      properties:
        tunnelId:
          maximum: 4093
          minimum: 1
          type: integer
          description: 'Identifier for layer 2 extension tunnel. Valid range: 1-4093.'
          format: int32
      description: Layer 2 extension.
      example:
        tunnelId: 328
    sddcNetworkDhcpIpPool:
      type: object
      properties:
        ipRange:
          type: string
          description: IP range for DHCP IP pool.
        domainName:
          type: string
          description: DNS domain name.
      description: DHCP IP pool for logical network.
      example:
        domainName: domainName
        ipRange: ipRange
    featureCapability:
      type: object
      properties:
        configurationLimits:
          type: array
          description: List of key value pairs describing the feature configuration
            limits.
          items:
            $ref: '#/components/schemas/keyValueAttributes'
        isSupported:
          type: boolean
          description: Value is true if feature is supported on NSX Edge.
        service:
          type: string
          description: Name of the feature or service.
        permission:
          $ref: '#/components/schemas/licenceAclPermissions'
      description: Feature capability information.
      example:
        service: service
        configurationLimits:
        - value: value
          key: key
        - value: value
          key: key
        permission:
          accessPermission:
            viewPermission: true
            managePermission: true
          isLicensed: true
          dataPermission:
            savePermission: true
            publishPermission: true
        isSupported: true
    ClusterReconfigureParams:
      required:
      - num_hosts
      type: object
      properties:
        storage_capacity:
          type: integer
          description: The final desired storage capacity after reconfiguring the
            cluster in GiB.
          format: int64
        bias:
          type: string
          description: Bias value as obtained from the storage constraints call.
        num_hosts:
          type: integer
          description: Number of hosts in the cluster after reconfiguring.
          format: int32
    InstanceTypeConfig:
      type: object
      properties:
        instance_type:
          type: string
          description: Instance type name.
        hosts:
          type: array
          description: Array of number of hosts allowed for this operation. Range
            of hosts user can select for sddc provision
          items:
            type: integer
        display_name:
          type: string
          description: Display name of instance_type.
        entity_capacity:
          $ref: '#/components/schemas/EntityCapacity'
      description: Represents a structure for instance type config
      example:
        hosts:
        - 6
        - 6
        display_name: display_name
        instance_type: instance_type
        entity_capacity:
          storage_capacity_gib: 1
          number_of_sockets: 9
          total_number_of_cores: 5
          number_of_ssds: 2
          memory_capacity_gib: 5
          cpu_capacity_ghz: 7.061401241503109
    Reservation:
      type: object
      properties:
        duration:
          type: integer
          description: Duration - required for reservation in maintenance window
          format: int64
        rid:
          type: string
          description: Reservation ID
          format: uuid
        create_time:
          type: string
          description: Optional
        start_time:
          type: string
          description: Start time of a reservation
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Optional
    PagingInfo:
      type: object
      properties:
        sortOrderAscending:
          type: boolean
        totalCount:
          type: integer
          format: int64
        startIndex:
          type: integer
          format: int32
        sortBy:
          type: string
        pageSize:
          type: integer
          format: int32
      example:
        startIndex: 6
        pageSize: 1
        sortBy: sortBy
        totalCount: 0
        sortOrderAscending: true
    secondaryAddresses:
      type: object
      properties:
        type:
          type: string
        ipAddress:
          type: array
          description: List of IP addresses.
          items:
            type: string
      description: Secondary IP addresses of the NSX Edge vnic address group. These
        are used for NAT, LB, VPN etc. Optional.
      example:
        ipAddress:
        - ipAddress
        - ipAddress
        type: type
    TaskProgressPhase:
      required:
      - id
      - name
      - progress_percent
      type: object
      properties:
        id:
          type: string
          description: The identifier of the task progress phase
        name:
          type: string
          description: The display name of the task progress phase
        progress_percent:
          type: integer
          description: The percentage of the phase that has completed
          format: int32
      description: A task progress can be (but does NOT have to be) divided to more
        meaningful progress phases.
    SubscriptionProducts:
      type: object
      properties:
        product:
          type: string
          description: The name of the product
        types:
          type: array
          description: A list of different types/version for the product.
          items:
            type: string
      description: Details of products that are available for purchase.
      example:
        product: product
        types:
        - types
        - types
    cbmStatsData:
      type: object
      properties:
        vnic_9:
          type: array
          items:
            $ref: '#/components/schemas/cbmStatistic'
        vnic_8:
          type: array
          items:
            $ref: '#/components/schemas/cbmStatistic'
        vnic_7:
          type: array
          items:
            $ref: '#/components/schemas/cbmStatistic'
        vnic_6:
          type: array
          items:
            $ref: '#/components/schemas/cbmStatistic'
        vnic_5:
          type: array
          items:
            $ref: '#/components/schemas/cbmStatistic'
        vnic_4:
          type: array
          items:
            $ref: '#/components/schemas/cbmStatistic'
        vnic_3:
          type: array
          items:
            $ref: '#/components/schemas/cbmStatistic'
        vnic_2:
          type: array
          items:
            $ref: '#/components/schemas/cbmStatistic'
        vnic_1:
          type: array
          items:
            $ref: '#/components/schemas/cbmStatistic'
        vnic_0:
          type: array
          items:
            $ref: '#/components/schemas/cbmStatistic'
      description: Statistics data.
      example:
        vnic_8:
        - null
        - null
        vnic_7:
        - null
        - null
        vnic_6:
        - null
        - null
        vnic_5:
        - null
        - null
        vnic_9:
        - vnic: 0
          in: 5.962133916683182
          timestamp: 6
          out: 1.4658129805029452
        - vnic: 0
          in: 5.962133916683182
          timestamp: 6
          out: 1.4658129805029452
        vnic_0:
        - null
        - null
        vnic_4:
        - null
        - null
        vnic_3:
        - null
        - null
        vnic_2:
        - null
        - null
        vnic_1:
        - null
        - null
    nsxl2vpn:
      required:
      - listenerIps
      - sites
      type: object
      properties:
        listenerIps:
          maxItems: 1
          minItems: 1
          type: array
          description: Listener IP addresses.
          items:
            type: string
        enabled:
          type: boolean
          description: Enabled state of L2 VPN service.
        sites:
          $ref: '#/components/schemas/sites'
      description: L2 VPN server configuration.
      example:
        listenerIps:
        - listenerIps
        sites:
          sites:
          - password: password
            secureTraffic: true
            name: name
            siteId: siteId
            description: description
            userId: userId
          - password: password
            secureTraffic: true
            name: name
            siteId: siteId
            description: description
            userId: userId
        enabled: true
    TermOfferInstance:
      required:
      - commitment_term
      - currency
      - description
      - name
      - product
      - region
      - type
      - unit_price
      - version
      type: object
      properties:
        description:
          type: string
        product:
          type: string
        product_type:
          type: string
          description: Deprecated. Please use product and type fields instead.
        name:
          type: string
        currency:
          type: string
        region:
          type: string
        commitment_term:
          type: integer
        unit_price:
          type: string
          description: (deprecated. unit_price is moved into TermBillingOptions. For
            backward compatibility, this field reflect "Prepaid" price at the offer
            level.)
        billing_options:
          type: array
          items:
            $ref: '#/components/schemas/TermBillingOptions'
        version:
          type: string
        offer_context_id:
          type: string
        product_charge_id:
          type: string
        type:
          type: string
        product_id:
          type: string
      description: Holder for the term offer instances.
      example:
        description: VMware Cloud on Amazon Web Services
        product: HOST
        name: VMware Cloud on AWS
        region: US_WEST_2
        commitment_term: 12
        unit_price: "51987.0"
        currency: USD
        version: "1.0"
        type: i3.metal
        product_id: VMC-AWS
    AmiInfo:
      type: object
      properties:
        instance_type:
          type: string
          description: instance type of the esx ami
        region:
          type: string
          description: the region of the esx ami
        id:
          type: string
          description: the ami id for the esx
        name:
          type: string
          description: the name of the esx ami
      description: the AmiInfo used for deploying esx of the sddc
    edgeVnicAddressGroup:
      type: object
      properties:
        subnetPrefixLength:
          type: string
          description: Subnet prefix length of the primary IP address.
        secondaryAddresses:
          $ref: '#/components/schemas/secondaryAddresses'
        primaryAddress:
          type: string
          description: Primary IP address of the vnic interface. Required.
        subnetMask:
          type: string
      description: Address group configuration of the NSX Edge vnic. An interface
        can have one primary and multiple secondary IP addresses.
      example:
        subnetPrefixLength: subnetPrefixLength
        secondaryAddresses:
          ipAddress:
          - ipAddress
          - ipAddress
          type: type
        primaryAddress: primaryAddress
        subnetMask: subnetMask
    VpcInfo:
      type: object
      properties:
        vpc_cidr:
          type: string
        vgw_id:
          type: string
        esx_public_security_group_id:
          type: string
        vif_ids:
          type: array
          description: set of virtual interfaces attached to the sddc
          items:
            type: string
        vm_security_group_id:
          type: string
        tgwIps:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Mapping from AZ to a list of IP addresses assigned to TGW ENI
            that's connected with Vpc
        route_table_id:
          type: string
          description: (deprecated)
        edge_subnet_id:
          type: string
          description: Id of the NSX edge associated with this VPC (deprecated)
        id:
          type: string
          description: vpc id
        api_association_id:
          type: string
          description: Id of the association between subnet and route-table (deprecated)
        api_subnet_id:
          type: string
          description: Id associated with this VPC (deprecated)
        private_subnet_id:
          type: string
          description: (deprecated)
        private_association_id:
          type: string
          description: (deprecated)
        esx_security_group_id:
          type: string
        subnet_id:
          type: string
          description: (deprecated)
        internet_gateway_id:
          type: string
        security_group_id:
          type: string
        association_id:
          type: string
          description: (deprecated)
        vgw_route_table_id:
          type: string
          description: Route table which contains the route to VGW (deprecated)
        edge_association_id:
          type: string
          description: Id of the association between edge subnet and route-table (deprecated)
        provider:
          type: string
        peering_connection_id:
          type: string
          description: (deprecated)
        network_type:
          type: string
        available_zones:
          type: array
          items:
            $ref: '#/components/schemas/AvailableZoneInfo'
        routetables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RouteTableInfo'
          description: map from routeTableName to routeTableInfo
    PopInfo:
      required:
      - ami_infos
      type: object
      properties:
        ami_infos:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PopAmiInfo'
          description: A map of [region name of PoP / PoP-AMI]:[PopAmiInfo].
        created_at:
          type: string
          description: The PopInfo (or PoP AMI) created time. Using ISO 8601 date-time
            pattern.
          format: date-time
        service_infos:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PopServiceInfo'
          description: A map of [service type]:[PopServiceInfo]
        id:
          type: string
          description: UUID of the PopInfo
          format: UUID
        manifest_version:
          type: string
          description: version of the manifest.
      description: Present a SDDC PoP information.
    ConfigSpec:
      type: object
      properties:
        expiry_in_days:
          type: integer
          description: Indicates after how many days the sddc should expire
        availability:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/InstanceTypeConfig'
          description: Map of region to instance types available in that region
      description: Represents a configuration spec for any sddc provision operation.
      example:
        availability:
          key:
          - hosts:
            - 6
            - 6
            display_name: display_name
            instance_type: instance_type
            entity_capacity:
              storage_capacity_gib: 1
              number_of_sockets: 9
              total_number_of_cores: 5
              number_of_ssds: 2
              memory_capacity_gib: 5
              cpu_capacity_ghz: 7.061401241503109
          - hosts:
            - 6
            - 6
            display_name: display_name
            instance_type: instance_type
            entity_capacity:
              storage_capacity_gib: 1
              number_of_sockets: 9
              total_number_of_cores: 5
              number_of_ssds: 2
              memory_capacity_gib: 5
              cpu_capacity_ghz: 7.061401241503109
        expiry_in_days: 0
    EniInfo:
      type: object
      properties:
        subnet_id:
          type: string
          description: Subnet it belongs to.
        id:
          type: string
          description: Interface ID.
        security_group_id:
          type: string
          description: Security Group of Eni.
        private_ip:
          type: string
          description: Private ip of eni.
        mac_address:
          type: string
          description: Mac address of nic.
      description: Information of the x-eni created.
    dnsConfig:
      type: object
      properties:
        featureType:
          type: string
        logging:
          $ref: '#/components/schemas/logging'
        enabled:
          type: boolean
          description: Value is true if feature is enabled. Default value is true.
            Optional.
        dnsViews:
          $ref: '#/components/schemas/dnsViews'
        listeners:
          $ref: '#/components/schemas/dnsListeners'
        version:
          type: integer
          description: Version number tracking each configuration change. To avoid
            problems with overwriting changes, always retrieve and modify the latest
            configuration to include the current version number in your request. If
            you provide a version number which is not current, the request is rejected.
            If you omit the version number, the request is accepted but may overwrite
            any current changes if your change is not in sync with the latest change.
          format: int64
        template:
          maxLength: 255
          minLength: 0
          type: string
        cacheSize:
          type: integer
          description: The cache size of the DNS service.
          format: int64
        dnsServers:
          $ref: '#/components/schemas/ipAddresses'
      description: DNS configuration
      example:
        template: template
        cacheSize: 6
        listeners: ""
        featureType: featureType
        dnsViews:
          dnsView:
          - viewId: viewId
            viewMatch:
              ipSet:
              - ipSet
              - ipSet
              vnic:
              - vnic
              - vnic
              ipAddress:
              - ipAddress
              - ipAddress
            forwarders:
              ipAddress:
              - ipAddress
              - ipAddress
            name: name
            recursion: true
            enabled: true
          - viewId: viewId
            viewMatch:
              ipSet:
              - ipSet
              - ipSet
              vnic:
              - vnic
              - vnic
              ipAddress:
              - ipAddress
              - ipAddress
            forwarders:
              ipAddress:
              - ipAddress
              - ipAddress
            name: name
            recursion: true
            enabled: true
        logging:
          logLevel: logLevel
          enable: true
        dnsServers:
          ipAddress:
          - ipAddress
          - ipAddress
        version: 0
        enabled: true
    ProvisionSpec:
      type: object
      properties:
        provider:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SddcConfigSpec'
          description: Map of provider to sddc config spec
      description: Represents a provisioning spec for a sddc
      example:
        provider:
          key:
            region_display_names:
              key: region_display_names
            sddc_type_config_spec:
              key:
                availability:
                  key:
                  - hosts:
                    - 6
                    - 6
                    display_name: display_name
                    instance_type: instance_type
                    entity_capacity:
                      storage_capacity_gib: 1
                      number_of_sockets: 9
                      total_number_of_cores: 5
                      number_of_ssds: 2
                      memory_capacity_gib: 5
                      cpu_capacity_ghz: 7.061401241503109
                  - hosts:
                    - 6
                    - 6
                    display_name: display_name
                    instance_type: instance_type
                    entity_capacity:
                      storage_capacity_gib: 1
                      number_of_sockets: 9
                      total_number_of_cores: 5
                      number_of_ssds: 2
                      memory_capacity_gib: 5
                      cpu_capacity_ghz: 7.061401241503109
                expiry_in_days: 0
    SubInterfaces:
      type: object
      properties:
        subInterfaces:
          type: array
          description: List of sub interfaces.
          items:
            $ref: '#/components/schemas/subInterface'
      example:
        subInterfaces:
        - logicalSwitchId: logicalSwitchId
          addressGroups:
            addressGroups:
            - subnetPrefixLength: subnetPrefixLength
              secondaryAddresses:
                ipAddress:
                - ipAddress
                - ipAddress
                type: type
              primaryAddress: primaryAddress
              subnetMask: subnetMask
            - subnetPrefixLength: subnetPrefixLength
              secondaryAddresses:
                ipAddress:
                - ipAddress
                - ipAddress
                type: type
              primaryAddress: primaryAddress
              subnetMask: subnetMask
          logicalSwitchName: logicalSwitchName
          vlanId: 5
          tunnelId: 2441
          name: name
          isConnected: true
          index: 601
          label: label
          enableSendRedirects: true
          mtu: 2
        - logicalSwitchId: logicalSwitchId
          addressGroups:
            addressGroups:
            - subnetPrefixLength: subnetPrefixLength
              secondaryAddresses:
                ipAddress:
                - ipAddress
                - ipAddress
                type: type
              primaryAddress: primaryAddress
              subnetMask: subnetMask
            - subnetPrefixLength: subnetPrefixLength
              secondaryAddresses:
                ipAddress:
                - ipAddress
                - ipAddress
                type: type
              primaryAddress: primaryAddress
              subnetMask: subnetMask
          logicalSwitchName: logicalSwitchName
          vlanId: 5
          tunnelId: 2441
          name: name
          isConnected: true
          index: 601
          label: label
          enableSendRedirects: true
          mtu: 2
    KmsVpcEndpoint:
      type: object
      properties:
        vpc_endpoint_id:
          type: string
          description: The identifier of the VPC endpoint created to AWS Key Management
            Service
        network_interface_ids:
          type: array
          items:
            type: string
            description: A list of network interfaces in the VPC endpoint to AWS Key
              Management Service
    SddcLinkConfig:
      type: object
      properties:
        customer_subnet_ids:
          type: array
          items:
            type: string
            description: A list of AWS subnet IDs to create links to in the customer's
              account
        connected_account_id:
          type: string
          description: Determines which connected customer account to link to
    sddcNetworkDhcpConfig:
      type: object
      properties:
        ipPools:
          type: array
          description: List of IP pools in DHCP configuration.
          items:
            $ref: '#/components/schemas/sddcNetworkDhcpIpPool'
      description: DHCP configuration for the logical network.
      example:
        ipPools:
        - domainName: domainName
          ipRange: ipRange
        - domainName: domainName
          ipRange: ipRange
    l2vpnStats:
      type: object
      properties:
        tunnelStatus:
          type: string
          description: Status of the tunnel (UP/DOWN).
        establishedDate:
          type: integer
          description: Tunnel established date.
          format: int64
        name:
          type: string
          description: User defined name of the site.
        droppedRxPackets:
          type: integer
          description: Number of received packets dropped.
        encryptionAlgorithm:
          type: string
          description: Cipher used in encryption.
        failureMessage:
          type: string
          description: Reason for the tunnel down.
        txBytesFromLocalSubnet:
          type: integer
          description: Number of bytes transferred from local subnet.
        rxBytesOnLocalSubnet:
          type: integer
          description: Number of bytes received on the local subnet.
        droppedTxPackets:
          type: integer
          description: Number of transferred packets dropped.
        lastUpdatedTime:
          type: integer
          description: Time stamp of the statistics collection.
          format: int64
      description: L2 VPN status and statistics of a single L2 VPN site.
      example:
        establishedDate: 6
        droppedRxPackets: 1
        txBytesFromLocalSubnet: 5
        name: name
        rxBytesOnLocalSubnet: 5
        droppedTxPackets: 2
        lastUpdatedTime: 7
        encryptionAlgorithm: encryptionAlgorithm
        failureMessage: failureMessage
        tunnelStatus: tunnelStatus
    featureCapabilities:
      type: object
      properties:
        timestamp:
          type: integer
          description: Time stamp value at which the feature capabilities were retrieved.
          format: int64
        featureCapabilities:
          type: array
          description: List of feature capability information.
          items:
            $ref: '#/components/schemas/featureCapability'
      description: List of features and their capability details based on NSX Edge
        appliance form factor.
      example:
        featureCapabilities:
        - service: service
          configurationLimits:
          - value: value
            key: key
          - value: value
            key: key
          permission:
            accessPermission:
              viewPermission: true
              managePermission: true
            isLicensed: true
            dataPermission:
              savePermission: true
              publishPermission: true
          isSupported: true
        - service: service
          configurationLimits:
          - value: value
            key: key
          - value: value
            key: key
          permission:
            accessPermission:
              viewPermission: true
              managePermission: true
            isLicensed: true
            dataPermission:
              savePermission: true
              publishPermission: true
          isSupported: true
        timestamp: 5
    featureStatus:
      type: object
      properties:
        status:
          type: string
          description: Status of the feature or service.
        configured:
          type: boolean
          description: Value is true if feature is configured.
        serverStatus:
          type: string
          description: Server status of the feature or service. Values are up and
            down.
        publishStatus:
          type: string
          description: Publish status of the feature, whether APPLIED or PERSISTED.
        service:
          type: string
          description: Name of the feature or service.
      description: Individual feature status.
      example:
        configured: true
        serverStatus: serverStatus
        service: service
        publishStatus: publishStatus
        status: status
    TrafficShapingPolicy:
      type: object
      properties:
        burstSize:
          type: integer
          format: int64
        averageBandwidth:
          type: integer
          format: int64
        peakBandwidth:
          type: integer
          format: int64
        enabled:
          type: boolean
        inherited:
          type: boolean
      example:
        averageBandwidth: 9
        inherited: true
        burstSize: 7
        peakBandwidth: 3
        enabled: true
    ConnectivityValidationInput:
      type: object
      properties:
        id:
          type: string
          description: input value type, i.e. HOSTNAME_OR_IP, HOST_IP, HOSTNAME. Accept
            FQDN or IP address as input value when id = HOSTNAME_OR_IP, accept FQDN
            ONLY when id = HOSTNAME, accept IP address ONLY when id = HOST_IP.
          enum:
          - HOSTNAME
          - HOST_IP
          - HOSTNAME_OR_IP
        value:
          type: string
          description: the FQDN or IP address to run the test against, use \#primary-dns
            or \#secondary-dns as the on-prem primary/secondary DNS server IP.
        label:
          type: string
          description: (Optional, for UI display only) input value label.
      example:
        id: HOSTNAME
        label: label
        value: value
    firewallRules:
      type: object
      properties:
        firewallRules:
          type: array
          description: Ordered list of firewall rules.
          items:
            $ref: '#/components/schemas/nsxfirewallrule'
      description: Ordered list of firewall rules.
      example:
        firewallRules:
        - invalidDestination: true
          matchTranslated: true
          loggingEnabled: true
          destination:
            groupingObjectId:
            - groupingObjectId
            - groupingObjectId
            ipAddress:
            - ipAddress
            - ipAddress
            exclude: true
            vnicGroupId:
            - vnicGroupId
            - vnicGroupId
          description: description
          invalidApplication: true
          enabled: true
          ruleTag: 2
          application:
            service:
            - icmpType: icmpType
              sourcePort:
              - sourcePort
              - sourcePort
              protocol: protocol
              port:
              - port
              - port
            - icmpType: icmpType
              sourcePort:
              - sourcePort
              - sourcePort
              protocol: protocol
              port:
              - port
              - port
            applicationId:
            - applicationId
            - applicationId
          ruleType: ruleType
          name: name
          action: action
          ruleId: 0
          invalidSource: true
          direction: direction
          statistics:
            connectionCount: 1
            packetCount: 5
            byteCount: 5
            timestamp: 6
        - invalidDestination: true
          matchTranslated: true
          loggingEnabled: true
          destination:
            groupingObjectId:
            - groupingObjectId
            - groupingObjectId
            ipAddress:
            - ipAddress
            - ipAddress
            exclude: true
            vnicGroupId:
            - vnicGroupId
            - vnicGroupId
          description: description
          invalidApplication: true
          enabled: true
          ruleTag: 2
          application:
            service:
            - icmpType: icmpType
              sourcePort:
              - sourcePort
              - sourcePort
              protocol: protocol
              port:
              - port
              - port
            - icmpType: icmpType
              sourcePort:
              - sourcePort
              - sourcePort
              protocol: protocol
              port:
              - port
              - port
            applicationId:
            - applicationId
            - applicationId
          ruleType: ruleType
          name: name
          action: action
          ruleId: 0
          invalidSource: true
          direction: direction
          statistics:
            connectionCount: 1
            packetCount: 5
            byteCount: 5
            timestamp: 6
    ipsecGlobalConfig:
      type: object
      properties:
        psk:
          maxLength: 128
          minLength: 0
          type: string
          description: IPsec Global Pre Shared Key. Maximum characters is 128. Required
            when peerIp is configured as 'any' in NSX Edge IPsec Site configuration.
        caCertificates:
          $ref: '#/components/schemas/caCertificates'
        serviceCertificate:
          maxLength: 255
          minLength: 0
          type: string
          description: Certificate name or identifier. Required when x.509 is selected
            as the authentication mode.
        crlCertificates:
          $ref: '#/components/schemas/crlCertificates'
        extension:
          maxLength: 1024
          minLength: 0
          type: string
      description: IPsec Global configuration details.
      example:
        crlCertificates:
          crlCertificate:
          - crlCertificate
          - crlCertificate
        extension: extension
        caCertificates:
          caCertificate:
          - caCertificate
          - caCertificate
        serviceCertificate: serviceCertificate
        psk: psk
    ComputeGatewayTemplate:
      allOf:
      - $ref: '#/components/schemas/GatewayTemplate'
      - type: object
        properties:
          logical_networks:
            type: array
            items:
              $ref: '#/components/schemas/LogicalNetwork'
          nat_rules:
            type: array
            items:
              $ref: '#/components/schemas/NatRule'
          l2_vpn:
            type: object
            properties: {}
    SddcResourceConfig:
      required:
      - provider
      type: object
      properties:
        mgmt_appliance_network_name:
          type: string
          description: Name for management appliance network.
        nsxt:
          type: boolean
          description: if true, NSX-T UI is enabled.
        mgw_id:
          type: string
          description: Management Gateway Id
        nsx_mgr_url:
          type: string
          description: URL of the NSX Manager
        psc_management_ip:
          type: string
          description: PSC internal management IP
        psc_url:
          type: string
          description: URL of the PSC server
        cgws:
          type: array
          items:
            type: string
            description: set of compute gateway ids configured in the sddc
        availability_zones:
          type: array
          description: Availability zones over which esx hosts are provisioned. MultiAZ
            SDDCs will have hosts provisioned over two availability zones while SingleAZ
            SDDCs will provision over one.
          items:
            type: string
            description: Name of the availability zone.
        management_ds:
          type: string
          description: The ManagedObjectReference of the management Datastore
        nsx_api_public_endpoint_url:
          type: string
          description: nsx api entire base url
        custom_properties:
          type: object
          additionalProperties:
            type: string
        cloud_password:
          type: string
          description: Password for vCenter SDDC administrator
        provider:
          type: string
          description: Discriminator for additional properties
          enum:
          - AWS
          - ZEROCLOUD
        clusters:
          type: array
          description: List of clusters in the SDDC.
          items:
            $ref: '#/components/schemas/Cluster'
        vc_management_ip:
          type: string
          description: vCenter internal management IP
        sddc_networks:
          type: array
          items:
            type: string
            description: set of network ids configured in the sddc
        cloud_username:
          type: string
          description: Username for vCenter SDDC administrator
        esx_hosts:
          type: array
          items:
            $ref: '#/components/schemas/AwsEsxHost'
        nsx_mgr_management_ip:
          type: string
          description: NSX Manager internal management IP
        vc_instance_id:
          type: string
          description: unique id of the vCenter server
        esx_cluster_id:
          type: string
          description: Cluster Id to add ESX workflow
        vc_public_ip:
          type: string
          description: vCenter public IP
        skip_creating_vxlan:
          type: boolean
          description: skip creating vxlan for compute gateway for SDDC provisioning
        vc_url:
          type: string
          description: URL of the vCenter server
        sddc_manifest:
          $ref: '#/components/schemas/SddcManifest'
        vxlan_subnet:
          type: string
          description: VXLAN IP subnet
        cloud_user_group:
          type: string
          description: Group name for vCenter SDDC administrator
        management_rp:
          type: string
        region:
          type: string
          description: region in which sddc is deployed
        witness_availability_zone:
          type: string
          description: Availability zone where the witness node is provisioned for
            a MultiAZ SDDC. This is null for a SingleAZ SDDC.
        sddc_id:
          type: string
          description: sddc identifier
        pop_agent_xeni_connection:
          $ref: '#/components/schemas/PopAgentXeniConnection'
        nsx_controller_ips:
          type: array
          description: List of Controller IPs
          items:
            type: string
        esx_host_subnet:
          type: string
          description: ESX host subnet
        sso_domain:
          type: string
          description: The SSO domain name to use for vSphere users
        deployment_type:
          type: string
          description: Denotes if this is a SingleAZ SDDC or a MultiAZ SDDC.
          enum:
          - SINGLE_AZ
          - MULTI_AZ
        nsxt_addons:
          $ref: '#/components/schemas/NsxtAddons'
        dns_with_management_vm_private_ip:
          type: boolean
          description: if true, use the private IP addresses to register DNS records
            for the management VMs
      discriminator:
        propertyName: provider
    AbstractEntity:
      required:
      - created
      - id
      - updated
      - updated_by_user_id
      - user_id
      - user_name
      - version
      type: object
      properties:
        updated:
          type: string
          format: date-time
        user_id:
          type: string
          description: User id that last updated this record
        updated_by_user_id:
          type: string
          description: User id that last updated this record
        created:
          type: string
          format: date-time
        version:
          type: integer
          description: Version of this entity
          format: int32
          example: 5
        updated_by_user_name:
          type: string
          description: User name that last updated this record
        user_name:
          type: string
          description: User name that last updated this record
        id:
          type: string
          description: Unique ID for this entity
          example: 1d1c83ee-e0b7-4de9-b660-9a9ca1d22f32
    Vpn:
      type: object
      properties:
        version:
          type: string
          readOnly: true
        on_prem_gateway_ip:
          type: string
        on_prem_network_cidr:
          type: string
        pfs_enabled:
          type: boolean
        id:
          type: string
          readOnly: true
        channel_status:
          $ref: '#/components/schemas/VpnChannelStatus'
        on_prem_nat_ip:
          type: string
        name:
          type: string
        internal_network_ids:
          type: array
          items:
            type: string
        tunnel_statuses:
          type: array
          items:
            $ref: '#/components/schemas/VpnTunnelStatus'
        encryption:
          type: string
          enum:
          - AES
          - AES256
          - AES_GCM
          - TRIPLE_DES
          - UNKNOWN
        enabled:
          type: boolean
        state:
          type: string
          readOnly: true
          enum:
          - CONNECTED
          - DISCONNECTED
          - PARTIALLY_CONNECTED
          - UNKNOWN
        dh_group:
          type: string
          enum:
          - DH2
          - DH5
          - DH14
          - DH15
          - DH16
          - UNKNOWN
        authentication:
          type: string
          enum:
          - PSK
          - UNKNOWN
        pre_shared_key:
          type: string
        ike_option:
          type: string
          enum:
          - IKEV1
          - IKEV2
        digest_algorithm:
          type: string
          enum:
          - SHA1
          - SHA_256
    Sddc:
      allOf:
      - $ref: '#/components/schemas/AbstractEntity'
      - type: object
        properties:
          name:
            type: string
            description: name for SDDC
          sddc_state:
            type: string
            enum:
            - DEPLOYING
            - READY
            - DELETING
            - DELETION_FAILED
            - DELETED
            - FAILED
          expiration_date:
            type: string
            description: Expiration date of a sddc in UTC (will be set if its applicable)
            format: date-time
          org_id:
            type: string
          sddc_type:
            type: string
            description: Type of the sddc
          one_node_reduced_capacity:
            type: boolean
            description: Whether this sddc is reduced capacity 1NODE
          provider:
            type: string
            enum:
            - AWS
            - ZEROCLOUD
          account_link_state:
            type: string
            description: Account linking state of the sddc
            enum:
            - DELAYED
            - LINKED
            - UNLINKED
          sddc_access_state:
            type: string
            description: Describes the access state of sddc, valid state is DISABLED
              or ENABLED
          resource_config:
            $ref: '#/components/schemas/AwsSddcResourceConfig'
    GatewayTemplate:
      type: object
      properties:
        public_ip:
          $ref: '#/components/schemas/SddcPublicIp'
        primary_dns:
          type: string
        secondary_dns:
          type: string
        firewall_rules:
          type: array
          items:
            $ref: '#/components/schemas/FirewallRule'
        vpns:
          type: array
          items:
            $ref: '#/components/schemas/Vpn'
      description: Describes common properties for MGW and CGW configuration templates
    metaDashboardStats:
      type: object
      properties:
        vnics:
          type: array
          description: Statistics data is collected for these vNICs.
          items:
            $ref: '#/components/schemas/vnic'
        endTime:
          type: integer
          description: End time in seconds.
          format: int64
        startTime:
          type: integer
          description: Start time in seconds.
          format: int64
        interval:
          type: integer
          description: Time interval in seconds.
          format: int32
      description: Start time, end time and interval details.
      example:
        vnics:
        - isConnected: true
          index: 1
          inShapingPolicy:
            averageBandwidth: 9
            inherited: true
            burstSize: 7
            peakBandwidth: 3
            enabled: true
          enableSendRedirects: true
          label: label
          fenceParameters:
          - value: value
            key: key
          - value: value
            key: key
          type: type
          mtu: 3770
          enableProxyArp: true
          enableBridgeMode: true
          macAddresses:
          - edgeVmHaIndex: 0
            value: value
          - edgeVmHaIndex: 0
            value: value
          name: name
          subInterfaces:
            subInterfaces:
            - logicalSwitchId: logicalSwitchId
              addressGroups:
                addressGroups:
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
              logicalSwitchName: logicalSwitchName
              vlanId: 5
              tunnelId: 2441
              name: name
              isConnected: true
              index: 601
              label: label
              enableSendRedirects: true
              mtu: 2
            - logicalSwitchId: logicalSwitchId
              addressGroups:
                addressGroups:
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
              logicalSwitchName: logicalSwitchName
              vlanId: 5
              tunnelId: 2441
              name: name
              isConnected: true
              index: 601
              label: label
              enableSendRedirects: true
              mtu: 2
          portgroupName: portgroupName
          portgroupId: portgroupId
        - isConnected: true
          index: 1
          inShapingPolicy:
            averageBandwidth: 9
            inherited: true
            burstSize: 7
            peakBandwidth: 3
            enabled: true
          enableSendRedirects: true
          label: label
          fenceParameters:
          - value: value
            key: key
          - value: value
            key: key
          type: type
          mtu: 3770
          enableProxyArp: true
          enableBridgeMode: true
          macAddresses:
          - edgeVmHaIndex: 0
            value: value
          - edgeVmHaIndex: 0
            value: value
          name: name
          subInterfaces:
            subInterfaces:
            - logicalSwitchId: logicalSwitchId
              addressGroups:
                addressGroups:
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
              logicalSwitchName: logicalSwitchName
              vlanId: 5
              tunnelId: 2441
              name: name
              isConnected: true
              index: 601
              label: label
              enableSendRedirects: true
              mtu: 2
            - logicalSwitchId: logicalSwitchId
              addressGroups:
                addressGroups:
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
                - subnetPrefixLength: subnetPrefixLength
                  secondaryAddresses:
                    ipAddress:
                    - ipAddress
                    - ipAddress
                    type: type
                  primaryAddress: primaryAddress
                  subnetMask: subnetMask
              logicalSwitchName: logicalSwitchName
              vlanId: 5
              tunnelId: 2441
              name: name
              isConnected: true
              index: 601
              label: label
              enableSendRedirects: true
              mtu: 2
          portgroupName: portgroupName
          portgroupId: portgroupId
        startTime: 1
        interval: 1
        endTime: 1
    Task:
      allOf:
      - $ref: '#/components/schemas/AbstractEntity'
      - type: object
        properties:
          status:
            type: string
            enum:
            - STARTED
            - CANCELING
            - FINISHED
            - FAILED
            - CANCELED
          localized_error_message:
            type: string
          resource_id:
            type: string
            description: UUID of the resource the task is acting upon
          parent_task_id:
            type: string
            description: If this task was created by another task - this provides
              the linkage. Mostly for debugging.
          task_version:
            type: string
          correlation_id:
            type: string
            description: (Optional) Client provided uniqifier to make task creation
              idempotent. Be aware not all tasks support this. For tasks that do -
              supplying the same correlation Id, for the same task type, within a
              predefined window will ensure the operation happens at most once.
          start_resource_entity_version:
            type: integer
            description: Entity version of the resource at the start of the task.
              This is only set for some task types.
            format: int32
            example: 0
          sub_status:
            type: string
          task_type:
            type: string
          start_time:
            type: string
            format: date-time
          task_progress_phases:
            type: array
            description: Task progress phases involved in current task execution
            items:
              $ref: '#/components/schemas/TaskProgressPhase'
          error_message:
            type: string
          org_id:
            type: string
            example: 1d1c83ee-e0b7-4de9-b660-9a9ca1d22f32
          end_resource_entity_version:
            type: integer
            description: Entity version of the resource at the end of the task. This
              is only set for some task types.
            format: int32
            example: 5
          service_errors:
            type: array
            description: Service errors returned from SDDC services.
            items:
              $ref: '#/components/schemas/ServiceError'
          org_type:
            type: string
          estimated_remaining_minutes:
            type: integer
            description: Estimated remaining time in minute of the task execution,
              < 0 means no estimation for the task.
            format: int32
            example: 4
          params:
            type: object
            properties: {}
          progress_percent:
            type: integer
            description: Estimated progress percentage the task executed
            format: int32
            example: 75
          phase_in_progress:
            type: string
            description: The current in progress phase ID in the task execution, if
              none in progress, empty string returned.
          resource_type:
            type: string
            description: Type of resource being acted upon
          end_time:
            type: string
            format: date-time
    nsxfirewallrule:
      type: object
      properties:
        ruleType:
          type: string
          description: Identifies the type of the rule. internal_high or user.
        description:
          maxLength: 1024
          minLength: 0
          type: string
          description: Description for the rule
        ruleId:
          type: integer
          description: Identifier for the rule.
          format: int64
        matchTranslated:
          type: boolean
          description: 'Defines the order of NAT and Firewall pipeline. When false,
            firewall happens before NAT. Default : false'
        invalidApplication:
          type: boolean
        direction:
          type: string
          description: Direction. Possible values in or out. Default is 'any'.
        statistics:
          $ref: '#/components/schemas/firewallRuleStats'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: Name for the rule.
        invalidSource:
          type: boolean
        loggingEnabled:
          type: boolean
          description: Enable logging for the rule.
        destination:
          $ref: '#/components/schemas/addressFWSourceDestination'
        enabled:
          type: boolean
          description: Enable rule.
        application:
          $ref: '#/components/schemas/application'
        source:
          $ref: '#/components/schemas/addressFWSourceDestination'
        action:
          type: string
          description: 'Action. Values : accept, deny'
        invalidDestination:
          type: boolean
        ruleTag:
          type: integer
          description: Rule tag. Used to specify user-defined ruleId. If not specified
            NSX Manager will generate ruleId.
          format: int64
      description: Firewall Rule
      example:
        invalidDestination: true
        matchTranslated: true
        loggingEnabled: true
        destination:
          groupingObjectId:
          - groupingObjectId
          - groupingObjectId
          ipAddress:
          - ipAddress
          - ipAddress
          exclude: true
          vnicGroupId:
          - vnicGroupId
          - vnicGroupId
        description: description
        invalidApplication: true
        enabled: true
        ruleTag: 2
        application:
          service:
          - icmpType: icmpType
            sourcePort:
            - sourcePort
            - sourcePort
            protocol: protocol
            port:
            - port
            - port
          - icmpType: icmpType
            sourcePort:
            - sourcePort
            - sourcePort
            protocol: protocol
            port:
            - port
            - port
          applicationId:
          - applicationId
          - applicationId
        ruleType: ruleType
        name: name
        action: action
        ruleId: 0
        invalidSource: true
        direction: direction
        statistics:
          connectionCount: 1
          packetCount: 5
          byteCount: 5
          timestamp: 6
    InteractionPermissions:
      type: object
      properties:
        managePermission:
          type: boolean
        viewPermission:
          type: boolean
      example:
        viewPermission: true
        managePermission: true
    SddcPatchRequest:
      type: object
      properties:
        name:
          type: string
          description: The new name of the SDDC to be changed to.
      description: Patch request body for SDDC
    MaintenanceWindow:
      type: object
      properties:
        day_of_week:
          type: string
          enum:
          - SUNDAY
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
        hour_of_day:
          type: integer
          format: int32
      example:
        hour_of_day: 0
        day_of_week: SUNDAY
    VmcLocale:
      type: object
      properties:
        locale:
          type: string
          description: The locale to be used for translating responses for the session
      example:
        locale: locale
    ipsec:
      type: object
      properties:
        featureType:
          type: string
        logging:
          $ref: '#/components/schemas/logging'
        global:
          $ref: '#/components/schemas/ipsecGlobalConfig'
        enabled:
          type: boolean
          description: Value is true if feature is enabled. Default value is true.
            Optional.
        sites:
          $ref: '#/components/schemas/ipsecSites'
        disableEvent:
          type: boolean
          description: Enable/disable event generation on NSX Edge appliance for IPsec.
        version:
          type: integer
          description: Version number tracking each configuration change. To avoid
            problems with overwriting changes, always retrieve and modify the latest
            configuration to include the current version number in your request. If
            you provide a version number which is not current, the request is rejected.
            If you omit the version number, the request is accepted but may overwrite
            any current changes if your change is not in sync with the latest change.
          format: int64
        template:
          maxLength: 255
          minLength: 0
          type: string
      description: NSX Edge IPsec configuration details.
      example:
        template: template
        featureType: featureType
        logging:
          logLevel: logLevel
          enable: true
        global:
          crlCertificates:
            crlCertificate:
            - crlCertificate
            - crlCertificate
          extension: extension
          caCertificates:
            caCertificate:
            - caCertificate
            - caCertificate
          serviceCertificate: serviceCertificate
          psk: psk
        sites:
          sites:
          - peerId: peerId
            extension: extension
            enablePfs: true
            peerSubnets:
              subnets:
              - subnets
              - subnets
            certificate: certificate
            psk: psk
            description: description
            localId: localId
            encryptionAlgorithm: encryptionAlgorithm
            enabled: true
            mtu: 0
            peerIp: peerIp
            name: name
            siteId: siteId
            localIp: localIp
            authenticationMode: authenticationMode
            dhGroup: dhGroup
          - peerId: peerId
            extension: extension
            enablePfs: true
            peerSubnets:
              subnets:
              - subnets
              - subnets
            certificate: certificate
            psk: psk
            description: description
            localId: localId
            encryptionAlgorithm: encryptionAlgorithm
            enabled: true
            mtu: 0
            peerIp: peerIp
            name: name
            siteId: siteId
            localIp: localIp
            authenticationMode: authenticationMode
            dhGroup: dhGroup
        disableEvent: true
        version: 6
        enabled: true
    AvailableZoneInfo:
      type: object
      properties:
        subnets:
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
        name:
          type: string
          description: available zone name
    EbsBackedVsanConfig:
      type: object
      properties:
        instance_type:
          type: string
          description: instance type for EBS-backed VSAN configuration
      description: information for EBS-backed VSAN configuration
    caCertificates:
      type: object
      properties:
        caCertificate:
          type: array
          items:
            type: string
      description: CA certificate list. Optional.
      example:
        caCertificate:
        - caCertificate
        - caCertificate
    ipsecSites:
      type: object
      properties:
        sites:
          type: array
          items:
            $ref: '#/components/schemas/ipsecSite'
      description: List of IPsec sites for NSX Edge.
      example:
        sites:
        - peerId: peerId
          extension: extension
          enablePfs: true
          peerSubnets:
            subnets:
            - subnets
            - subnets
          certificate: certificate
          psk: psk
          description: description
          localId: localId
          encryptionAlgorithm: encryptionAlgorithm
          enabled: true
          mtu: 0
          peerIp: peerIp
          name: name
          siteId: siteId
          localIp: localIp
          authenticationMode: authenticationMode
          dhGroup: dhGroup
        - peerId: peerId
          extension: extension
          enablePfs: true
          peerSubnets:
            subnets:
            - subnets
            - subnets
          certificate: certificate
          psk: psk
          description: description
          localId: localId
          encryptionAlgorithm: encryptionAlgorithm
          enabled: true
          mtu: 0
          peerIp: peerIp
          name: name
          siteId: siteId
          localIp: localIp
          authenticationMode: authenticationMode
          dhGroup: dhGroup
    natRules:
      type: object
      properties:
        natRulesDtos:
          type: array
          description: Ordered list of NAT rules.
          items:
            $ref: '#/components/schemas/nsxnatrule'
      description: Ordered list of NAT rules.
      example:
        natRulesDtos:
        - translatedAddress: translatedAddress
          icmpType: icmpType
          dnatMatchSourcePort: dnatMatchSourcePort
          loggingEnabled: true
          vnic: vnic
          description: description
          enabled: true
          dnatMatchSourceAddress: dnatMatchSourceAddress
          ruleTag: 6
          protocol: protocol
          snatMatchDestinationPort: snatMatchDestinationPort
          originalAddress: originalAddress
          snatMatchDestinationAddress: snatMatchDestinationAddress
          ruleType: ruleType
          translatedPort: translatedPort
          action: action
          ruleId: 0
          originalPort: originalPort
        - translatedAddress: translatedAddress
          icmpType: icmpType
          dnatMatchSourcePort: dnatMatchSourcePort
          loggingEnabled: true
          vnic: vnic
          description: description
          enabled: true
          dnatMatchSourceAddress: dnatMatchSourceAddress
          ruleTag: 6
          protocol: protocol
          snatMatchDestinationPort: snatMatchDestinationPort
          originalAddress: originalAddress
          snatMatchDestinationAddress: snatMatchDestinationAddress
          ruleType: ruleType
          translatedPort: translatedPort
          action: action
          ruleId: 0
          originalPort: originalPort
    AwsAgent:
      allOf:
      - $ref: '#/components/schemas/Agent'
      - type: object
        properties:
          instance_id:
            type: string
          key_pair:
            $ref: '#/components/schemas/AwsKeyPair'
      x-vmw-vapi-discriminated-by: AWS
    VsanConfigConstraints:
      required:
      - max_capacity
      - min_capacity
      - num_hosts
      - recommended_capacities
      type: object
      properties:
        max_capacity:
          type: integer
          description: Maximum capacity supported for cluster (GiB).
          format: int64
        recommended_capacities:
          type: array
          description: List of supported capacities which may offer preferable performance
            (GiB).
          items:
            type: integer
            description: Recommended capacity.
            format: int64
        supported_capacity_increment:
          type: integer
          description: Increment to be added to min_capacity to result in a supported
            capacity (GiB).
          format: int64
        min_capacity:
          type: integer
          description: Minimum capacity supported for cluster (GiB).
          format: int64
        num_hosts:
          type: integer
          description: Number of hosts in cluster.
          format: int64
      description: |
        This describes the possible physical storage capacity choices for use with a given VsanStorageDesigner implementation.  These choices are specific to a customer-defined number of hosts per cluster.
      example:
        num_hosts: 5
        supported_capacity_increment: 1
        max_capacity: 0
        recommended_capacities:
        - 6
        - 6
        min_capacity: 5
    NatRule:
      type: object
      properties:
        rule_type:
          type: string
        protocol:
          type: string
        name:
          type: string
        internal_ports:
          type: string
        public_ports:
          type: string
        public_ip:
          type: string
        internal_ip:
          type: string
        action:
          type: string
          enum:
          - dnat
          - snat
        id:
          type: string
          readOnly: true
        revision:
          type: integer
          description: current revision of the list of nat rules, used to protect
            against concurrent modification (first writer wins)
          format: int32
          readOnly: true
    addressFWSourceDestination:
      type: object
      properties:
        exclude:
          type: boolean
          description: Exclude the specified source or destination.
        ipAddress:
          type: array
          description: List of string. Can specify single IP address, range of IP
            address, or in CIDR format. Can define multiple.
          items:
            type: string
        groupingObjectId:
          type: array
          description: List of string. Id of cluster, datacenter, distributedPortGroup,
            legacyPortGroup, VirtualMachine, vApp, resourcePool, logicalSwitch, IPSet,
            securityGroup. Can define multiple.
          items:
            type: string
        vnicGroupId:
          type: array
          description: List of string. Possible values are vnic-index-[1-9], vse,
            external or internal. Can define multiple.
          items:
            type: string
      description: Source or Destination for firewall rule. Default is 'any'.
      example:
        groupingObjectId:
        - groupingObjectId
        - groupingObjectId
        ipAddress:
        - ipAddress
        - ipAddress
        exclude: true
        vnicGroupId:
        - vnicGroupId
        - vnicGroupId
    DataPermissions:
      type: object
      properties:
        savePermission:
          type: boolean
        publishPermission:
          type: boolean
      example:
        savePermission: true
        publishPermission: true
    firewallConfig:
      type: object
      properties:
        firewallRules:
          $ref: '#/components/schemas/firewallRules'
        featureType:
          type: string
        version:
          type: integer
          description: Version number tracking each configuration change. To avoid
            problems with overwriting changes, always retrieve and modify the latest
            configuration to include the current version number in your request. If
            you provide a version number which is not current, the request is rejected.
            If you omit the version number, the request is accepted but may overwrite
            any current changes if your change is not in sync with the latest change.
          format: int64
        template:
          maxLength: 255
          minLength: 0
          type: string
        globalConfig:
          $ref: '#/components/schemas/firewallGlobalConfig'
        enabled:
          type: boolean
          description: Value is true if feature is enabled. Default value is true.
            Optional.
        defaultPolicy:
          $ref: '#/components/schemas/firewallDefaultPolicy'
      description: Firewall Configuration
      example:
        template: template
        defaultPolicy:
          loggingEnabled: true
          action: action
        globalConfig:
          tcpTimeoutOpen: 1
          logIcmpErrors: true
          icmp6Timeout: 1
          tcpSendResetForClosedVsePorts: true
          dropInvalidTraffic: true
          icmpTimeout: 1
          ipGenericTimeout: 1
          tcpTimeoutClose: 1
          logInvalidTraffic: true
          tcpTimeoutEstablished: 1
          tcpPickOngoingConnections: true
          udpTimeout: 1
          enableSynFloodProtection: true
          dropIcmpReplays: true
          tcpAllowOutOfWindowPackets: true
        featureType: featureType
        firewallRules:
          firewallRules:
          - invalidDestination: true
            matchTranslated: true
            loggingEnabled: true
            destination:
              groupingObjectId:
              - groupingObjectId
              - groupingObjectId
              ipAddress:
              - ipAddress
              - ipAddress
              exclude: true
              vnicGroupId:
              - vnicGroupId
              - vnicGroupId
            description: description
            invalidApplication: true
            enabled: true
            ruleTag: 2
            application:
              service:
              - icmpType: icmpType
                sourcePort:
                - sourcePort
                - sourcePort
                protocol: protocol
                port:
                - port
                - port
              - icmpType: icmpType
                sourcePort:
                - sourcePort
                - sourcePort
                protocol: protocol
                port:
                - port
                - port
              applicationId:
              - applicationId
              - applicationId
            ruleType: ruleType
            name: name
            action: action
            ruleId: 0
            invalidSource: true
            direction: direction
            statistics:
              connectionCount: 1
              packetCount: 5
              byteCount: 5
              timestamp: 6
          - invalidDestination: true
            matchTranslated: true
            loggingEnabled: true
            destination:
              groupingObjectId:
              - groupingObjectId
              - groupingObjectId
              ipAddress:
              - ipAddress
              - ipAddress
              exclude: true
              vnicGroupId:
              - vnicGroupId
              - vnicGroupId
            description: description
            invalidApplication: true
            enabled: true
            ruleTag: 2
            application:
              service:
              - icmpType: icmpType
                sourcePort:
                - sourcePort
                - sourcePort
                protocol: protocol
                port:
                - port
                - port
              - icmpType: icmpType
                sourcePort:
                - sourcePort
                - sourcePort
                protocol: protocol
                port:
                - port
                - port
              applicationId:
              - applicationId
              - applicationId
            ruleType: ruleType
            name: name
            action: action
            ruleId: 0
            invalidSource: true
            direction: direction
            statistics:
              connectionCount: 1
              packetCount: 5
              byteCount: 5
              timestamp: 6
        version: 0
        enabled: true
    ipAddresses:
      type: object
      properties:
        ipAddress:
          type: array
          description: List of IP addresses.
          items:
            type: string
      description: IP address
      example:
        ipAddress:
        - ipAddress
        - ipAddress
    AwsSubnet:
      type: object
      properties:
        connected_account_id:
          type: string
          description: The connected account ID this subnet is accessible through.
            This is an internal ID formatted as a UUID specific to Skyscraper.
        region_name:
          type: string
          description: The region this subnet is in, usually in the form of country
            code, general location, and a number (ex. us-west-2).
        availability_zone:
          type: string
          description: The availability zone this subnet is in, which should be the
            region name plus one extra letter (ex. us-west-2a).
        subnet_id:
          type: string
          description: The subnet ID in AWS, provided in the form 'subnet-######'.
        subnet_cidr_block:
          type: string
          description: The CIDR block of the subnet, in the form of '#.#.#.#/#'.
        is_compatible:
          type: boolean
          description: Flag indicating whether this subnet is compatible. If true,
            this is a valid choice for the customer to deploy a SDDC in.
        vpc_id:
          type: string
          description: The VPC ID the subnet resides in within AWS. Tends to be 'vpc-#######'.
        vpc_cidr_block:
          type: string
          description: The CIDR block of the VPC, in the form of '#.#.#.#/#'.
        name:
          type: string
          description: Optional field (may not be provided by AWS), indicates the
            found name tag for the subnet.
      example:
        availability_zone: availability_zone
        vpc_id: vpc_id
        connected_account_id: connected_account_id
        name: name
        subnet_id: subnet_id
        is_compatible: true
        region_name: region_name
        subnet_cidr_block: subnet_cidr_block
        vpc_cidr_block: vpc_cidr_block
    PopAgentXeniConnection:
      type: object
      properties:
        default_subnet_route:
          type: string
          description: The gateway route ip fo the subnet.
        eni_info:
          $ref: '#/components/schemas/EniInfo'
    IpsecTunnelStats:
      type: object
      properties:
        tunnelStatus:
          type: string
        peerSPI:
          type: string
        rxBytesOnLocalSubnet:
          type: integer
        establishedDate:
          type: string
        peerSubnet:
          type: string
        authenticationAlgorithm:
          type: string
        tunnelState:
          type: string
        txBytesFromLocalSubnet:
          type: integer
        lastInformationalMessage:
          type: string
        localSPI:
          type: string
        encryptionAlgorithm:
          type: string
        localSubnet:
          type: string
      example:
        peerSubnet: peerSubnet
        authenticationAlgorithm: authenticationAlgorithm
        lastInformationalMessage: lastInformationalMessage
        establishedDate: establishedDate
        txBytesFromLocalSubnet: 5
        localSubnet: localSubnet
        rxBytesOnLocalSubnet: 1
        tunnelState: tunnelState
        localSPI: localSPI
        peerSPI: peerSPI
        encryptionAlgorithm: encryptionAlgorithm
        tunnelStatus: tunnelStatus
    hostLeaseInfo:
      type: object
      properties:
        macAddress:
          type: string
          description: MAC address of the client.
        ends:
          type: string
          description: End time of the lease.
        abandoned:
          type: string
          description: Time stamp of when IP address was marked as abandoned.
        cltt:
          type: string
          description: Client Last Transaction Time of the lease info.
        clientHostname:
          type: string
          description: Name of the client.
        starts:
          type: string
          description: Start time of the lease.
        bindingState:
          type: string
          description: Lease's binding state.
        hardwareType:
          type: string
          description: The hardware type on which the lease will be used.
        tsfp:
          type: string
          description: Time Sent From Partner of the lease info.
        uid:
          type: string
          description: Uid to identify the DHCP lease.
        nextBindingState:
          type: string
          description: Indicates what state the lease will move to when the current
            state expires.
        ipAddress:
          type: string
          description: IP address of the client.
        tstp:
          type: string
          description: Time Sent To Partner of the lease info.
      description: DHCP lease information.
      example:
        bindingState: bindingState
        cltt: cltt
        hardwareType: hardwareType
        ipAddress: ipAddress
        tstp: tstp
        clientHostname: clientHostname
        uid: uid
        macAddress: macAddress
        nextBindingState: nextBindingState
        ends: ends
        abandoned: abandoned
        starts: starts
        tsfp: tsfp
    crlCertificates:
      type: object
      properties:
        crlCertificate:
          type: array
          items:
            type: string
      description: CRL certificate list. Optional.
      example:
        crlCertificate:
        - crlCertificate
        - crlCertificate
    dnsViewMatch:
      type: object
      properties:
        vnic:
          type: array
          items:
            type: string
        ipSet:
          type: array
          items:
            type: string
        ipAddress:
          type: array
          items:
            type: string
      description: Dns view match
      example:
        ipSet:
        - ipSet
        - ipSet
        vnic:
        - vnic
        - vnic
        ipAddress:
        - ipAddress
        - ipAddress
    edgeSummary:
      type: object
      properties:
        featureCapabilities:
          $ref: '#/components/schemas/featureCapabilities'
        edgeType:
          type: string
          description: NSX Edge type, whether 'gatewayServices' or 'distributedRouter'.
        logicalRouterScopes:
          $ref: '#/components/schemas/LogicalRouterScopes'
        recentJobInfo:
          $ref: '#/components/schemas/edgeJob'
        hypervisorAssist:
          type: boolean
        edgeAssistId:
          type: integer
          description: ID generated by NSX Manager for Distributed Logical Router
            only.
          format: int64
        edgeStatus:
          type: string
          description: NSX Edge appliance health status identified by GREY (unknown
            status), GREEN (health checks are successful), YELLOW (intermittent health
            check failure), RED (none of the appliances are in serving state). If
            health check fails for 5 consecutive times for all appliance (2 for HA
            else 1) then status will turn from YELLOW to RED.
        edgeAssistInstanceName:
          type: string
          description: Name derived by NSX Manager only for Distributed Logical Router.
        objectId:
          type: string
        nodeId:
          type: string
        id:
          type: string
          description: NSX Edge ID.
        datacenterName:
          type: string
          description: Datacenter name where the NSX Edge is deployed.
        state:
          type: string
          description: Deployment state of the NSX Edge appliance. Values are 'deployed'
            when VMs have been deployed, 'undeployed' when no VMs are deployed and
            'active' when Edge type is Distributed Logical Router and has no appliance
            deployed but is serving data path.
        clientHandle:
          type: string
        scope:
          $ref: '#/components/schemas/ScopeInfo'
        type:
          $ref: '#/components/schemas/ObjectType'
        revision:
          type: integer
          format: int64
        vsmUuid:
          type: string
        description:
          type: string
        extendedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
        localEgressEnabled:
          type: boolean
          description: Value is true if local egress is enabled for UDLR traffic.
            Applicable only for Universal Distributed Logical Router.
        universalRevision:
          type: integer
          format: int64
        allowedActions:
          type: array
          items:
            type: string
        objectTypeName:
          type: string
        isUpgradeAvailable:
          type: boolean
          description: Value is true if NSX Edge upgrade is available.
        isUniversal:
          type: boolean
        name:
          type: string
        lrouterUuid:
          type: string
          description: Distributed Logical Router UUID provided by the NSX Controller.
        appliancesSummary:
          $ref: '#/components/schemas/appliancesSummary'
        apiVersion:
          type: string
          description: REST API version applicable for the NSX Edge.
        tenantId:
          type: string
          description: Tenant ID for the NSX Edge.
        datacenterMoid:
          type: string
          description: vCenter MOID of the datacenter where the NSX Edge is deployed.
        numberOfConnectedVnics:
          type: integer
          description: Number of connected vnics that are configured on the NSX Edge.
          format: int32
      description: NSX Edge summary. Read only.
      example:
        numberOfConnectedVnics: 4
        datacenterName: datacenterName
        featureCapabilities:
          featureCapabilities:
          - service: service
            configurationLimits:
            - value: value
              key: key
            - value: value
              key: key
            permission:
              accessPermission:
                viewPermission: true
                managePermission: true
              isLicensed: true
              dataPermission:
                savePermission: true
                publishPermission: true
            isSupported: true
          - service: service
            configurationLimits:
            - value: value
              key: key
            - value: value
              key: key
            permission:
              accessPermission:
                viewPermission: true
                managePermission: true
              isLicensed: true
              dataPermission:
                savePermission: true
                publishPermission: true
            isSupported: true
          timestamp: 5
        allowedActions:
        - allowedActions
        - allowedActions
        objectTypeName: objectTypeName
        description: description
        type:
          name: name
        edgeAssistId: 5
        extendedAttributes:
        - name: name
          value: value
        - name: name
          value: value
        hypervisorAssist: true
        universalRevision: 7
        apiVersion: apiVersion
        isUniversal: true
        edgeType: edgeType
        scope:
          objectTypeName: objectTypeName
          name: name
          id: id
        edgeStatus: edgeStatus
        clientHandle: clientHandle
        id: id
        state: state
        objectId: objectId
        edgeAssistInstanceName: edgeAssistInstanceName
        vsmUuid: vsmUuid
        isUpgradeAvailable: true
        revision: 2
        lrouterUuid: lrouterUuid
        datacenterMoid: datacenterMoid
        logicalRouterScopes:
          logicalRouterScope:
          - id: id
            type: type
          - id: id
            type: type
        recentJobInfo:
          result:
          - value: value
            key: key
          - value: value
            key: key
          jobId: jobId
          edgeId: edgeId
          module: module
          errorCode: errorCode
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          message: message
          status: status
        name: name
        tenantId: tenantId
        localEgressEnabled: true
        appliancesSummary:
          dataStoreMoidOfActiveVse: dataStoreMoidOfActiveVse
          resourcePoolMoidOfActiveVse: resourcePoolMoidOfActiveVse
          hostMoidOfActiveVse: hostMoidOfActiveVse
          hostNameOfActiveVse: hostNameOfActiveVse
          fqdn: fqdn
          deployAppliances: true
          resourcePoolNameOfActiveVse: resourcePoolNameOfActiveVse
          vmNameOfActiveVse: vmNameOfActiveVse
          activeVseHaIndex: 2
          communicationChannel: communicationChannel
          applianceSize: applianceSize
          dataStoreNameOfActiveVse: dataStoreNameOfActiveVse
          statusFromVseUpdatedOn: 3
          vmVersion: vmVersion
          enableFips: true
          numberOfDeployedVms: 9
          vmMoidOfActiveVse: vmMoidOfActiveVse
          vmBuildInfo: vmBuildInfo
        nodeId: nodeId
    ipsecDashboardStats:
      type: object
      properties:
        ipsecBytesOut:
          type: array
          description: Tx transmitted bytes.
          items:
            $ref: '#/components/schemas/DashboardStat'
        ipsecBytesIn:
          type: array
          description: Rx received bytes.
          items:
            $ref: '#/components/schemas/DashboardStat'
        ipsecTunnels:
          type: array
          description: Number of Ipsec tunnels.
          items:
            $ref: '#/components/schemas/DashboardStat'
      description: Dashboard Statistics data for Ipsec.
      example:
        ipsecTunnels:
        - null
        - null
        ipsecBytesIn:
        - null
        - null
        ipsecBytesOut:
        - null
        - null
    L2Vpn:
      required:
      - sites
      type: object
      properties:
        enabled:
          type: boolean
          description: Enable (true) or disable (false) L2 VPN.
        sites:
          type: array
          description: Array of L2 vpn site config.
          items:
            $ref: '#/components/schemas/Site'
        listener_ip:
          type: string
          description: Public uplink ip address. IP of external interface on which
            L2VPN service listens to.
    FirewallRuleScope:
      type: object
      properties:
        grouping_object_ids:
          type: array
          items:
            type: string
            description: Id of IPAddresses grouping Objects available to the gateway.
        vnic_group_ids:
          type: array
          items:
            type: string
            description: vnic group id
            enum:
            - vse
            - internal
            - external
            - vnic-index-0
            - vnic-index-1
            - vnic-index-2
            - vnic-index-3
            - vnic-index-4
            - vnic-index-5
            - vnic-index-6
            - vnic-index-7
            - vnic-index-8
            - vnic-index-9
      description: Optional for FirewallRule. If not specified, defaults to 'any'.
    logging:
      type: object
      properties:
        logLevel:
          type: string
          description: 'Log level. Valid values: emergency, alert, critical, error,
            warning, notice, info, debug.'
        enable:
          type: boolean
          description: Logging enabled.
      description: logging.
      example:
        logLevel: logLevel
        enable: true
    cbmStatistic:
      type: object
      properties:
        vnic:
          type: integer
          description: Vnic index.
          format: int32
        timestamp:
          type: integer
          description: Timestamp value.
          format: int64
        out:
          type: number
          description: Tx rate (Kilobits per second - kbps)
          format: double
        in:
          type: number
          description: Rx rate (Kilobits per second - kbps)
          format: double
      description: Statistics data for each vnic.
      example:
        vnic: 0
        in: 5.962133916683182
        timestamp: 6
        out: 1.4658129805029452
    dnsView:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the DNS view.
        viewMatch:
          $ref: '#/components/schemas/dnsViewMatch'
        recursion:
          type: boolean
          description: Recursion enabled on DNS view.
        viewId:
          type: string
          description: Identifier for the DNS view.
        forwarders:
          $ref: '#/components/schemas/dnsForwarders'
        enabled:
          type: boolean
          description: DNS view is enabled.
      description: DNS View
      example:
        viewId: viewId
        viewMatch:
          ipSet:
          - ipSet
          - ipSet
          vnic:
          - vnic
          - vnic
          ipAddress:
          - ipAddress
          - ipAddress
        forwarders:
          ipAddress:
          - ipAddress
          - ipAddress
        name: name
        recursion: true
        enabled: true
    VpnChannelStatus:
      type: object
      properties:
        channel_status:
          type: string
          readOnly: true
          enum:
          - CONNECTED
          - DISCONNECTED
          - UNKNOWN
        channel_state:
          type: string
          readOnly: true
        last_info_message:
          type: string
          readOnly: true
        failure_message:
          type: string
          readOnly: true
    dashboardStatistics:
      type: object
      properties:
        dataDto:
          $ref: '#/components/schemas/dashboardData'
        metaDto:
          $ref: '#/components/schemas/metaDashboardStats'
      description: Dashboard Statistics data.
      example:
        dataDto:
          interfaces:
            vnic_9_in_byte:
            - null
            - null
            vnic_8_in_byte:
            - null
            - null
            vnic_0_out_byte:
            - null
            - null
            vnic_7_in_byte:
            - null
            - null
            vnic_3_out_byte:
            - null
            - null
            vnic_6_in_byte:
            - null
            - null
            vnic_7_out_byte:
            - null
            - null
            vnic_4_out_byte:
            - null
            - null
            vnic_6_out_byte:
            - null
            - null
            vnic_7_out_pkt:
            - null
            - null
            vnic_9_out_pkt:
            - null
            - null
            vnic_0_in_pkt:
            - null
            - null
            vnic_9_out_byte:
            - null
            - null
            vnic_8_out_pkt:
            - null
            - null
            vnic_2_in_pkt:
            - null
            - null
            vnic_9_in_pkt:
            - null
            - null
            vnic_1_out_byte:
            - null
            - null
            vnic_1_in_pkt:
            - null
            - null
            vnic_7_in_pkt:
            - null
            - null
            vnic_3_in_pkt:
            - null
            - null
            vnic_8_in_pkt:
            - null
            - null
            vnic_5_in_pkt:
            - null
            - null
            vnic_4_in_pkt:
            - null
            - null
            vnic_6_in_pkt:
            - null
            - null
            vnic_2_out_pkt:
            - null
            - null
            vnic_0_in_byte:
            - null
            - null
            vnic_2_out_byte:
            - null
            - null
            vnic_1_out_pkt:
            - null
            - null
            vnic_8_out_byte:
            - null
            - null
            vnic_4_out_pkt:
            - null
            - null
            vnic_0_out_pkt:
            - null
            - null
            vnic_5_out_pkt:
            - null
            - null
            vnic_1_in_byte:
            - null
            - null
            vnic_6_out_pkt:
            - null
            - null
            vnic_4_in_byte:
            - null
            - null
            vnic_5_in_byte:
            - null
            - null
            vnic_2_in_byte:
            - null
            - null
            vnic_3_in_byte:
            - null
            - null
            vnic_3_out_pkt:
            - null
            - null
            vnic_5_out_byte:
            - null
            - null
          firewall:
            connections:
            - value: 6.027456183070403
              timestamp: 0
            - value: 6.027456183070403
              timestamp: 0
          loadBalancer:
            lbBpsIn:
            - null
            - null
            lbHttpReqs:
            - null
            - null
            lbSessions:
            - null
            - null
            lbBpsOut:
            - null
            - null
          ipsec:
            ipsecTunnels:
            - null
            - null
            ipsecBytesIn:
            - null
            - null
            ipsecBytesOut:
            - null
            - null
          sslvpn:
            sslvpnBytesIn:
            - null
            - null
            sslvpnBytesOut:
            - null
            - null
            activeClients:
            - null
            - null
            sessionsCreated:
            - null
            - null
            authFailures:
            - null
            - null
        metaDto:
          vnics:
          - isConnected: true
            index: 1
            inShapingPolicy:
              averageBandwidth: 9
              inherited: true
              burstSize: 7
              peakBandwidth: 3
              enabled: true
            enableSendRedirects: true
            label: label
            fenceParameters:
            - value: value
              key: key
            - value: value
              key: key
            type: type
            mtu: 3770
            enableProxyArp: true
            enableBridgeMode: true
            macAddresses:
            - edgeVmHaIndex: 0
              value: value
            - edgeVmHaIndex: 0
              value: value
            name: name
            subInterfaces:
              subInterfaces:
              - logicalSwitchId: logicalSwitchId
                addressGroups:
                  addressGroups:
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                logicalSwitchName: logicalSwitchName
                vlanId: 5
                tunnelId: 2441
                name: name
                isConnected: true
                index: 601
                label: label
                enableSendRedirects: true
                mtu: 2
              - logicalSwitchId: logicalSwitchId
                addressGroups:
                  addressGroups:
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                logicalSwitchName: logicalSwitchName
                vlanId: 5
                tunnelId: 2441
                name: name
                isConnected: true
                index: 601
                label: label
                enableSendRedirects: true
                mtu: 2
            portgroupName: portgroupName
            portgroupId: portgroupId
          - isConnected: true
            index: 1
            inShapingPolicy:
              averageBandwidth: 9
              inherited: true
              burstSize: 7
              peakBandwidth: 3
              enabled: true
            enableSendRedirects: true
            label: label
            fenceParameters:
            - value: value
              key: key
            - value: value
              key: key
            type: type
            mtu: 3770
            enableProxyArp: true
            enableBridgeMode: true
            macAddresses:
            - edgeVmHaIndex: 0
              value: value
            - edgeVmHaIndex: 0
              value: value
            name: name
            subInterfaces:
              subInterfaces:
              - logicalSwitchId: logicalSwitchId
                addressGroups:
                  addressGroups:
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                logicalSwitchName: logicalSwitchName
                vlanId: 5
                tunnelId: 2441
                name: name
                isConnected: true
                index: 601
                label: label
                enableSendRedirects: true
                mtu: 2
              - logicalSwitchId: logicalSwitchId
                addressGroups:
                  addressGroups:
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                logicalSwitchName: logicalSwitchName
                vlanId: 5
                tunnelId: 2441
                name: name
                isConnected: true
                index: 601
                label: label
                enableSendRedirects: true
                mtu: 2
            portgroupName: portgroupName
            portgroupId: portgroupId
          startTime: 1
          interval: 1
          endTime: 1
    AccountLinkConfig:
      type: object
      properties:
        delay_account_link:
          type: boolean
          description: Boolean flag identifying whether account linking should be
            delayed or not for the SDDC.
          default: false
    Subnet:
      type: object
      properties:
        subnet_id:
          type: string
          description: subnet id
        name:
          type: string
          description: subnet name
        route_tables:
          type: array
          items:
            $ref: '#/components/schemas/SubnetRouteTableInfo'
      description: (as there's already one SubnetInfo, use Subnet instead)
    SddcConfigSpec:
      type: object
      properties:
        sddc_type_config_spec:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ConfigSpec'
          description: Map of sddc type to config spec
        region_display_names:
          type: object
          additionalProperties:
            type: string
            description: Region display label
          description: The region name to display names mapping
      description: Represents a configuration spec for a sddc
      example:
        region_display_names:
          key: region_display_names
        sddc_type_config_spec:
          key:
            availability:
              key:
              - hosts:
                - 6
                - 6
                display_name: display_name
                instance_type: instance_type
                entity_capacity:
                  storage_capacity_gib: 1
                  number_of_sockets: 9
                  total_number_of_cores: 5
                  number_of_ssds: 2
                  memory_capacity_gib: 5
                  cpu_capacity_ghz: 7.061401241503109
              - hosts:
                - 6
                - 6
                display_name: display_name
                instance_type: instance_type
                entity_capacity:
                  storage_capacity_gib: 1
                  number_of_sockets: 9
                  total_number_of_cores: 5
                  number_of_ssds: 2
                  memory_capacity_gib: 5
                  cpu_capacity_ghz: 7.061401241503109
            expiry_in_days: 0
    ErrorResponse:
      required:
      - error_code
      - error_messages
      - path
      - retryable
      - status
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code
        path:
          type: string
          description: Originating request URI
        retryable:
          type: boolean
          description: If true, client should retry operation
          default: false
        error_code:
          type: string
          description: unique error code
        error_messages:
          type: array
          description: localized error messages
          items:
            type: string
    AwsEsxHost:
      allOf:
      - $ref: '#/components/schemas/EsxHost'
      - type: object
        properties:
          internal_public_ip_pool:
            type: array
            items:
              $ref: '#/components/schemas/SddcPublicIp'
      x-vmw-vapi-discriminated-by: AWS
    OrgProperties:
      type: object
      properties:
        values:
          type: object
          additionalProperties:
            type: string
          description: A map of string properties to values.
    VsanClusterReconfigConstraints:
      required:
      - available_capacities
      - default_capacities
      - default_reconfig_bias_id
      - hosts
      - reconfig_biases
      type: object
      properties:
        reconfig_biases:
          type: array
          description: Biases to reconfigure vSAN in an existing cluster.
          items:
            $ref: '#/components/schemas/VsanClusterReconfigBias'
        available_capacities:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/VsanAvailableCapacity'
          description: |
            A map of VsanClusterReconfigBias id to the list of VsanAvailableCapacity. It gives all of available vSAN capacities for each of reconfiguration biases.
        default_capacities:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VsanAvailableCapacity'
          description: |
            A map of VsanClusterReconfigBias id to a VsanAvailableCapacity. It gives the default VsanAvailableCapacity for each of reconfiguration biases.
        hosts:
          type: integer
          description: The number of hosts in a cluster for the constraints.
          format: int32
        default_reconfig_bias_id:
          type: string
          description: The id of default VsanClusterReconfigBias for this constraints.
      description: Storage constraint information for reconfiguring vSAN in existing
        cluster.
      example:
        default_capacities: {}
        hosts: 6
        reconfig_biases:
        - short_description: short_description
          full_description: full_description
          id: id
        - short_description: short_description
          full_description: full_description
          id: id
        default_reconfig_bias_id: default_reconfig_bias_id
        available_capacities:
          key:
          - cost: cost
            size: 0
            quality: quality
          - cost: cost
            size: 0
            quality: quality
    firewallDefaultPolicy:
      type: object
      properties:
        action:
          type: string
          description: Action. Default is deny. Supported values accept, deny
        loggingEnabled:
          type: boolean
          description: Enable logging for the rule.
      description: Firewall default policy. Default is deny.
      example:
        loggingEnabled: true
        action: action
    VpcInfoSubnets:
      allOf:
      - type: object
        properties:
          vpc_id:
            type: string
            description: The ID of the VPC these subnets belong to.
          cidr_block:
            type: string
            description: The overall CIDR block of the VPC. This is the AWS primary
              CIDR block.
          description:
            type: string
            description: The description of the VPC; usually it's name or id.
          subnets:
            type: array
            items:
              $ref: '#/components/schemas/SubnetInfo'
    nsxfirewallservice:
      type: object
      properties:
        sourcePort:
          type: array
          description: List of source ports.
          items:
            type: string
        protocol:
          type: string
          description: Protocol.
        port:
          type: array
          description: List of destination ports.
          items:
            type: string
        icmpType:
          type: string
          description: IcmpType. Only supported when protocol is icmp. Default is
            'any'.
      description: Application (service) for firewall rule.
      example:
        icmpType: icmpType
        sourcePort:
        - sourcePort
        - sourcePort
        protocol: protocol
        port:
        - port
        - port
    edgeVmStatus:
      type: object
      properties:
        index:
          type: integer
          description: High Availability index of the appliance. Values are 0 and
            1.
          format: int32
        haState:
          type: string
          description: High Availability state of the appliance. Values are active
            and standby.
        name:
          type: string
          description: Name of the NSX Edge appliance.
        id:
          type: string
          description: vCenter MOID of the NSX Edge appliance.
        edgeVMStatus:
          type: string
          description: NSX Edge appliance health status identified by GREY (unknown
            status), GREEN (health checks are successful), YELLOW (intermittent health
            check failure), RED (appliance not in serving state).
        preRulesGenerationNumber:
          type: integer
          description: Value of the last published pre rules generation number.
          format: int64
      description: Status of each of the deployed NSX Edge appliances.
      example:
        edgeVMStatus: edgeVMStatus
        name: name
        index: 5
        id: id
        haState: haState
        preRulesGenerationNumber: 5
    ScopeInfo:
      type: object
      properties:
        objectTypeName:
          type: string
        id:
          type: string
        name:
          type: string
      example:
        objectTypeName: objectTypeName
        name: name
        id: id
    IpsecSiteStats:
      type: object
      properties:
        rxBytesOnSite:
          type: integer
        tunnelStats:
          type: array
          items:
            $ref: '#/components/schemas/IpsecTunnelStats'
        ikeStatus:
          $ref: '#/components/schemas/IpsecSiteIKEStatus'
        siteStatus:
          type: string
        txBytesFromSite:
          type: integer
      example:
        ikeStatus:
          peerId: peerId
          lastInformationalMessage: lastInformationalMessage
          peerIpAddress: peerIpAddress
          peerSubnets:
          - peerSubnets
          - peerSubnets
          localSubnets:
          - localSubnets
          - localSubnets
          channelStatus: channelStatus
          localIpAddress: localIpAddress
          channelState: channelState
        tunnelStats:
        - peerSubnet: peerSubnet
          authenticationAlgorithm: authenticationAlgorithm
          lastInformationalMessage: lastInformationalMessage
          establishedDate: establishedDate
          txBytesFromLocalSubnet: 5
          localSubnet: localSubnet
          rxBytesOnLocalSubnet: 1
          tunnelState: tunnelState
          localSPI: localSPI
          peerSPI: peerSPI
          encryptionAlgorithm: encryptionAlgorithm
          tunnelStatus: tunnelStatus
        - peerSubnet: peerSubnet
          authenticationAlgorithm: authenticationAlgorithm
          lastInformationalMessage: lastInformationalMessage
          establishedDate: establishedDate
          txBytesFromLocalSubnet: 5
          localSubnet: localSubnet
          rxBytesOnLocalSubnet: 1
          tunnelState: tunnelState
          localSPI: localSPI
          peerSPI: peerSPI
          encryptionAlgorithm: encryptionAlgorithm
          tunnelStatus: tunnelStatus
        siteStatus: siteStatus
        txBytesFromSite: 5
        rxBytesOnSite: 6
    nsxsite:
      type: object
      properties:
        secureTraffic:
          type: boolean
          description: Secure L2VPN traffic.
        siteId:
          type: string
          description: Identifier for L2 VPN site.
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: 'Name of L2 VPN site. Length: 1-255 characters.'
        password:
          type: string
          description: 'Password for L2 VPN user. Passwords must contain the following:
            12-63 characters, a mix of upper case letters, lower case letters, numbers,
            and at least one special character. Password must not contain the username
            as a substring. Do not repeat a character 3 or more times.'
        userId:
          maxLength: 63
          minLength: 0
          type: string
          description: 'L2 VPN user ID. Valid user names: 1-63 characters, letters
            and numbers only. No white space or special characters.'
        description:
          type: string
          description: Description of L2 VPN site.
      description: L2 VPN site.
      example:
        password: password
        secureTraffic: true
        name: name
        siteId: siteId
        description: description
        userId: userId
    EsxConfig:
      required:
      - num_hosts
      type: object
      properties:
        availability_zone:
          type: string
          description: Availability zone where the hosts should be provisioned. (Can
            be specified only for privileged host operations).
        esxs:
          type: array
          items:
            type: string
            description: An optional list of ESX IDs to remove.
        cluster_id:
          type: string
          description: An optional cluster id if the esxs operation has to be on a
            specific cluster.
        num_hosts:
          type: integer
          format: int32
    SddcConfig:
      required:
      - name
      - num_hosts
      - provider
      type: object
      properties:
        one_node_reduced_capacity:
          type: boolean
          description: Whether this sddc is reduced capacity 1NODE.
        vpc_cidr:
          type: string
          description: AWS VPC IP range. Only prefix of 16 or 20 is currently supported.
          default: 10.0.0.0/16
        host_instance_type:
          $ref: '#/components/schemas/HostInstanceTypes'
        skip_creating_vxlan:
          type: boolean
          description: skip creating vxlan for compute gateway for SDDC provisioning
        vxlan_subnet:
          type: string
          description: VXLAN IP subnet in CIDR for compute gateway
        size:
          type: string
          description: |
            The size of the vCenter and NSX appliances. "large" sddcSize corresponds to a 'large' vCenter appliance
            and 'large' NSX appliance. 'medium' sddcSize corresponds to 'medium' vCenter appliance and 'medium'
            NSX appliance. Value defaults to 'medium'.
        storage_capacity:
          type: integer
          description: |
            The storage capacity value to be requested for the sddc primary cluster, in GiBs.
            If provided, instead of using the direct-attached storage, a capacity value amount of seperable storage will
            be used.
          format: int64
        name:
          type: string
        account_link_sddc_config:
          type: array
          description: A list of the SDDC linking configurations to use.
          items:
            $ref: '#/components/schemas/AccountLinkSddcConfig'
        sddc_id:
          type: string
          description: If provided, will be assigned as SDDC id of the provisioned
            SDDC.
          format: UUID
        num_hosts:
          type: integer
          format: int32
        sddc_type:
          type: string
          description: Denotes the sddc type , if the value is null or empty, the
            type is considered as default.
        account_link_config:
          $ref: '#/components/schemas/AccountLinkConfig'
        provider:
          type: string
          description: Determines what additional properties are available based on
            cloud provider.
          enum:
          - AWS
          - ZEROCLOUD
        sso_domain:
          type: string
          description: The SSO domain name to use for vSphere users. If not specified,
            vmc.local will be used.
          default: vmc.local
        sddc_template_id:
          type: string
          description: If provided, configuration from the template will applied to
            the provisioned SDDC.
          format: UUID
        deployment_type:
          type: string
          description: Denotes if request is for a SingleAZ or a MultiAZ SDDC. Default
            is SingleAZ.
          enum:
          - SingleAZ
          - MultiAZ
      discriminator:
        propertyName: provider
    ConnectivityValidationGroups:
      type: object
      properties:
        groups:
          type: array
          description: List of groups.
          items:
            $ref: '#/components/schemas/ConnectivityValidationGroup'
      example:
        groups:
        - sub_groups:
          - help: help
            tests:
            - path: path
              source: VCENTER
              type: PING
              ports:
              - ports
              - ports
            - path: path
              source: VCENTER
              type: PING
              ports:
              - ports
              - ports
            inputs:
            - id: HOSTNAME
              label: label
              value: value
            - id: HOSTNAME
              label: label
              value: value
            label: label
            id: PRIMARY_DNS
          - help: help
            tests:
            - path: path
              source: VCENTER
              type: PING
              ports:
              - ports
              - ports
            - path: path
              source: VCENTER
              type: PING
              ports:
              - ports
              - ports
            inputs:
            - id: HOSTNAME
              label: label
              value: value
            - id: HOSTNAME
              label: label
              value: value
            label: label
            id: PRIMARY_DNS
          name: name
          id: HLM
        - sub_groups:
          - help: help
            tests:
            - path: path
              source: VCENTER
              type: PING
              ports:
              - ports
              - ports
            - path: path
              source: VCENTER
              type: PING
              ports:
              - ports
              - ports
            inputs:
            - id: HOSTNAME
              label: label
              value: value
            - id: HOSTNAME
              label: label
              value: value
            label: label
            id: PRIMARY_DNS
          - help: help
            tests:
            - path: path
              source: VCENTER
              type: PING
              ports:
              - ports
              - ports
            - path: path
              source: VCENTER
              type: PING
              ports:
              - ports
              - ports
            inputs:
            - id: HOSTNAME
              label: label
              value: value
            - id: HOSTNAME
              label: label
              value: value
            label: label
            id: PRIMARY_DNS
          name: name
          id: HLM
    SddcPublicIp:
      required:
      - public_ip
      type: object
      properties:
        public_ip:
          type: string
        name:
          type: string
        allocation_id:
          type: string
        dnat_rule_id:
          type: string
        associated_private_ip:
          type: string
        snat_rule_id:
          type: string
      example:
        associated_private_ip: associated_private_ip
        dnat_rule_id: dnat_rule_id
        public_ip: public_ip
        name: name
        allocation_id: allocation_id
        snat_rule_id: snat_rule_id
    MaintenanceWindowGet:
      allOf:
      - $ref: '#/components/schemas/MaintenanceWindow'
      - type: object
        properties:
          duration_min:
            type: integer
            format: int64
          version:
            type: integer
            format: int64
    Cluster:
      required:
      - cluster_id
      type: object
      properties:
        esx_host_list:
          type: array
          items:
            $ref: '#/components/schemas/AwsEsxHost'
        cluster_state:
          type: string
          enum:
          - DEPLOYING
          - ADDING_HOSTS
          - READY
          - FAILED
        aws_kms_info:
          $ref: '#/components/schemas/AwsKmsInfo'
        esx_host_info:
          $ref: '#/components/schemas/EsxHostInfo'
        host_cpu_cores_count:
          type: integer
          description: Number of cores enabled on ESX hosts added to this cluster
          format: int32
        cluster_capacity:
          $ref: '#/components/schemas/EntityCapacity'
        cluster_id:
          type: string
        cluster_name:
          type: string
    NsxtAddons:
      type: object
      properties:
        enable_nsx_advanced_addon:
          type: boolean
          description: Indicates whether NSX Advanced addon is enabled or disabled.
      description: Details the state of different NSX add-ons.
    sddcNetworkAddressGroups:
      type: object
      properties:
        addressGroups:
          type: array
          description: List of logical network address groups.
          items:
            $ref: '#/components/schemas/sddcNetworkAddressGroup'
      description: Logical network address groups.
      example:
        addressGroups:
        - prefixLength: prefixLength
          primaryAddress: primaryAddress
        - prefixLength: prefixLength
          primaryAddress: primaryAddress
    VpnTunnelStatus:
      type: object
      properties:
        on_prem_subnet:
          type: string
          readOnly: true
        traffic_stats:
          $ref: '#/components/schemas/VpnTunnelTrafficStats'
        last_info_message:
          type: string
          readOnly: true
        local_subnet:
          type: string
          readOnly: true
        tunnel_state:
          type: string
          readOnly: true
        failure_message:
          type: string
          readOnly: true
        tunnel_status:
          type: string
          readOnly: true
          enum:
          - CONNECTED
          - DISCONNECTED
          - UNKNOWN
    cbmStatistics:
      type: object
      properties:
        dataDto:
          $ref: '#/components/schemas/cbmStatsData'
        metaDto:
          $ref: '#/components/schemas/metaDashboardStats'
      description: NSX Edge Interface Statistics.
      example:
        dataDto:
          vnic_8:
          - null
          - null
          vnic_7:
          - null
          - null
          vnic_6:
          - null
          - null
          vnic_5:
          - null
          - null
          vnic_9:
          - vnic: 0
            in: 5.962133916683182
            timestamp: 6
            out: 1.4658129805029452
          - vnic: 0
            in: 5.962133916683182
            timestamp: 6
            out: 1.4658129805029452
          vnic_0:
          - null
          - null
          vnic_4:
          - null
          - null
          vnic_3:
          - null
          - null
          vnic_2:
          - null
          - null
          vnic_1:
          - null
          - null
        metaDto:
          vnics:
          - isConnected: true
            index: 1
            inShapingPolicy:
              averageBandwidth: 9
              inherited: true
              burstSize: 7
              peakBandwidth: 3
              enabled: true
            enableSendRedirects: true
            label: label
            fenceParameters:
            - value: value
              key: key
            - value: value
              key: key
            type: type
            mtu: 3770
            enableProxyArp: true
            enableBridgeMode: true
            macAddresses:
            - edgeVmHaIndex: 0
              value: value
            - edgeVmHaIndex: 0
              value: value
            name: name
            subInterfaces:
              subInterfaces:
              - logicalSwitchId: logicalSwitchId
                addressGroups:
                  addressGroups:
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                logicalSwitchName: logicalSwitchName
                vlanId: 5
                tunnelId: 2441
                name: name
                isConnected: true
                index: 601
                label: label
                enableSendRedirects: true
                mtu: 2
              - logicalSwitchId: logicalSwitchId
                addressGroups:
                  addressGroups:
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                logicalSwitchName: logicalSwitchName
                vlanId: 5
                tunnelId: 2441
                name: name
                isConnected: true
                index: 601
                label: label
                enableSendRedirects: true
                mtu: 2
            portgroupName: portgroupName
            portgroupId: portgroupId
          - isConnected: true
            index: 1
            inShapingPolicy:
              averageBandwidth: 9
              inherited: true
              burstSize: 7
              peakBandwidth: 3
              enabled: true
            enableSendRedirects: true
            label: label
            fenceParameters:
            - value: value
              key: key
            - value: value
              key: key
            type: type
            mtu: 3770
            enableProxyArp: true
            enableBridgeMode: true
            macAddresses:
            - edgeVmHaIndex: 0
              value: value
            - edgeVmHaIndex: 0
              value: value
            name: name
            subInterfaces:
              subInterfaces:
              - logicalSwitchId: logicalSwitchId
                addressGroups:
                  addressGroups:
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                logicalSwitchName: logicalSwitchName
                vlanId: 5
                tunnelId: 2441
                name: name
                isConnected: true
                index: 601
                label: label
                enableSendRedirects: true
                mtu: 2
              - logicalSwitchId: logicalSwitchId
                addressGroups:
                  addressGroups:
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                  - subnetPrefixLength: subnetPrefixLength
                    secondaryAddresses:
                      ipAddress:
                      - ipAddress
                      - ipAddress
                      type: type
                    primaryAddress: primaryAddress
                    subnetMask: subnetMask
                logicalSwitchName: logicalSwitchName
                vlanId: 5
                tunnelId: 2441
                name: name
                isConnected: true
                index: 601
                label: label
                enableSendRedirects: true
                mtu: 2
            portgroupName: portgroupName
            portgroupId: portgroupId
          startTime: 1
          interval: 1
          endTime: 1
    ConnectivityValidationGroup:
      type: object
      properties:
        id:
          type: string
          description: test group id, currently, only HLM.
          enum:
          - HLM
          - DRAAS
        name:
          type: string
          description: Name of the test group.
        sub_groups:
          type: array
          description: List of sub groups.
          items:
            $ref: '#/components/schemas/ConnectivityValidationSubGroup'
      example:
        sub_groups:
        - help: help
          tests:
          - path: path
            source: VCENTER
            type: PING
            ports:
            - ports
            - ports
          - path: path
            source: VCENTER
            type: PING
            ports:
            - ports
            - ports
          inputs:
          - id: HOSTNAME
            label: label
            value: value
          - id: HOSTNAME
            label: label
            value: value
          label: label
          id: PRIMARY_DNS
        - help: help
          tests:
          - path: path
            source: VCENTER
            type: PING
            ports:
            - ports
            - ports
          - path: path
            source: VCENTER
            type: PING
            ports:
            - ports
            - ports
          inputs:
          - id: HOSTNAME
            label: label
            value: value
          - id: HOSTNAME
            label: label
            value: value
          label: label
          id: PRIMARY_DNS
        name: name
        id: HLM
    SddcId:
      type: object
      properties:
        sddc_id:
          type: string
          description: Sddc ID
    IpsecSiteIKEStatus:
      type: object
      properties:
        channelStatus:
          type: string
        channelState:
          type: string
        peerIpAddress:
          type: string
        localIpAddress:
          type: string
        peerSubnets:
          type: array
          items:
            type: string
        peerId:
          type: string
        lastInformationalMessage:
          type: string
        localSubnets:
          type: array
          items:
            type: string
      example:
        peerId: peerId
        lastInformationalMessage: lastInformationalMessage
        peerIpAddress: peerIpAddress
        peerSubnets:
        - peerSubnets
        - peerSubnets
        localSubnets:
        - localSubnets
        - localSubnets
        channelStatus: channelStatus
        localIpAddress: localIpAddress
        channelState: channelState
    SupportWindow:
      type: object
      properties:
        start_day:
          type: string
          enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
        seats:
          type: integer
          format: int64
        sddcs:
          type: array
          description: SDDCs in this window
          items:
            type: string
            format: UUID
        duration_hours:
          type: integer
          format: int64
        start_hour:
          type: integer
          format: int32
        support_window_id:
          type: string
        metadata:
          type: object
          properties: {}
          example: {}
      example:
        sddcs:
        - sddcs
        - sddcs
        metadata: {}
        support_window_id: support_window_id
        start_day: MONDAY
        start_hour: 1
        seats: 0
        duration_hours: 6
    application:
      type: object
      properties:
        applicationId:
          type: array
          description: List of string. Id of service or serviceGroup groupingObject.
            Can define multiple.
          items:
            type: string
        service:
          type: array
          description: List of protocol and ports. Can define multiple.
          items:
            $ref: '#/components/schemas/nsxfirewallservice'
      description: Application for firewall rule
      example:
        service:
        - icmpType: icmpType
          sourcePort:
          - sourcePort
          - sourcePort
          protocol: protocol
          port:
          - port
          - port
        - icmpType: icmpType
          sourcePort:
          - sourcePort
          - sourcePort
          protocol: protocol
          port:
          - port
          - port
        applicationId:
        - applicationId
        - applicationId
    firewallDashboardStats:
      type: object
      properties:
        connections:
          type: array
          description: Number of NSX Edge firewall connections and rules.
          items:
            $ref: '#/components/schemas/DashboardStat'
      description: Dashboard Statistics data for Firewall.
      example:
        connections:
        - value: 6.027456183070403
          timestamp: 0
        - value: 6.027456183070403
          timestamp: 0
    nat:
      type: object
      properties:
        rules:
          $ref: '#/components/schemas/natRules'
        featureType:
          type: string
        version:
          type: integer
          description: Version number tracking each configuration change. To avoid
            problems with overwriting changes, always retrieve and modify the latest
            configuration to include the current version number in your request. If
            you provide a version number which is not current, the request is rejected.
            If you omit the version number, the request is accepted but may overwrite
            any current changes if your change is not in sync with the latest change.
          format: int64
        enabled:
          type: boolean
          description: Value is true if feature is enabled. Default value is true.
            Optional.
        template:
          maxLength: 255
          minLength: 0
          type: string
      description: NAT configuration
      example:
        template: template
        featureType: featureType
        rules:
          natRulesDtos:
          - translatedAddress: translatedAddress
            icmpType: icmpType
            dnatMatchSourcePort: dnatMatchSourcePort
            loggingEnabled: true
            vnic: vnic
            description: description
            enabled: true
            dnatMatchSourceAddress: dnatMatchSourceAddress
            ruleTag: 6
            protocol: protocol
            snatMatchDestinationPort: snatMatchDestinationPort
            originalAddress: originalAddress
            snatMatchDestinationAddress: snatMatchDestinationAddress
            ruleType: ruleType
            translatedPort: translatedPort
            action: action
            ruleId: 0
            originalPort: originalPort
          - translatedAddress: translatedAddress
            icmpType: icmpType
            dnatMatchSourcePort: dnatMatchSourcePort
            loggingEnabled: true
            vnic: vnic
            description: description
            enabled: true
            dnatMatchSourceAddress: dnatMatchSourceAddress
            ruleTag: 6
            protocol: protocol
            snatMatchDestinationPort: snatMatchDestinationPort
            originalAddress: originalAddress
            snatMatchDestinationAddress: snatMatchDestinationAddress
            ruleType: ruleType
            translatedPort: translatedPort
            action: action
            ruleId: 0
            originalPort: originalPort
        version: 1
        enabled: true
    LogicalRouterScope:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
      example:
        id: id
        type: type
    DataPageEdgeSummary:
      type: object
      properties:
        pagingInfo:
          $ref: '#/components/schemas/PagingInfo'
        data:
          type: array
          items:
            $ref: '#/components/schemas/edgeSummary'
      example:
        pagingInfo:
          startIndex: 6
          pageSize: 1
          sortBy: sortBy
          totalCount: 0
          sortOrderAscending: true
        data:
        - numberOfConnectedVnics: 4
          datacenterName: datacenterName
          featureCapabilities:
            featureCapabilities:
            - service: service
              configurationLimits:
              - value: value
                key: key
              - value: value
                key: key
              permission:
                accessPermission:
                  viewPermission: true
                  managePermission: true
                isLicensed: true
                dataPermission:
                  savePermission: true
                  publishPermission: true
              isSupported: true
            - service: service
              configurationLimits:
              - value: value
                key: key
              - value: value
                key: key
              permission:
                accessPermission:
                  viewPermission: true
                  managePermission: true
                isLicensed: true
                dataPermission:
                  savePermission: true
                  publishPermission: true
              isSupported: true
            timestamp: 5
          allowedActions:
          - allowedActions
          - allowedActions
          objectTypeName: objectTypeName
          description: description
          type:
            name: name
          edgeAssistId: 5
          extendedAttributes:
          - name: name
            value: value
          - name: name
            value: value
          hypervisorAssist: true
          universalRevision: 7
          apiVersion: apiVersion
          isUniversal: true
          edgeType: edgeType
          scope:
            objectTypeName: objectTypeName
            name: name
            id: id
          edgeStatus: edgeStatus
          clientHandle: clientHandle
          id: id
          state: state
          objectId: objectId
          edgeAssistInstanceName: edgeAssistInstanceName
          vsmUuid: vsmUuid
          isUpgradeAvailable: true
          revision: 2
          lrouterUuid: lrouterUuid
          datacenterMoid: datacenterMoid
          logicalRouterScopes:
            logicalRouterScope:
            - id: id
              type: type
            - id: id
              type: type
          recentJobInfo:
            result:
            - value: value
              key: key
            - value: value
              key: key
            jobId: jobId
            edgeId: edgeId
            module: module
            errorCode: errorCode
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          name: name
          tenantId: tenantId
          localEgressEnabled: true
          appliancesSummary:
            dataStoreMoidOfActiveVse: dataStoreMoidOfActiveVse
            resourcePoolMoidOfActiveVse: resourcePoolMoidOfActiveVse
            hostMoidOfActiveVse: hostMoidOfActiveVse
            hostNameOfActiveVse: hostNameOfActiveVse
            fqdn: fqdn
            deployAppliances: true
            resourcePoolNameOfActiveVse: resourcePoolNameOfActiveVse
            vmNameOfActiveVse: vmNameOfActiveVse
            activeVseHaIndex: 2
            communicationChannel: communicationChannel
            applianceSize: applianceSize
            dataStoreNameOfActiveVse: dataStoreNameOfActiveVse
            statusFromVseUpdatedOn: 3
            vmVersion: vmVersion
            enableFips: true
            numberOfDeployedVms: 9
            vmMoidOfActiveVse: vmMoidOfActiveVse
            vmBuildInfo: vmBuildInfo
          nodeId: nodeId
        - numberOfConnectedVnics: 4
          datacenterName: datacenterName
          featureCapabilities:
            featureCapabilities:
            - service: service
              configurationLimits:
              - value: value
                key: key
              - value: value
                key: key
              permission:
                accessPermission:
                  viewPermission: true
                  managePermission: true
                isLicensed: true
                dataPermission:
                  savePermission: true
                  publishPermission: true
              isSupported: true
            - service: service
              configurationLimits:
              - value: value
                key: key
              - value: value
                key: key
              permission:
                accessPermission:
                  viewPermission: true
                  managePermission: true
                isLicensed: true
                dataPermission:
                  savePermission: true
                  publishPermission: true
              isSupported: true
            timestamp: 5
          allowedActions:
          - allowedActions
          - allowedActions
          objectTypeName: objectTypeName
          description: description
          type:
            name: name
          edgeAssistId: 5
          extendedAttributes:
          - name: name
            value: value
          - name: name
            value: value
          hypervisorAssist: true
          universalRevision: 7
          apiVersion: apiVersion
          isUniversal: true
          edgeType: edgeType
          scope:
            objectTypeName: objectTypeName
            name: name
            id: id
          edgeStatus: edgeStatus
          clientHandle: clientHandle
          id: id
          state: state
          objectId: objectId
          edgeAssistInstanceName: edgeAssistInstanceName
          vsmUuid: vsmUuid
          isUpgradeAvailable: true
          revision: 2
          lrouterUuid: lrouterUuid
          datacenterMoid: datacenterMoid
          logicalRouterScopes:
            logicalRouterScope:
            - id: id
              type: type
            - id: id
              type: type
          recentJobInfo:
            result:
            - value: value
              key: key
            - value: value
              key: key
            jobId: jobId
            edgeId: edgeId
            module: module
            errorCode: errorCode
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          name: name
          tenantId: tenantId
          localEgressEnabled: true
          appliancesSummary:
            dataStoreMoidOfActiveVse: dataStoreMoidOfActiveVse
            resourcePoolMoidOfActiveVse: resourcePoolMoidOfActiveVse
            hostMoidOfActiveVse: hostMoidOfActiveVse
            hostNameOfActiveVse: hostNameOfActiveVse
            fqdn: fqdn
            deployAppliances: true
            resourcePoolNameOfActiveVse: resourcePoolNameOfActiveVse
            vmNameOfActiveVse: vmNameOfActiveVse
            activeVseHaIndex: 2
            communicationChannel: communicationChannel
            applianceSize: applianceSize
            dataStoreNameOfActiveVse: dataStoreNameOfActiveVse
            statusFromVseUpdatedOn: 3
            vmVersion: vmVersion
            enableFips: true
            numberOfDeployedVms: 9
            vmMoidOfActiveVse: vmMoidOfActiveVse
            vmBuildInfo: vmBuildInfo
          nodeId: nodeId
    dnsForwarders:
      type: object
      properties:
        ipAddress:
          type: array
          description: IP addresses of the DNS servers.
          items:
            type: string
      description: DNS forwarders.
      example:
        ipAddress:
        - ipAddress
        - ipAddress
    MacAddress:
      type: object
      properties:
        edgeVmHaIndex:
          maximum: 1
          minimum: 0
          type: integer
          format: int32
        value:
          pattern: ^([0-9a-f]{2}([:]|$)){6}$
          type: string
      example:
        edgeVmHaIndex: 0
        value: value
    dashboardData:
      type: object
      properties:
        firewall:
          $ref: '#/components/schemas/firewallDashboardStats'
        sslvpn:
          $ref: '#/components/schemas/sslvpnDashboardStats'
        interfaces:
          $ref: '#/components/schemas/interfacesDashboardStats'
        loadBalancer:
          $ref: '#/components/schemas/loadBalancerDashboardStats'
        ipsec:
          $ref: '#/components/schemas/ipsecDashboardStats'
      description: Dashboard Statistics data.
      example:
        interfaces:
          vnic_9_in_byte:
          - null
          - null
          vnic_8_in_byte:
          - null
          - null
          vnic_0_out_byte:
          - null
          - null
          vnic_7_in_byte:
          - null
          - null
          vnic_3_out_byte:
          - null
          - null
          vnic_6_in_byte:
          - null
          - null
          vnic_7_out_byte:
          - null
          - null
          vnic_4_out_byte:
          - null
          - null
          vnic_6_out_byte:
          - null
          - null
          vnic_7_out_pkt:
          - null
          - null
          vnic_9_out_pkt:
          - null
          - null
          vnic_0_in_pkt:
          - null
          - null
          vnic_9_out_byte:
          - null
          - null
          vnic_8_out_pkt:
          - null
          - null
          vnic_2_in_pkt:
          - null
          - null
          vnic_9_in_pkt:
          - null
          - null
          vnic_1_out_byte:
          - null
          - null
          vnic_1_in_pkt:
          - null
          - null
          vnic_7_in_pkt:
          - null
          - null
          vnic_3_in_pkt:
          - null
          - null
          vnic_8_in_pkt:
          - null
          - null
          vnic_5_in_pkt:
          - null
          - null
          vnic_4_in_pkt:
          - null
          - null
          vnic_6_in_pkt:
          - null
          - null
          vnic_2_out_pkt:
          - null
          - null
          vnic_0_in_byte:
          - null
          - null
          vnic_2_out_byte:
          - null
          - null
          vnic_1_out_pkt:
          - null
          - null
          vnic_8_out_byte:
          - null
          - null
          vnic_4_out_pkt:
          - null
          - null
          vnic_0_out_pkt:
          - null
          - null
          vnic_5_out_pkt:
          - null
          - null
          vnic_1_in_byte:
          - null
          - null
          vnic_6_out_pkt:
          - null
          - null
          vnic_4_in_byte:
          - null
          - null
          vnic_5_in_byte:
          - null
          - null
          vnic_2_in_byte:
          - null
          - null
          vnic_3_in_byte:
          - null
          - null
          vnic_3_out_pkt:
          - null
          - null
          vnic_5_out_byte:
          - null
          - null
        firewall:
          connections:
          - value: 6.027456183070403
            timestamp: 0
          - value: 6.027456183070403
            timestamp: 0
        loadBalancer:
          lbBpsIn:
          - null
          - null
          lbHttpReqs:
          - null
          - null
          lbSessions:
          - null
          - null
          lbBpsOut:
          - null
          - null
        ipsec:
          ipsecTunnels:
          - null
          - null
          ipsecBytesIn:
          - null
          - null
          ipsecBytesOut:
          - null
          - null
        sslvpn:
          sslvpnBytesIn:
          - null
          - null
          sslvpnBytesOut:
          - null
          - null
          activeClients:
          - null
          - null
          sessionsCreated:
          - null
          - null
          authFailures:
          - null
          - null
    licenceAclPermissions:
      type: object
      properties:
        dataPermission:
          $ref: '#/components/schemas/DataPermissions'
        isLicensed:
          type: boolean
          description: Value is true if feature is licenced.
        accessPermission:
          $ref: '#/components/schemas/InteractionPermissions'
      description: Licence and access control information for the feature.
      example:
        accessPermission:
          viewPermission: true
          managePermission: true
        isLicensed: true
        dataPermission:
          savePermission: true
          publishPermission: true
    ReservationSchedule:
      allOf:
      - $ref: '#/components/schemas/MaintenanceWindowGet'
      - type: object
        properties:
          reservations:
            type: array
            items:
              $ref: '#/components/schemas/Reservation'
          reservations_mw:
            type: array
            items:
              $ref: '#/components/schemas/ReservationInMw'
    AccountLinkSddcConfig:
      type: object
      properties:
        customer_subnet_ids:
          type: array
          items:
            type: string
            description: The ID of the subnet to use.
        connected_account_id:
          type: string
          description: The ID of the customer connected account to work with.
    keyValueAttributes:
      type: object
      properties:
        value:
          maxLength: 255
          minLength: 0
          type: string
          description: Value corresponding to the key of the configuration limit parameter.
        key:
          maxLength: 255
          minLength: 0
          type: string
          description: Key name of the configuration limit parameter.
      description: Key value pair describing the feature configuration limit.
      example:
        value: value
        key: key
    nsxnatrule:
      type: object
      properties:
        vnic:
          type: string
          description: Interface on which the NAT rule is applied.
        ruleType:
          type: string
          description: Identifies the type of the rule. internal_high or user.
        protocol:
          type: string
          description: Protocol. Default is 'any'
        description:
          maxLength: 1024
          minLength: 0
          type: string
          description: Description for the rule.
        ruleId:
          type: integer
          description: Identifier for the rule.
          format: int64
        snatMatchDestinationPort:
          maxLength: 255
          minLength: 0
          type: string
          description: Apply SNAT rule only if traffic has this destination port.
            Default is 'any'.
        originalAddress:
          maxLength: 255
          minLength: 0
          type: string
          description: Original address or address range. This is the original source
            address for SNAT rules and the original destination address for DNAT rules.
        dnatMatchSourceAddress:
          maxLength: 255
          minLength: 0
          type: string
          description: Apply DNAT rule only if traffic has this source address. Default
            is 'any'.
        dnatMatchSourcePort:
          maxLength: 255
          minLength: 0
          type: string
          description: Apply DNAT rule only if traffic has this source port. Default
            is 'any'.
        snatMatchDestinationAddress:
          maxLength: 255
          minLength: 0
          type: string
          description: Apply SNAT rule only if traffic has this destination address.
            Default is 'any'.
        originalPort:
          maxLength: 255
          minLength: 0
          type: string
          description: Original port. This is the original source port for SNAT rules,
            and the original destination port for DNAT rules.
        loggingEnabled:
          type: boolean
          description: Enable logging for the rule.
        translatedAddress:
          maxLength: 255
          minLength: 0
          type: string
          description: Translated address or address range.
        enabled:
          type: boolean
          description: Enable rule.
        icmpType:
          type: string
          description: ICMP type. Only supported when protocol is icmp. Default is
            'any'.
        translatedPort:
          maxLength: 255
          minLength: 0
          type: string
          description: Translated port. Supported in DNAT rules only.
        action:
          type: string
          description: Action for the rule. SNAT or DNAT.
        ruleTag:
          type: integer
          description: Rule tag. Used to specify user-defined ruleId. If not specified
            NSX Manager will generate ruleId.
          format: int64
      description: NAT rule
      example:
        translatedAddress: translatedAddress
        icmpType: icmpType
        dnatMatchSourcePort: dnatMatchSourcePort
        loggingEnabled: true
        vnic: vnic
        description: description
        enabled: true
        dnatMatchSourceAddress: dnatMatchSourceAddress
        ruleTag: 6
        protocol: protocol
        snatMatchDestinationPort: snatMatchDestinationPort
        originalAddress: originalAddress
        snatMatchDestinationAddress: snatMatchDestinationAddress
        ruleType: ruleType
        translatedPort: translatedPort
        action: action
        ruleId: 0
        originalPort: originalPort
    subInterface:
      required:
      - tunnelId
      type: object
      properties:
        index:
          maximum: 4103
          type: integer
          description: Index of the sub interface assigned by NSX Manager. Min value
            is 10 and max value is 4103.
          format: int32
        tunnelId:
          maximum: 4094
          minimum: 1
          type: integer
          description: Valid values for tunnel ID are min 1 to max 4093. Required.
          format: int32
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: Name of the sub interface. Required.
        addressGroups:
          $ref: '#/components/schemas/edgeVnicAddressGroups'
        vlanId:
          type: integer
          description: VLAN ID of the virtual LAN used by this sub interface. VLAN
            IDs can range from 0 to 4094.
          format: int32
        label:
          maxLength: 255
          minLength: 0
          type: string
          description: Sub interface label of format vNic_{index} provided by NSX
            Manager. Read only.
        logicalSwitchName:
          type: string
          description: Name of the logical switch connected to this sub interface.
        isConnected:
          type: boolean
          description: Value is true if the sub interface is connected to a logical
            switch, standard portgroup or distributed portgroup.
        mtu:
          type: integer
          description: MTU value of the sub interface. This value would be the least
            mtu for all the trunk interfaces of the NSX Edge. Default is 1500.
          format: int32
        logicalSwitchId:
          maxLength: 255
          minLength: 0
          type: string
          description: ID of the logical switch connected to this sub interface.
        enableSendRedirects:
          type: boolean
          description: Value is true if send redirects is enabled. Enable ICMP redirect
            to convey routing information to hosts.
      description: NSX Edge sub interface configuration details. Sub interfaces are
        created on a trunk interface.
      example:
        logicalSwitchId: logicalSwitchId
        addressGroups:
          addressGroups:
          - subnetPrefixLength: subnetPrefixLength
            secondaryAddresses:
              ipAddress:
              - ipAddress
              - ipAddress
              type: type
            primaryAddress: primaryAddress
            subnetMask: subnetMask
          - subnetPrefixLength: subnetPrefixLength
            secondaryAddresses:
              ipAddress:
              - ipAddress
              - ipAddress
              type: type
            primaryAddress: primaryAddress
            subnetMask: subnetMask
        logicalSwitchName: logicalSwitchName
        vlanId: 5
        tunnelId: 2441
        name: name
        isConnected: true
        index: 601
        label: label
        enableSendRedirects: true
        mtu: 2
    sddcNetworkAddressGroup:
      type: object
      properties:
        prefixLength:
          type: string
          description: Prefix length of logical network.
        primaryAddress:
          type: string
          description: Primary address for logical network.
      description: Logical Network address group.
      example:
        prefixLength: prefixLength
        primaryAddress: primaryAddress
    GlcmBundle:
      type: object
      properties:
        s3Bucket:
          type: string
          description: the glcmbundle's s3 bucket
        id:
          type: string
          description: the glcmbundle's id
      description: the GlcmBundle used for deploying the sddc
    Site:
      type: object
      properties:
        password:
          type: string
          description: Site password.
        user_id:
          type: string
          description: Site user id.
        name:
          type: string
          description: Unique name for the site getting configured.
        rx_bytes_on_local_subnet:
          type: integer
          description: Bytes received on local network.
          format: int64
          readOnly: true
        secure_traffic:
          type: boolean
          description: Enable/disable encription.
        established_date:
          type: string
          description: Date tunnel was established.
          readOnly: true
        failure_message:
          type: string
          description: failure message.
          readOnly: true
        dropped_tx_packets:
          type: string
          description: Number of transmitted packets dropped.
          readOnly: true
        dropped_rx_packets:
          type: string
          description: Number of received packets dropped.
          readOnly: true
        tunnel_status:
          type: string
          description: Site tunnel status.
          readOnly: true
          enum:
          - CONNECTED
          - DISCONNECTED
          - UNKNOWN
        tx_bytes_from_local_subnet:
          type: integer
          description: Bytes transmitted from local subnet.
          format: int64
          readOnly: true
    ConnectivityAgentValidation:
      type: object
      properties:
        source:
          type: string
          description: source appliance of connectivity test, i.e. VCENTER, SRM, VR.
          enum:
          - VCENTER
          - SRM
          - VR
        type:
          type: string
          description: type of connectivity test, i.e. PING, TRACEROUTE, DNS, CONNECTIVITY,
            CURL. For CONNECTIVITY and CURL tests only, please specify the ports to
            be tested against.
          enum:
          - PING
          - TRACEROUTE
          - DNS
          - CONNECTIVITY
          - CURL
        ports:
          type: array
          description: TCP ports ONLY for CONNECTIVITY and CURL tests.
          items:
            type: string
        path:
          type: string
          description: URL path ONLY for CURL tests.
      example:
        path: path
        source: VCENTER
        type: PING
        ports:
        - ports
        - ports
    AwsCloudProvider:
      allOf:
      - $ref: '#/components/schemas/CloudProvider'
      - type: object
        properties:
          regions:
            type: array
            items:
              type: string
              description: Regions supported by the cloud provider for sddc deployment
      x-vmw-vapi-discriminated-by: AWS
    pagedEdgeList:
      type: object
      properties:
        edgePage:
          $ref: '#/components/schemas/DataPageEdgeSummary'
      description: NSX Edges listed by pages.
      example:
        edgePage:
          pagingInfo:
            startIndex: 6
            pageSize: 1
            sortBy: sortBy
            totalCount: 0
            sortOrderAscending: true
          data:
          - numberOfConnectedVnics: 4
            datacenterName: datacenterName
            featureCapabilities:
              featureCapabilities:
              - service: service
                configurationLimits:
                - value: value
                  key: key
                - value: value
                  key: key
                permission:
                  accessPermission:
                    viewPermission: true
                    managePermission: true
                  isLicensed: true
                  dataPermission:
                    savePermission: true
                    publishPermission: true
                isSupported: true
              - service: service
                configurationLimits:
                - value: value
                  key: key
                - value: value
                  key: key
                permission:
                  accessPermission:
                    viewPermission: true
                    managePermission: true
                  isLicensed: true
                  dataPermission:
                    savePermission: true
                    publishPermission: true
                isSupported: true
              timestamp: 5
            allowedActions:
            - allowedActions
            - allowedActions
            objectTypeName: objectTypeName
            description: description
            type:
              name: name
            edgeAssistId: 5
            extendedAttributes:
            - name: name
              value: value
            - name: name
              value: value
            hypervisorAssist: true
            universalRevision: 7
            apiVersion: apiVersion
            isUniversal: true
            edgeType: edgeType
            scope:
              objectTypeName: objectTypeName
              name: name
              id: id
            edgeStatus: edgeStatus
            clientHandle: clientHandle
            id: id
            state: state
            objectId: objectId
            edgeAssistInstanceName: edgeAssistInstanceName
            vsmUuid: vsmUuid
            isUpgradeAvailable: true
            revision: 2
            lrouterUuid: lrouterUuid
            datacenterMoid: datacenterMoid
            logicalRouterScopes:
              logicalRouterScope:
              - id: id
                type: type
              - id: id
                type: type
            recentJobInfo:
              result:
              - value: value
                key: key
              - value: value
                key: key
              jobId: jobId
              edgeId: edgeId
              module: module
              errorCode: errorCode
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
              message: message
              status: status
            name: name
            tenantId: tenantId
            localEgressEnabled: true
            appliancesSummary:
              dataStoreMoidOfActiveVse: dataStoreMoidOfActiveVse
              resourcePoolMoidOfActiveVse: resourcePoolMoidOfActiveVse
              hostMoidOfActiveVse: hostMoidOfActiveVse
              hostNameOfActiveVse: hostNameOfActiveVse
              fqdn: fqdn
              deployAppliances: true
              resourcePoolNameOfActiveVse: resourcePoolNameOfActiveVse
              vmNameOfActiveVse: vmNameOfActiveVse
              activeVseHaIndex: 2
              communicationChannel: communicationChannel
              applianceSize: applianceSize
              dataStoreNameOfActiveVse: dataStoreNameOfActiveVse
              statusFromVseUpdatedOn: 3
              vmVersion: vmVersion
              enableFips: true
              numberOfDeployedVms: 9
              vmMoidOfActiveVse: vmMoidOfActiveVse
              vmBuildInfo: vmBuildInfo
            nodeId: nodeId
          - numberOfConnectedVnics: 4
            datacenterName: datacenterName
            featureCapabilities:
              featureCapabilities:
              - service: service
                configurationLimits:
                - value: value
                  key: key
                - value: value
                  key: key
                permission:
                  accessPermission:
                    viewPermission: true
                    managePermission: true
                  isLicensed: true
                  dataPermission:
                    savePermission: true
                    publishPermission: true
                isSupported: true
              - service: service
                configurationLimits:
                - value: value
                  key: key
                - value: value
                  key: key
                permission:
                  accessPermission:
                    viewPermission: true
                    managePermission: true
                  isLicensed: true
                  dataPermission:
                    savePermission: true
                    publishPermission: true
                isSupported: true
              timestamp: 5
            allowedActions:
            - allowedActions
            - allowedActions
            objectTypeName: objectTypeName
            description: description
            type:
              name: name
            edgeAssistId: 5
            extendedAttributes:
            - name: name
              value: value
            - name: name
              value: value
            hypervisorAssist: true
            universalRevision: 7
            apiVersion: apiVersion
            isUniversal: true
            edgeType: edgeType
            scope:
              objectTypeName: objectTypeName
              name: name
              id: id
            edgeStatus: edgeStatus
            clientHandle: clientHandle
            id: id
            state: state
            objectId: objectId
            edgeAssistInstanceName: edgeAssistInstanceName
            vsmUuid: vsmUuid
            isUpgradeAvailable: true
            revision: 2
            lrouterUuid: lrouterUuid
            datacenterMoid: datacenterMoid
            logicalRouterScopes:
              logicalRouterScope:
              - id: id
                type: type
              - id: id
                type: type
            recentJobInfo:
              result:
              - value: value
                key: key
              - value: value
                key: key
              jobId: jobId
              edgeId: edgeId
              module: module
              errorCode: errorCode
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
              message: message
              status: status
            name: name
            tenantId: tenantId
            localEgressEnabled: true
            appliancesSummary:
              dataStoreMoidOfActiveVse: dataStoreMoidOfActiveVse
              resourcePoolMoidOfActiveVse: resourcePoolMoidOfActiveVse
              hostMoidOfActiveVse: hostMoidOfActiveVse
              hostNameOfActiveVse: hostNameOfActiveVse
              fqdn: fqdn
              deployAppliances: true
              resourcePoolNameOfActiveVse: resourcePoolNameOfActiveVse
              vmNameOfActiveVse: vmNameOfActiveVse
              activeVseHaIndex: 2
              communicationChannel: communicationChannel
              applianceSize: applianceSize
              dataStoreNameOfActiveVse: dataStoreNameOfActiveVse
              statusFromVseUpdatedOn: 3
              vmVersion: vmVersion
              enableFips: true
              numberOfDeployedVms: 9
              vmMoidOfActiveVse: vmMoidOfActiveVse
              vmBuildInfo: vmBuildInfo
            nodeId: nodeId
    PopAmiInfo:
      allOf:
      - $ref: '#/components/schemas/AmiInfo'
      - type: object
        properties:
          type:
            type: string
            description: 'PoP AMI type. CENTOS: a Centos AMI; POP: a PoP AMI.'
            default: POP
            enum:
            - CENTOS
            - POP
    AwsKmsInfo:
      required:
      - amazon_resource_name
      type: object
      properties:
        amazon_resource_name:
          type: string
          description: The ARN associated with the customer master key for this cluster.
    ReservationWindow_maintenance_properties:
      type: object
      properties:
        status:
          type: string
          description: Status of upgrade, if any
      example:
        status: status
  parameters:
    templateIdParam:
      name: templateId
      in: path
      description: SDDC Template identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    sddcOptionalRequestParam:
      name: sddc
      in: query
      description: sddc
      required: false
      style: form
      explode: true
      schema:
        type: string
    regionParam:
      name: region
      in: query
      description: The region of the cloud resources to work in
      required: false
      style: form
      explode: true
      schema:
        type: string
    managementVmIdParam:
      name: managementVmId
      in: path
      description: the management VM ID
      required: true
      style: simple
      explode: false
      schema:
        type: string
    includeDeletedParam:
      name: includeDeleted
      in: query
      description: When true, forces the result to also include deleted SDDCs.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    numOfHostsParam:
      name: numOfHosts
      in: query
      description: The number of hosts
      required: false
      style: form
      explode: true
      schema:
        type: integer
    defaultPaymentMethodParam:
      name: defaultFlag
      in: query
      description: When true, will only return default payment methods.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
        default: false
    createdByFilterParam:
      name: createdBy
      in: query
      description: user name which was used to create the support window (used as
        a filter)
      required: false
      style: form
      explode: true
      schema:
        type: string
    ruleIdParam:
      name: ruleId
      in: path
      description: Rule Identifier.
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
    edgeParam:
      name: edgeId
      in: path
      description: Edge Identifier.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    sddcTypeParam:
      name: sddcType
      in: query
      description: The sddc type to be used. (1NODE, SingleAZ, MultiAZ)
      required: false
      style: form
      explode: true
      schema:
        type: string
    sddcParam:
      name: sddc
      in: path
      description: Sddc Identifier.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    orgParam:
      name: org
      in: path
      description: Organization identifier.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    taskParam:
      name: task
      in: path
      description: Task identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    instanceTypeParam:
      name: instanceType
      in: query
      description: The server instance type to be used.
      required: false
      style: form
      explode: true
      schema:
        type: string
    validateOnlyParam:
      name: validateOnly
      in: query
      description: When true, only validates the given sddc configuration without
        provisioning.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    clusterParam:
      name: cluster
      in: path
      description: cluster identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    reservationParam:
      name: reservation
      in: path
      description: Reservation Identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    forceRefreshParam:
      name: forceRefresh
      in: query
      description: When true, forces the mappings for datacenters to be refreshed
        for the connected account.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    filterParam:
      name: $filter
      in: query
      description: |
        Filter expression

        Binary Operators: 'eq', 'ne', 'lt', 'gt', 'le', 'ge', 'mul', 'div', 'mod', 'sub', 'add'
        Unary Operators: 'not', '-' (minus)
        String Operators: 'startswith', 'endswith', 'length', 'contains', 'tolower', 'toupper',

        Nested attributes are composed using '.'

        Dates must be formatted as yyyy-MM-dd or yyyy-MM-ddTHH:mm:ss[.SSS]Z

        Strings should enclosed in single quotes, escape single quote with two single quotes

        The special literal 'created' will be mapped to the time the resource was first created.

        Examples:

          - $filter=(updated gt 2016-08-09T13:00:00Z) and (org_id eq 278710ff4e-6b6d-4d4e-aefb-ca637f38609e)
          - $filter=(created eq 2016-08-09)
          - $filter=(created gt 2016-08-09) and (sddc.status eq 'READY')
      required: false
      style: form
      explode: true
      schema:
        type: string
    linkedAccountIdPathParam:
      name: linkedAccountPathId
      in: path
      description: The linked connected account identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    forceEvenWhenSddcPresentParam:
      name: forceEvenWhenSddcPresent
      in: query
      description: When true, forcibly removes a connected account even when SDDC's
        are still linked to it.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    endTimeParam:
      name: endTime
      in: query
      description: Show statistics until this end time (in milliseconds since epoch).
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int64
    offerTypeQueryParam:
      name: offer_type
      in: query
      description: |
        Offer Type
         * `ON_DEMAND` - on-demand subscription
         * `TERM` - term subscription
         * All subscriptions if not specified
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - TERM
        - ON_DEMAND
    subscriptionParam:
      name: subscription
      in: path
      description: SubscriptionId for an sddc.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ipTypeParam:
      name: ipType
      in: path
      description: the ip type to associate with FQDN in DNS
      required: true
      style: simple
      explode: false
      schema:
        type: string
        enum:
        - public
        - private
    linkedAccountIdParam:
      name: linkedAccountId
      in: query
      description: The linked connected account identifier
      required: false
      style: form
      explode: true
      schema:
        type: string
    ipParam:
      name: id
      in: path
      description: ip allocation id
      required: true
      style: simple
      explode: false
      schema:
        type: string
    intervalParam:
      name: interval
      in: query
      description: 60 min by default, can be given as 1 - 60 min, oneDay, oneWeek,
        oneMonth, oneYear.
      required: false
      style: form
      explode: true
      schema:
        type: string
    startTimeParam:
      name: startTime
      in: query
      description: Show statistics from this start time (in milliseconds since epoch).
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int64
    networkIdParam:
      name: networkId
      in: path
      description: Logical Network Identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    cloudProviderOptionalRequestParam:
      name: provider
      in: query
      description: The cloud provider of the SDDC (AWS or ZeroCloud). Default value
        is AWS.
      required: false
      style: form
      explode: true
      schema:
        type: string
    minimumSeatsAvailableFilterParam:
      name: minimumSeatsAvailable
      in: query
      description: minimum seats available (used as a filter)
      required: false
      style: form
      explode: true
      schema:
        type: integer
  securitySchemes:
    api_key:
      type: apiKey
      name: csp-auth-token
      in: header
